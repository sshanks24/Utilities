<?xml version="1.0" encoding="iso-8859-1"?>
<!--Generated by DevModeler-->
<DataModel ProgrammaticName="iXPCray" version="245" majorId="3" minorId="9" readFunc="" writeFunc="enp_write" EngineeringDescription="This is the model for the Cray XDP." EngineeringReference="ST226I_C  XP Parameters.xls, ST123_iCOM_Events.xls">
	<LocalStringDefinitions Lang="en" Encoding="iso-8859-1">
		<String Id="1">Protocol</String>
		<String Id="2">Standard Version</String>
		<String Id="3">Standard Compliance</String>
		<String Id="4">Error Compliance</String>
		<String Id="5">Server Class</String>
		<String Id="6">Server Reset State</String>
		<String Id="7">Server Timeout</String>
		<String Id="8">Object Identifier 1</String>
		<String Id="9">Object Identifier 2</String>
		<String Id="10">Communication 2400 BAUD</String>
		<String Id="11">Communication 4800 BAUD</String>
		<String Id="12">Communication 9600 BAUD</String>
		<String Id="13">Communication 19200 BAUD</String>
		<String Id="14">Communication 38400 BAUD</String>
		<String Id="15">Communication 57600 BAUD</String>
		<String Id="16">Communication 115200 BAUD</String>
		<String Id="17">End Session</String>
		<String Id="18">Server Settings</String>
		<String Id="19">Communications BAUD Rate</String>
		<String Id="20">Communications Time Out</String>
		<String Id="21">Server Contact</String>
		<String Id="22">Server Phone Number</String>
		<String Id="23">Level 1</String>
		<String Id="24">Level 2</String>
		<String Id="25">UPS</String>
		<String Id="26">AIR</String>
		<String Id="27">PMP</String>
		<String Id="28">Normal</String>
		<String Id="29">Soft Reset</String>
		<String Id="30">None</String>
		<String Id="31">All</String>
		<String Id="32">Unsupported</String>
		<String Id="33">Supported</String>
		<String Id="34">Change-of-Value Register</String>
		<String Id="35">Change-of-Value Multi-cast</String>
		<String Id="36">Basic Commands</String>
		<String Id="37">Alarm Silence</String>
		<String Id="38">Battery Test</String>
		<String Id="39">Cancel</String>
		<String Id="40">Output On Delay</String>
		<String Id="41">Output Off Delay</String>
		<String Id="42">Output Off Mode</String>
		<String Id="43">Permanent</String>
		<String Id="44">Reboot</String>
		<String Id="45">Load Key</String>
		<String Id="46">External Air</String>
		<String Id="47">Ext Air Sensor A Temperature</String>
		<String Id="48">Air temperature as measured by external air sensor A.</String>
		<String Id="49">Relative humidity as measured by external air sensor A.</String>
		<String Id="50">Ext Air Sensor A Humidity</String>
		<String Id="51">Ext Air Sensor A Dew Point Temp</String>
		<String Id="52">Dew point temperature as measured by external air sensor A.</String>
		<String Id="53">Ext Air Sensor B Temperature</String>
		<String Id="54">Air temperature as measured by external air sensor B.</String>
		<String Id="55">Ext Air Sensor B Humidity</String>
		<String Id="56">Relative humidity as measured by external air sensor B.</String>
		<String Id="57">Ext Air Sensor B Dew Point Temp</String>
		<String Id="58">Dew point temperature as measured by external air sensor B.</String>
		<String Id="59">External Air Over Temp Threshold</String>
		<String Id="60">Threshold value used in the ([External Air Sensor A Over Temperature], [External Air Sensor B Over Temperature]...) events.</String>
		<String Id="61">External Air Sensor A Over Temperature</String>
		<String Id="62">[Ext Air Sensor A Temperature] has exceeded [External Air Over Temp Threshold].</String>
		<String Id="63">Ext Air Sensor A Over Temp - Event Control</String>
		<String Id="64">Enable/disable the activation of the [External Air Sensor A Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="65">Ext Air Sensor A Over Temp - Event Type</String>
		<String Id="66">The event type for the [External Air Sensor A Over Temperature] event.</String>
		<String Id="67">External Air Sensor B Over Temperature</String>
		<String Id="68">[Ext Air Sensor B Temperature] has exceeded [External Air Over Temp Threshold].</String>
		<String Id="69">Message</String>
		<String Id="70">Warning</String>
		<String Id="71">Alarm</String>
		<String Id="72">Ext Air Sensor B Over Temp - Event Control</String>
		<String Id="73">Enable/disable the activation of the [External Air Sensor B Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="74">Ext Air Sensor B Over Temp - Event  Type</String>
		<String Id="75">The event type for the [External Air Sensor B Over Temperature] event.</String>
		<String Id="76">Ext Air Under Temp Threshold</String>
		<String Id="77">Threshold value used in the ([Ext Air Sensor A Under Temperature], [Ext Air Sensor B Under Temperature]...) events.</String>
		<String Id="78">Ext Air Sensor A Under Temperature</String>
		<String Id="79">[Ext Air Sensor A Temperature] has dropped below [Ext Air Under Temp Threshold].</String>
		<String Id="80">Ext Air Sensor A Under Temp - Event Control</String>
		<String Id="81">Enable/disable the activation of the [Ext Air Sensor A Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="82">Ext Air Sensor A Under Temp - Event Type</String>
		<String Id="83">The event type for the [Ext Air Sensor A Under Temperature] event.</String>
		<String Id="84">Ext Air Sensor B Under Temperature</String>
		<String Id="85">[Ext Air Sensor B Temperature] has dropped below [Ext Air Under Temp Threshold].</String>
		<String Id="86">Ext Air Sensor B Under Temp - Event Control</String>
		<String Id="87">Enable/disable the activation of the [Ext Air Sensor B Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="88">Ext Air Sensor B Under Temp - Event Type</String>
		<String Id="89">The event type for the [Ext Air Sensor B Under Temperature] event.</String>
		<String Id="90">Ext Dew Point Over Temp Threshold</String>
		<String Id="91">Threshold value used in the [Ext Dew Point Over Temperature] event.</String>
		<String Id="92">Ext Dew Point Over Temperature</String>
		<String Id="93">At least one dew point temperature reading ([Ext Air Sensor A Dew Point Temp], [Ext Air Sensor B Dew Point Temp]...) has exceeded [Ext Dew Point Over Temp Threshold].</String>
		<String Id="94">Ext Dew Point Over Temp - Event Control</String>
		<String Id="95">Enable/disable the activation of the [Ext Dew Point Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="96">Ext Dew Point Over Temp - Event Type</String>
		<String Id="97">The event type for the [Ext Dew Point Over Temperature] event.</String>
		<String Id="98">External Air Sensor A Issue</String>
		<String Id="99">The external air sensor A is disconnected or the signal is out of range.</String>
		<String Id="100">Ext Air Sensor A Issue - Event Control</String>
		<String Id="101">Enable/disable the activation of the [External Air Sensor A Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="102">External Air Sensor A Issue - Event Type</String>
		<String Id="103">The event type for the [External Air Sensor A Issue] event.</String>
		<String Id="104">External Air Sensor B Issue</String>
		<String Id="105">The external air sensor B is disconnected or the signal is out of range.</String>
		<String Id="106">Ext Air Sensor B Issue - Event Control</String>
		<String Id="107">Enable/disable the activation of the [External Air Sensor B Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="108">External Air Sensor B Issue - Event Type</String>
		<String Id="109">The event type for the [External Air Sensor B Issue] event.</String>
		<String Id="110">Chilled Water</String>
		<String Id="111">Supply Chilled Water Temperature</String>
		<String Id="112">Supply chilled water temperature.</String>
		<String Id="113">Supply Chilled Water Over Temp Threshold</String>
		<String Id="114">Threshold value used in the [Supply Chilled Water Over Temp] event.</String>
		<String Id="115">Supply Chilled Water Over Temp</String>
		<String Id="116">[Supply Chilled Water Temperature] has exceeded [Supply Chilled Water Over Temp Threshold].</String>
		<String Id="117">Supply CW Over Temp - Event Control</String>
		<String Id="118">Enable/disable the activation of the [Supply Chilled Water Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="119">Supply CW Over Temp - Event Type</String>
		<String Id="120">The event type for the [Supply Chilled Water Over Temp] event.</String>
		<String Id="121">Supply Chilled Water Temp Sensor Issue</String>
		<String Id="122">The supply chilled water temperature sensor is disconnected or the signal is out of range.</String>
		<String Id="123">Supply CW Temp Sensor Issue - Event Control</String>
		<String Id="124">Enable/disable the activation of the [Supply Chilled Water Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="125">Supply CW Temp Sensor Issue - Event Type</String>
		<String Id="126">The event type for the [Supply Chilled Water Temp Sensor Issue] event.</String>
		<String Id="127">Refrigerant</String>
		<String Id="128">Supply Refrigerant Temperature</String>
		<String Id="129">Supply refrigerant temperature.</String>
		<String Id="130">Supply Refrig Over Temp Threshold</String>
		<String Id="131">Threshold value used in the [Supply Refrigerant Over Temp] event.</String>
		<String Id="132">Supply Refrigerant Over Temp</String>
		<String Id="133">Event that is activated when [Supply Refrigerant Temperature] exceeds [Supply Refrig Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.</String>
		<String Id="134">Supply Refrig Over Temp - Event Control</String>
		<String Id="135">Enable/disable the activation of the [Supply Refrigerant Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="136">Supply Refrig Over Temp - Event Type</String>
		<String Id="137">The event type for the [Supply Refrigerant Over Temp] event.</String>
		<String Id="138">Supply Refrigerant Under Temp</String>
		<String Id="139">[Supply Refrigerant Temperature] has dropped below a specified threshold.</String>
		<String Id="140">Supply Refrig Under Temp - Event Control</String>
		<String Id="141">Enable/disable the activation of the [Supply Refrigerant Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="142">Supply Refrig Under Temp - Event Type</String>
		<String Id="143">The event type for the [Supply Refrigerant Under Temp] event.</String>
		<String Id="144">Supply Refrigerant Temp Sensor Issue</String>
		<String Id="145">The supply refrigerant temperature sensor is disconnected or the signal is out of range.</String>
		<String Id="146">Supply Refrig Temp Sensor Issue - Event Control</String>
		<String Id="147">Enable/disable the activation of the [Supply Refrig Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="148">Supply Refrig Temp Sensor Issue - Event Type</String>
		<String Id="149">The event type for the [Supply Refrig Temp Sensor Issue] event.</String>
		<String Id="150">Fluid</String>
		<String Id="151">Supply Fluid Temperature</String>
		<String Id="152">Supply fluid temperature.</String>
		<String Id="153">Supply Fluid Over Temp Threshold</String>
		<String Id="154">Threshold value used in the [Supply Fluid Over Temp] event.</String>
		<String Id="155">Supply Fluid Over Temp</String>
		<String Id="156">[Supply Fluid Temperature] has exceeded [Supply Fluid Over Temp Threshold].</String>
		<String Id="157">Supply Fluid Over Temp - Event Control</String>
		<String Id="158">Enable/disable the activation of the [Supply Fluid Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="159">Supply Fluid Over Temp - Event Type</String>
		<String Id="160">The event type for the [Supply Fluid Over Temp] event.</String>
		<String Id="161">Supply Fluid Under Temp</String>
		<String Id="162">[Supply Fluid Temperature] has dropped below a specified threshold.</String>
		<String Id="163">Supply Fluid Under Temp - Event Control</String>
		<String Id="164">Enable/disable the activation of the [Supply Fluid Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="165">Supply Fluid Under Temp - Event Type</String>
		<String Id="166">The event type for the [Supply Fluid Under Temp] event.</String>
		<String Id="167">Supply Fluid Temp Sensor Issue</String>
		<String Id="168">The supply fluid temperature sensor is disconnected or the signal is out of range.</String>
		<String Id="169">Supply Fluid Temp Sensor Issue - Event Control</String>
		<String Id="170">Enable/disable the activation of the [Supply Fluid Temp Sensor State] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="171">Supply Fluid Temp Sensor Issue - Event Type</String>
		<String Id="172">The event type for the [Supply Fluid Temp Sensor Issue] event.</String>
		<String Id="173">Pump/Inverter</String>
		<String Id="174">Pump 1 State</String>
		<String Id="175">Pump 1 operational state.</String>
		<String Id="176">Pump 2 State</String>
		<String Id="177">Pump 2 operational state.</String>
		<String Id="178">Pump 1 Loss of Flow</String>
		<String Id="179">Loss of flow is detected in pump 1. The loss of flow condition occurs when no differential pressure is detected across the pump.</String>
		<String Id="180">Pump 1 Loss of Flow - Event Control</String>
		<String Id="181">Enable/disable the activation of the [Pump 1 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="182">Pump 1 Loss of Flow - Event Type</String>
		<String Id="183">The event type for the [Pump 1 Loss of Flow] event.</String>
		<String Id="184">Pump 2 Loss of Flow</String>
		<String Id="185">Loss of flow is detected in pump 2.  The loss of flow condition occurs when no differential pressure is detected across the pump. </String>
		<String Id="186">Pump 2 Loss of Flow - Event Control</String>
		<String Id="187">Enable/disable the activation of the [Pump 2 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="188">Pump 2 Loss of Flow - Event Type</String>
		<String Id="189">The event type for the [Pump 2 Loss of Flow] event.</String>
		<String Id="190">Pump Short Cycle</String>
		<String Id="191">Pumps have short cycled.  A short cycle is defined as turning on and off a number of times over a set time period.</String>
		<String Id="192">Pump Short Cycle - Event Control</String>
		<String Id="193">Enable/disable the activation of the [Pump Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="194">Pump Short Cycle - Event Type</String>
		<String Id="195">The event type for the [Pump Short Cycle] event.</String>
		<String Id="196">Compressors</String>
		<String Id="197">Compressor 1A State</String>
		<String Id="198">Compressor 1A operational state.</String>
		<String Id="199">Compressor 1B State</String>
		<String Id="200">Compressor 1B operational state.</String>
		<String Id="201">Compressor 2A State</String>
		<String Id="202">Compressor 2A operational state.</String>
		<String Id="203">Compressor 2B State</String>
		<String Id="204">Compressor 2B operational state.</String>
		<String Id="205">Compressor 1A High Head Pressure</String>
		<String Id="206">Compressor 1A high head pressure.</String>
		<String Id="207">Compressor 1A High Head Pressure - Event Control</String>
		<String Id="208">Enable/disable the activation of the [Compressor 1A High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="209">Compressor 1A High Head Pressure - Event Type</String>
		<String Id="210">The event type for the [Compressor 1A High Head Pressure] event.</String>
		<String Id="211">Compressor 1B High Head Pressure </String>
		<String Id="212">Compressor 1B high head pressure.</String>
		<String Id="213">Compressor 1B High Head Pressure - Event Control</String>
		<String Id="214">Enable/disable the activation of the [Compressor 1B High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="215">Compressor 1B High Head Pressure - Event Type</String>
		<String Id="216">The event type for the [Compressor 1B High Head Pressure] event.</String>
		<String Id="217">Compressor 2A High Head Pressure</String>
		<String Id="218">Compressor 2A high head pressure.</String>
		<String Id="219">Compressor 2A High Head Pressure - Event Control</String>
		<String Id="220">Enable/disable the activation of the [Compressor 2A High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="221">Compressor 2A High Head Pressure - Event Type</String>
		<String Id="222">The event type for the [Compressor 2A High Head Pressure] event.</String>
		<String Id="223">Compressor 2B High Head Pressure</String>
		<String Id="224">Compressor 2B high head pressure.</String>
		<String Id="225">Compressor 2B High Head Pressure - Event Control</String>
		<String Id="226">Enable/disable the activation of the [Compressor 2B High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="227">Compressor 2B High Head Pressure - Event Type</String>
		<String Id="228">The event type for the [Compressor 2B High Head Pressure] event.</String>
		<String Id="229">Compressor 1A Short Cycle</String>
		<String Id="230">Compressor 1A short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.</String>
		<String Id="231">Compressor 1A Short Cycle - Event Control</String>
		<String Id="232">Enable/disable the activation of the [Compressor 1A Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="233">Compressor 1A Short Cycle - Event Type</String>
		<String Id="234">The event type for the [Compressor 1A Short Cycle] event.</String>
		<String Id="235">Compressor 1B Short Cycle</String>
		<String Id="236">Compressor 1B short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  </String>
		<String Id="237">Compressor 1B Short Cycle - Event Control</String>
		<String Id="238">Enable/disable the activation of the [Compressor 1B Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="239">Compressor 1B Short Cycle - Event Type</String>
		<String Id="240">The event type for the [Compressor 1B Short Cycle] event.</String>
		<String Id="241">Compressor 2A Short Cycle</String>
		<String Id="242">Compressor 2A short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.</String>
		<String Id="243">Compressor 2A Short Cycle - Event Control</String>
		<String Id="244">Enable/disable the activation of the [Compressor 2A Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="245">Compressor 2A Short Cycle - Event Type</String>
		<String Id="246">The event type for the [Compressor 2A Short Cycle] event.</String>
		<String Id="247">Compressor 2B Short Cycle</String>
		<String Id="248">Compressor 2B short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.</String>
		<String Id="249">Compressor 2B Short Cycle - Event Control</String>
		<String Id="250">Enable/disable the activation of the [Compressor 2B Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="251">Compressor 2B Short Cycle - Event Type</String>
		<String Id="252">The event type for the [Compressor 2B Short Cycle] event.</String>
		<String Id="253">Tandem 1 Low Suction Pressure</String>
		<String Id="254">'Tandem compressors' 1 low suction pressure.</String>
		<String Id="255">Tandem 1 Low Suction Pressure - Event Control</String>
		<String Id="256">Enable/disable the activation of the [Tandem 1 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="257">Tandem 1 Low Suction Pressure - Event Type</String>
		<String Id="258">The event type for the [Tandem 1 Low Suction Pressure] event.</String>
		<String Id="259">Tandem 2 Low Suction Pressure</String>
		<String Id="260">'Tandem compressors' 2 low suction pressure.</String>
		<String Id="261">Tandem 2 Low Suction Pressure - Event Control</String>
		<String Id="262">Enable/disable the activation of the [Tandem 2 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="263">Tandem 2 Low Suction Pressure - Event Type</String>
		<String Id="264">The event type for the [Tandem 2 Low Suction Pressure] event.</String>
		<String Id="265">Hot Gas</String>
		<String Id="266">Hot Gas Valve 1 Open Position</String>
		<String Id="267">Hot gas valve 1 open position.</String>
		<String Id="268">Hot Gas Valve 2 Open Position</String>
		<String Id="269">Hot gas valve 2 open position.</String>
		<String Id="270">Hot Gas Solenoid Valve 1 Position</String>
		<String Id="271">Hot gas solenoid valve 1 position.</String>
		<String Id="272">closed</String>
		<String Id="273">open</String>
		<String Id="274">Hot Gas Solenoid Valve 2 Position</String>
		<String Id="275">Hot gas solenoid valve 2 position</String>
		<String Id="276">Chilled Water Control Valve Position</String>
		<String Id="277">Chilled water valve out of position.  Chilled water control valve position does not match expected value.</String>
		<String Id="278">Chilled Water Cntrl Valve Pos - Event Control</String>
		<String Id="279">Enable/disable the activation of the [Chilled Water Control Valve Position] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="280">Chilled Water Cntrl Valve Pos - Event Type</String>
		<String Id="281">The event type for the [Chilled Water Control Valve Position] event.</String>
		<String Id="282">System</String>
		<String Id="283">System Operating State</String>
		<String Id="284">Current operating state of the system. </String>
		<String Id="285">off</String>
		<String Id="286">on</String>
		<String Id="287">standby</String>
		<String Id="288">System Control Mode</String>
		<String Id="289">System control mode.</String>
		<String Id="290">Internal (Auto)</String>
		<String Id="291">External (Manual)</String>
		<String Id="292">Cooling Output</String>
		<String Id="293">Amount of cooling being applied relative to the unit's cooling capacity.</String>
		<String Id="294">Minimum Room Temperature Set Point</String>
		<String Id="295">Minimum desired room air temperature.  If the room air temperature falls below this set point, the unit will reduce the cooling.</String>
		<String Id="296">Auto Restart Delay</String>
		<String Id="297">If power is lost, the control will delay this amount of time after power is restored before restarting the unit.</String>
		<String Id="298">System Condensation Detected</String>
		<String Id="299">System condensation detected.</String>
		<String Id="300">System Condensation Detected - Event Control</String>
		<String Id="301">Enable/disable the activation of the [System Condensation Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="302">System Condensation Detected - Event Type</String>
		<String Id="303">The event type for the [System Condensation Detected] event.</String>
		<String Id="304">Shutdown - Loss Of Power</String>
		<String Id="305">System lost power.  This event becomes active when the unit is powered on following an unexpected loss of power.</String>
		<String Id="306">Shutdown - Loss Of Power - Event Control</String>
		<String Id="307">Enable/disable the activation of the [Shutdown - Loss Of Power] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="308">Shutdown - Loss Of Power - Event Type</String>
		<String Id="309">The event type for the [Shutdown - Loss Of Power] event.</String>
		<String Id="310">System Event Acknowledge/Reset</String>
		<String Id="311">Reset and/or acknowledge all events.</String>
		<String Id="312">Reset</String>
		<String Id="313">Acknowledge</String>
		<String Id="314">Customer Input 1</String>
		<String Id="315">unavailable</String>
		<String Id="316">Ext Air Over Temp Threshold</String>
		<String Id="317">Ext Air Sensor A Over Temperature</String>
		<String Id="318">Ext Air Sensor B Over Temperature</String>
		<String Id="319">Ext Air Sensor A Issue</String>
		<String Id="320">Ext Air Sensor A Issue - Event Type</String>
		<String Id="321">Ext Air Sensor B Issue</String>
		<String Id="322">Ext Air Sensor B Issue - Event Type</String>
		<String Id="323">Threshold value used in the ([Ext Air Sensor A Over Temperature], [Ext Air Sensor B Over Temperature]...) events.</String>
		<String Id="324">Enable/disable the activation of the [Ext Air Sensor A Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="325">The event type for the [Ext Air Sensor A Over Temperature] event.</String>
		<String Id="326">[Ext Air Sensor B Temperature] has exceeded [Ext Air Over Temp Threshold].</String>
		<String Id="327">Enable/disable the activation of the [Ext Air Sensor B Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="328">The event type for the [Ext Air Sensor B Over Temperature] event.</String>
		<String Id="329">Enable/disable the activation of the [Ext Air Sensor A Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="330">The event type for the [Ext Air Sensor A Issue] event.</String>
		<String Id="331">Enable/disable the activation of the [Ext Air Sensor B Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="332">The event type for the [Ext Air Sensor B Issue] event.</String>
		<String Id="333">Circuit 1 Low Suction Pressure</String>
		<String Id="334">Compressor circuit 1 low suction pressure.</String>
		<String Id="335">Circuit 1 Low Suction Pressure - Event Control</String>
		<String Id="336">Enable/disable the activation of the [Circuit 1 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="337">Circuit 1 Low Suction Pressure - Event Type</String>
		<String Id="338">The event type for the [Circuit 1 Low Suction Pressure] event.</String>
		<String Id="339">Circuit 2 Low Suction Pressure</String>
		<String Id="340">Compressor circuit 2 low suction pressure.</String>
		<String Id="341">Circuit 2 Low Suction Pressure - Event Control</String>
		<String Id="342">Enable/disable the activation of the [Circuit 2 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="343">Circuit 2 Low Suction Pressure - Event Type</String>
		<String Id="344">The event type for the [Circuit 2 Low Suction Pressure] event.</String>
		<String Id="345">[Ext Air Sensor A Temperature] has exceeded [Ext Air Over Temp Threshold].</String>
		<String Id="346">Monitoring address.</String>
		<String Id="347" />
		<String Id="348">Monitoring Address</String>
		<String Id="349">Enable/disable the activation of the [Input Contact 01] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="350">Input Contact 01 - Event Control</String>
		<String Id="351">Input Contact 01 - Event Type</String>
		<String Id="352">The event type for the [Input Contact 01] event.</String>
		<String Id="353">Smoke detected.</String>
		<String Id="354">Smoke Detected</String>
		<String Id="355">Smoke Detected - Event Control</String>
		<String Id="356">Smoke Detected - Event Type</String>
		<String Id="357">Enable/disable the activation of the [Smoke Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="358">The event type for the [Smoke Detected] event.</String>
		<String Id="359">Water Under Floor</String>
		<String Id="360">Water under the floor is detected.</String>
		<String Id="361">Water Under Floor - Event Control</String>
		<String Id="362">Enable/disable the activation of the [Water Under Floor] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="363">Water Under Floor - Event Type</String>
		<String Id="364">The event type for the [Water Under Floor] event.</String>
		<String Id="365">Service Required</String>
		<String Id="366">Unit requires servicing.</String>
		<String Id="367">Service Required - Event Control</String>
		<String Id="368">Enable/disable the activation of the [Service Required] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="369">Service Required  - Event Type</String>
		<String Id="370">The event type for the [Service Required] event.</String>
		<String Id="371">Fan Issue</String>
		<String Id="372">One or more fans are not operating within their operational parameters.</String>
		<String Id="373">Fan Issue - Event Control</String>
		<String Id="374">Enable/disable the activation of the [Fan Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="375">Fan Issue - Event Type</String>
		<String Id="376">The event type for the [Fan Issue] event.</String>
		<String Id="377">Customer Input 1 - Event Control</String>
		<String Id="378">Enable/disable the activation of the [Customer Input 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="379">Customer Input 1 - Event Type</String>
		<String Id="380">The event type for the [Customer Input 1] event.</String>
		<String Id="381">Customer input 1.</String>
		<String Id="382">Dew point temperature, using the highest reading from all sensors.</String>
		<String Id="383">Dew Point Temperature</String>
		<String Id="384">Calculated Next Maintenance Month</String>
		<String Id="385">Calculated month of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Year].</String>
		<String Id="386">Calculated Next Maintenance Year</String>
		<String Id="387">Calculated year of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Month].</String>
		<String Id="388">Maintenance Ramp</String>
		<String Id="389">The ratio of operations performed to the calculated operations available between maintenance intervals.</String>
		<String Id="390">Next Scheduled Maintenance</String>
		<String Id="391">Private</String>
		<String Id="392">Local Display Temperature Units</String>
		<String Id="393">Temperature units being used on the local display for the system.  The local display is the one that is hardwired to the system.  It is not the Velocity client display.</String>
		<String Id="394">Degrees C</String>
		<String Id="395">Degrees F</String>
		<String Id="396">Calculated Next Maintenance</String>
		<String Id="397">Inverters</String>
		<String Id="398">Inverter 1 Short Cycle</String>
		<String Id="399">Inverter for pump 1 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period.</String>
		<String Id="400">Inverter 1 Short Cycle - Event Control</String>
		<String Id="401">Enable/disable the activation of the [Inverter 1 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="402">Inverter 1 Short Cycle - Event Type</String>
		<String Id="403">The event type for the [Inverter 1 Short Cycle] event.</String>
		<String Id="404">Inverter 2 Short Cycle</String>
		<String Id="405">Inverter for pump 2 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period.</String>
		<String Id="406">Inverter 2 Short Cycle - Event Control</String>
		<String Id="407">Enable/disable the activation of the [Inverter 2 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="408">Inverter 2 Short Cycle - Event Type</String>
		<String Id="409">Refrigerant Temperature Bands</String>
		<String Id="410">Supply Refrig Temp Band 1</String>
		<String Id="411">Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point].</String>
		<String Id="412">Supply Refrig Over Temp Band 1</String>
		<String Id="413">[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 1].</String>
		<String Id="414">Supply Refrig Over Temp Band 1 - Event Control</String>
		<String Id="415">Enable/disable the activation of the [Supply Refrig Over Temp Band 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="416">Supply Refrig Over Temp Band 1 - Event Type</String>
		<String Id="417">The event type for the [Supply Refrig Over Temp Band 1] event.</String>
		<String Id="418">Supply Refrig Temp Set Point</String>
		<String Id="419">Desired supply refrigerant temperature.</String>
		<String Id="420">The event type for the [Inverter 2 Short Cycle] event.</String>
		<String Id="421">Supply Refrig Under Temp Band 1</String>
		<String Id="422">[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 1].</String>
		<String Id="423">Supply Refrig Under Temp Band 1 - Event Control</String>
		<String Id="424">Enable/disable the activation of the [Supply Refrig Under Temp Band 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="425">Supply Refrig Under Temp Band 1 - Event Type</String>
		<String Id="426">The event type for the [Supply Refrig Under Temp Band 1] event.</String>
		<String Id="427">Supply Refrig Temp Band 2</String>
		<String Id="428">Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point].</String>
		<String Id="429">Supply Refrig Over Temp Band 2</String>
		<String Id="430">Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 2].</String>
		<String Id="431">Supply Refrig Over Temp Band 2 - Event Control</String>
		<String Id="432">Enable/disable the activation of the [Supply Refrig Over Temp Band 2] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="433">Supply Refrig Over Temp Band 2 - Event Type</String>
		<String Id="434">The event type for the [Supply Refrig Over Temp Band 2] event.</String>
		<String Id="435">Supply Refrig Under Temp Band 2</String>
		<String Id="436">[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 2].</String>
		<String Id="437">Supply Refrig Under Temp Band 2 - Event Control</String>
		<String Id="438">Enable/disable the activation of the [Supply Refrig Under Temp Band 2] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.</String>
		<String Id="439">Supply Refrig Under Temp Band 2 - Event Type</String>
		<String Id="440">The event type for the [Supply Refrig Under Temp Band 2] event.</String>
		<String Id="441">Supply Chilled Water Loss of Flow</String>
		<String Id="442">Supply chilled water flow is too low.</String>
		<String Id="443">Pump 1</String>
		<String Id="444">Pump 2</String>
		<String Id="445">Asset Management</String>
		<String Id="446">Software Application Version</String>
		<String Id="447">Software application version</String>
		<String Id="448">Hardware Platform</String>
		<String Id="449">Hardware platform.</String>
		<String Id="450">Bootloader Version</String>
		<String Id="451">Bootloader version.</String>
		<String Id="452">Kernel Version</String>
		<String Id="453">Kernel version.</String>
		<String Id="454">Root File System Version</String>
		<String Id="455">Root file system version.</String>
		<String Id="456">iCOM Software Framework Version</String>
		<String Id="457">iCOM software framework version.</String>
		<String Id="458">Time</String>
		<String Id="459">Inverter 1</String>
		<String Id="460">Inverter/Pump 1 Operational State</String>
		<String Id="461">Inverter/Pump 1 operational state.</String>
		<String Id="462">Off</String>
		<String Id="463">Enable Inverter</String>
		<String Id="464">Power Inverter</String>
		<String Id="465">Activate Pump</String>
		<String Id="466">Pump Setup</String>
		<String Id="467">Pump setup.</String>
		<String Id="468">1 Pump</String>
		<String Id="469">1 Pump and Inverter</String>
	</LocalStringDefinitions>
	<LocalEnumDefinitions>
		<EnumStateDefn Name="stdCompliance" Id="1">
			<EnumState Value="1">24</EnumState>
			<EnumState Value="2">23</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="ErrorCompliance" Id="2">
			<EnumState Value="1">24</EnumState>
			<EnumState Value="2">23</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="serverClass" Id="3">
			<EnumState Value="1">25</EnumState>
			<EnumState Value="2">26</EnumState>
			<EnumState Value="3">27</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="serverState" Id="4">
			<EnumState Value="0">28</EnumState>
			<EnumState Value="1">29</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="covRegistration" Id="5">
			<EnumState Value="0">30</EnumState>
			<EnumState Value="1">31</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="SupportedState" Id="6">
			<EnumState Value="0">32</EnumState>
			<EnumState Value="1">33</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="covMultiCastRegistration" Id="7">
			<EnumState Value="0">30</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="outputOffMode" Id="8">
			<EnumState Value="0">43</EnumState>
			<EnumState Value="1">44</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="eventType" Id="9">
			<EnumState Value="0">69</EnumState>
			<EnumState Value="1">70</EnumState>
			<EnumState Value="2">71</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="closedOpen" Id="10">
			<EnumState Value="0">272</EnumState>
			<EnumState Value="1">273</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="operatingState" Id="11">
			<EnumState Value="0">285</EnumState>
			<EnumState Value="1">286</EnumState>
			<EnumState Value="2">287</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="autoManual" Id="12">
			<EnumState Value="0">290</EnumState>
			<EnumState Value="1">291</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="resetAck" Id="13">
			<EnumState Value="2">312</EnumState>
			<EnumState Value="4">313</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="tempUnits" Id="14">
			<EnumState Value="0">394</EnumState>
			<EnumState Value="1">395</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="invPumpState" Id="15">
			<EnumState Value="0">462</EnumState>
			<EnumState Value="1">463</EnumState>
			<EnumState Value="2">464</EnumState>
			<EnumState Value="3">465</EnumState>
		</EnumStateDefn>
		<EnumStateDefn Name="pumpSetup" Id="16">
			<EnumState Value="0">468</EnumState>
			<EnumState Value="1">469</EnumState>
		</EnumStateDefn>
	</LocalEnumDefinitions>
	<LocalUnitOfMeasures>
	</LocalUnitOfMeasures>
	<LocalSpecialValueDefinitions>
		<SpecialValueDefn Name="icomSensorSpcVal" Id="1">
			<SpecialValue Value="32768" SpecialOp="4098">4098</SpecialValue>
			<SpecialValue Value="32769" SpecialOp="4099">4099</SpecialValue>
			<SpecialValue Value="32770" SpecialOp="4100">4100</SpecialValue>
			<SpecialValue Value="32771" SpecialOp="4097">4097</SpecialValue>
		</SpecialValueDefn>
		<SpecialValueDefn Name="icomSensorSpcVal2" Id="2">
			<SpecialValue Value="32768" SpecialOp="4098">4098</SpecialValue>
			<SpecialValue Value="32769" SpecialOp="4098">4098</SpecialValue>
			<SpecialValue Value="32770" SpecialOp="4098">4098</SpecialValue>
			<SpecialValue Value="32771" SpecialOp="4097">4097</SpecialValue>
		</SpecialValueDefn>
		<SpecialValueDefn Name="icomCharSpcVal" Id="3">
			<SpecialValue Value="65409" SpecialOp="4098">4098</SpecialValue>
			<SpecialValue Value="32771" SpecialOp="4097">4097</SpecialValue>
		</SpecialValueDefn>
	</LocalSpecialValueDefinitions>
	<LocalEventMappings>
	</LocalEventMappings>
	<ReportDescriptor ProgrammaticName="Protocol" id="131" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="1">
		<dataPoint type="DataUint16" id="1">
			<DataUint16>
				<DataIdentifier>1</DataIdentifier>
				<ProgrammaticName>standardVersion</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>2</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>15</ValueMax>
				<ValueMin>15</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>15</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
		<dataPoint type="DataEnum" id="2">
			<DataEnum>
				<DataIdentifier>2</DataIdentifier>
				<ProgrammaticName>stdCompliance</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>3</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>2</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>1</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="3">
			<DataEnum>
				<DataIdentifier>3</DataIdentifier>
				<ProgrammaticName>errorCompliance</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>4</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>2</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>2</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4">
			<DataEnum>
				<DataIdentifier>4</DataIdentifier>
				<ProgrammaticName>serverClass</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>5</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>2</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>3</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="5">
			<DataEnum>
				<DataIdentifier>5</DataIdentifier>
				<ProgrammaticName>serverState</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>6</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior>SessionClear</ClientBehavior>
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataUint16" id="6">
			<DataUint16>
				<DataIdentifier>6</DataIdentifier>
				<ProgrammaticName>serverTimeout</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>7</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>100</ValueMax>
				<ValueMin>1</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>16</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
		<dataPoint type="DataUint16" id="7">
			<DataUint16>
				<DataIdentifier>7</DataIdentifier>
				<ProgrammaticName>oid1</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>8</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>65535</ValueMax>
				<ValueMin>1</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>3</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
		<dataPoint type="DataUint16" id="8">
			<DataUint16>
				<DataIdentifier>8</DataIdentifier>
				<ProgrammaticName>oid2</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>9</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>65535</ValueMax>
				<ValueMin>1</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>9</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
		<DataBitGroup ProgrammaticName="commBps" readFunc="enp_read" writeFunc="enp_write">
			<dataPoint type="DataEnum" id="9">
				<DataEnum>
					<DataIdentifier>9</DataIdentifier>
					<ProgrammaticName>bps2400</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>10</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="10">
				<DataEnum>
					<DataIdentifier>10</DataIdentifier>
					<ProgrammaticName>bps4800</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>11</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="11">
				<DataEnum>
					<DataIdentifier>11</DataIdentifier>
					<ProgrammaticName>bps9600</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>12</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="12">
				<DataEnum>
					<DataIdentifier>12</DataIdentifier>
					<ProgrammaticName>bps19200</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>13</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="13">
				<DataEnum>
					<DataIdentifier>13</DataIdentifier>
					<ProgrammaticName>bps38400</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>14</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>1</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="14">
				<DataEnum>
					<DataIdentifier>14</DataIdentifier>
					<ProgrammaticName>bps57600</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>15</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>True</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="15">
				<DataEnum>
					<DataIdentifier>15</DataIdentifier>
					<ProgrammaticName>bps115200</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>16</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>6</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>True</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction>E2s_CommBpsReadAction</ReadFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
		</DataBitGroup>
		<dataPoint type="DataInt16" id="17">
			<DataInt16>
				<DataIdentifier>17</DataIdentifier>
				<ProgrammaticName>endSession</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>17</TextID>
				</DataLabel>
				<AccessDefn>EX</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>32767</ValueMax>
				<ValueMin>-32768</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>E2sSess_EndSessionHndlr</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<DataBitGroup ProgrammaticName="changeOfValue" readFunc="enp_read" writeFunc="enp_write">
			<dataPoint type="DataEnum" id="18">
				<DataEnum>
					<DataIdentifier>18</DataIdentifier>
					<ProgrammaticName>register</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>34</TextID>
					</DataLabel>
					<AccessDefn>WO</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>5</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>E2sSess_RegisterClient4COV</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="19">
				<DataEnum>
					<DataIdentifier>19</DataIdentifier>
					<ProgrammaticName>multicast</ProgrammaticName>
					<EngineeringDescription />
					<EngineeringReference />
					<Description>
						<TextID>0</TextID>
					</Description>
					<DataLabel>
						<TextID>35</TextID>
					</DataLabel>
					<AccessDefn>WO</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>0</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>7</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>True</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>E2sSess_RegisterClient4COV</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
		</DataBitGroup>
		<dataPoint type="DataUint16" id="1000">
			<DataUint16>
				<DataIdentifier>1000</DataIdentifier>
				<ProgrammaticName>changeOfValuePace</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>4096</TextID>
				</Description>
				<DataLabel>
					<TextID>4096</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>65535</ValueMax>
				<ValueMin>0</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>10</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="SrvSettings" id="133" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="18">
		<dataPoint type="DataInt16" id="20">
			<DataInt16>
				<DataIdentifier>20</DataIdentifier>
				<ProgrammaticName>commBps</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>19</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>32767</ValueMax>
				<ValueMin>-32768</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>E2s_SetBpsRateHndlr</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataUint16" id="21">
			<DataUint16>
				<DataIdentifier>21</DataIdentifier>
				<ProgrammaticName>commTimeOut</ProgrammaticName>
				<EngineeringDescription />
				<EngineeringReference />
				<Description>
					<TextID>0</TextID>
				</Description>
				<DataLabel>
					<TextID>20</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<UnitsOfMeasure>0</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>4200</ValueMax>
				<ValueMin>30</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>60</ValueInitializer>
				<WriteFunction>E2s_SrvCommTimeOutHndlr</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="ExtAir" id="16384" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="46">
		<dataPoint type="DataInt16" id="4867">
			<DataInt16>
				<DataIdentifier>4867</DataIdentifier>
				<ProgrammaticName>val_sys_tmp_dewPnt</ProgrammaticName>
				<EngineeringDescription>Dew point temperature, using the highest reading from all sensors.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_DEW_TD_R_T</EngineeringReference>
				<Description>
					<TextID>5811</TextID>
				</Description>
				<DataLabel>
					<TextID>5810</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4709">
			<DataInt16>
				<DataIdentifier>4709</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_airMinSetPt</ProgrammaticName>
				<EngineeringDescription>Minimum desired room air temperature.  If the room air temperature falls below this set point, the unit will reduce the cooling.
The temperature is measured by external air sensor(s).</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_TEMPSET</EngineeringReference>
				<Description>
					<TextID>5459</TextID>
				</Description>
				<DataLabel>
					<TextID>5458</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>2670</ValueMax>
				<ValueMin>1000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1560</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4594">
			<DataInt16>
				<DataIdentifier>4594</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_airA</ProgrammaticName>
				<EngineeringDescription>Air temperature as measured by external air sensor A.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpAirOverA.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HT_TEMP</EngineeringReference>
				<Description>
					<TextID>5219</TextID>
				</Description>
				<DataLabel>
					<TextID>5218</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>-32768</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataUint16" id="4595">
			<DataUint16>
				<DataIdentifier>4595</DataIdentifier>
				<ProgrammaticName>val_ext_pct_hmdtyAirA</ProgrammaticName>
				<EngineeringDescription>Relative humidity as measured by external air sensor A.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HT_HUMI</EngineeringReference>
				<Description>
					<TextID>5221</TextID>
				</Description>
				<DataLabel>
					<TextID>5220</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4132</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>1000</ValueMax>
				<ValueMin>0</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4596">
			<DataInt16>
				<DataIdentifier>4596</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_dewPntA</ProgrammaticName>
				<EngineeringDescription>Dew point temperature as measured by external air sensor A.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpDewPntOver..</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_SENSADEWPO</EngineeringReference>
				<Description>
					<TextID>5223</TextID>
				</Description>
				<DataLabel>
					<TextID>5222</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>-32768</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4597">
			<DataInt16>
				<DataIdentifier>4597</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_airB</ProgrammaticName>
				<EngineeringDescription>Air temperature as measured by external air sensor B.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpAirOverB.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_EEAPTEMP</EngineeringReference>
				<Description>
					<TextID>5225</TextID>
				</Description>
				<DataLabel>
					<TextID>5224</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>-32768</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataUint16" id="4598">
			<DataUint16>
				<DataIdentifier>4598</DataIdentifier>
				<ProgrammaticName>val_ext_pct_hmdtyAirB</ProgrammaticName>
				<EngineeringDescription>Relative humidity as measured by external air sensor B.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_EEAPHUMI</EngineeringReference>
				<Description>
					<TextID>5227</TextID>
				</Description>
				<DataLabel>
					<TextID>5226</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4132</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>1000</ValueMax>
				<ValueMin>0</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4599">
			<DataInt16>
				<DataIdentifier>4599</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_dewPntB</ProgrammaticName>
				<EngineeringDescription>Dew point temperature as measured by external air sensor B.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpDewPntOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_SENSBDEWPO</EngineeringReference>
				<Description>
					<TextID>5229</TextID>
				</Description>
				<DataLabel>
					<TextID>5228</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>-32768</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4600">
			<DataInt16>
				<DataIdentifier>4600</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_airOverThrshld</ProgrammaticName>
				<EngineeringDescription>Threshold value used in the ([External Air Sensor A Over Temperature], [External Air Sensor B Over Temperature]...) events.
See events evt_ext_tmpAirOverA and evt_ext_tmpAirOverB.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HITEMP</EngineeringReference>
				<Description>
					<TextID>323</TextID>
				</Description>
				<DataLabel>
					<TextID>316</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues />
				<ValueMax>3500</ValueMax>
				<ValueMin>100</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2670</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4601">
			<DataEvent16>
				<DataIdentifier>4601</DataIdentifier>
				<ProgrammaticName>evt_ext_tmpAirOverA</ProgrammaticName>
				<EngineeringDescription>[Ext Air Sensor A Temperature] has exceeded [External Air Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_ext_tmp_airOverThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airA.

The behavior of this event may optionally be modified by:
st_ext_tmpAirOverEnableA
st_ext_tmpAirOverTypeA

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HTE</EngineeringReference>
				<Description>
					<TextID>345</TextID>
				</Description>
				<DataLabel>
					<TextID>317</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4602">
			<DataEnum>
				<DataIdentifier>4602</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirOverEnableA</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [External Air Sensor A Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirOverA.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_022</EngineeringReference>
				<Description>
					<TextID>324</TextID>
				</Description>
				<DataLabel>
					<TextID>5234</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4603">
			<DataEnum>
				<DataIdentifier>4603</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirOverTypeA</ProgrammaticName>
				<EngineeringDescription>The event type for the [External Air Sensor A Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirOverA.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HTE_et</EngineeringReference>
				<Description>
					<TextID>325</TextID>
				</Description>
				<DataLabel>
					<TextID>5236</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4604">
			<DataEvent16>
				<DataIdentifier>4604</DataIdentifier>
				<ProgrammaticName>evt_ext_tmpAirOverB</ProgrammaticName>
				<EngineeringDescription>[Ext Air Sensor B Temperature] has exceeded [External Air Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_ext_tmp_airOverThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airB.

The behavior of this event may optionally be modified by:
st_ext_tmpAirOverEnableB
st_ext_tmpAirOverTypeB

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_HITESEB</EngineeringReference>
				<Description>
					<TextID>326</TextID>
				</Description>
				<DataLabel>
					<TextID>318</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4605">
			<DataEnum>
				<DataIdentifier>4605</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirOverEnableB</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [External Air Sensor B Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirOverB.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_191</EngineeringReference>
				<Description>
					<TextID>327</TextID>
				</Description>
				<DataLabel>
					<TextID>5243</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4606">
			<DataEnum>
				<DataIdentifier>4606</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirOverTypeB</ProgrammaticName>
				<EngineeringDescription>The event type for the [External Air Sensor B Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirOverB.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_HITESEB_et</EngineeringReference>
				<Description>
					<TextID>328</TextID>
				</Description>
				<DataLabel>
					<TextID>5245</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataInt16" id="4607">
			<DataInt16>
				<DataIdentifier>4607</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_airUnderThrshld</ProgrammaticName>
				<EngineeringDescription>Threshold value used in the ([Ext Air Sensor A Under Temperature], [Ext Air Sensor B Under Temperature]...) events.
See events evt_ext_tmpAirUnderA and evt_ext_tmpAirUnderB.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_LOTEMP</EngineeringReference>
				<Description>
					<TextID>5248</TextID>
				</Description>
				<DataLabel>
					<TextID>5247</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues />
				<ValueMax>3500</ValueMax>
				<ValueMin>100</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1280</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4608">
			<DataEvent16>
				<DataIdentifier>4608</DataIdentifier>
				<ProgrammaticName>evt_ext_tmpAirUnderA</ProgrammaticName>
				<EngineeringDescription>[Ext Air Sensor A Temperature] has dropped below [Ext Air Under Temp Threshold].  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_ext_tmp_airUnderThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airA.

The behavior of this event may optionally be modified by:
st_ext_tmpAirUnderEnableA
st_ext_tmpAirUnderTypeA

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_LTE</EngineeringReference>
				<Description>
					<TextID>5250</TextID>
				</Description>
				<DataLabel>
					<TextID>5249</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4609">
			<DataEnum>
				<DataIdentifier>4609</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirUnderEnableA</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Ext Air Sensor A Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirUnderA.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_023</EngineeringReference>
				<Description>
					<TextID>5252</TextID>
				</Description>
				<DataLabel>
					<TextID>5251</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4610">
			<DataEnum>
				<DataIdentifier>4610</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirUnderTypeA</ProgrammaticName>
				<EngineeringDescription>The event type for the [Ext Air Sensor A Under Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirUnderA.

iCOM specific:
iCOM only supports message, warning, and alarm</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_LTE_et</EngineeringReference>
				<Description>
					<TextID>5254</TextID>
				</Description>
				<DataLabel>
					<TextID>5253</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4611">
			<DataEvent16>
				<DataIdentifier>4611</DataIdentifier>
				<ProgrammaticName>evt_ext_tmpAirUnderB</ProgrammaticName>
				<EngineeringDescription>[Ext Air Sensor B Temperature] has dropped below [Ext Air Under Temp Threshold].  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_ext_tmp_AirUnderThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airB.

The behavior of this event may optionally be modified by:
st_ext_tmpAirUnderEnableB
st_ext_tmpAirUnderTypeB

iCOM specific:  The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_LOTESEB</EngineeringReference>
				<Description>
					<TextID>5256</TextID>
				</Description>
				<DataLabel>
					<TextID>5255</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4612">
			<DataEnum>
				<DataIdentifier>4612</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirUnderEnableB</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Ext Air Sensor B Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirUnderB.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_192</EngineeringReference>
				<Description>
					<TextID>5258</TextID>
				</Description>
				<DataLabel>
					<TextID>5257</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4613">
			<DataEnum>
				<DataIdentifier>4613</DataIdentifier>
				<ProgrammaticName>st_ext_tmpAirUnderTypeB</ProgrammaticName>
				<EngineeringDescription>The event type for the [Ext Air Sensor B Under Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirUnderB.

iCOM specific:
iCOM only supports message, warning, and alarm</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_LOTESEB_et</EngineeringReference>
				<Description>
					<TextID>5260</TextID>
				</Description>
				<DataLabel>
					<TextID>5259</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataInt16" id="4614">
			<DataInt16>
				<DataIdentifier>4614</DataIdentifier>
				<ProgrammaticName>val_ext_tmp_dewPntOverThrshld</ProgrammaticName>
				<EngineeringDescription>Threshold value used in the [Ext Dew Point Over Temperature] event.
See event evt_ext_tmpDewPntOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HIROOMDEW</EngineeringReference>
				<Description>
					<TextID>5262</TextID>
				</Description>
				<DataLabel>
					<TextID>5261</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues />
				<ValueMax>3500</ValueMax>
				<ValueMin>100</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1830</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4615">
			<DataEvent16>
				<DataIdentifier>4615</DataIdentifier>
				<ProgrammaticName>evt_ext_tmpDewPntOver</ProgrammaticName>
				<EngineeringDescription>At least one dew point temperature reading ([Ext Air Sensor A Dew Point Temp], [Ext Air Sensor B Dew Point Temp]...) has exceeded [Ext Dew Point Over Temp Threshold].  The event is deactivated when all causal dew point temperatures drop below the threshold.

Event threshold is specified in val_ext_tmp_dewPntOverThrshld.
Values used in comparison against threshold are specified in val_ext_tmp_dewPntA and val_ext_tmp_dewPntB.

The behavior of this event may optionally be modified by:
st_ext_tmpDewPntOverEnable
st_ext_tmpDewPntOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_HI_DEW</EngineeringReference>
				<Description>
					<TextID>5264</TextID>
				</Description>
				<DataLabel>
					<TextID>5263</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4616">
			<DataEnum>
				<DataIdentifier>4616</DataIdentifier>
				<ProgrammaticName>st_ext_tmpDewPntOverEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Ext Dew Point Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpDewPntOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_197</EngineeringReference>
				<Description>
					<TextID>5266</TextID>
				</Description>
				<DataLabel>
					<TextID>5265</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4617">
			<DataEnum>
				<DataIdentifier>4617</DataIdentifier>
				<ProgrammaticName>st_ext_tmpDewPntOverType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Ext Dew Point Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpDewPntOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_HI_DEW_et</EngineeringReference>
				<Description>
					<TextID>5268</TextID>
				</Description>
				<DataLabel>
					<TextID>5267</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4618">
			<DataEvent16>
				<DataIdentifier>4618</DataIdentifier>
				<ProgrammaticName>evt_ext_snsrAirIssueA</ProgrammaticName>
				<EngineeringDescription>The external air sensor A is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_ext_snsrAirIssueEnableA
st_ext_snsrAirIssueTypeA

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_WAEEAPFA</EngineeringReference>
				<Description>
					<TextID>5270</TextID>
				</Description>
				<DataLabel>
					<TextID>319</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4619">
			<DataEnum>
				<DataIdentifier>4619</DataIdentifier>
				<ProgrammaticName>st_ext_snsrAirIssueEnableA</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [External Air Sensor A Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_snsrAirIssueA.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_032</EngineeringReference>
				<Description>
					<TextID>329</TextID>
				</Description>
				<DataLabel>
					<TextID>5271</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4620">
			<DataEnum>
				<DataIdentifier>4620</DataIdentifier>
				<ProgrammaticName>st_ext_snsrAirIssueTypeA</ProgrammaticName>
				<EngineeringDescription>The event type for the [External Air Sensor A Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_snsrAirIssueA.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_WAEEAPFA_et</EngineeringReference>
				<Description>
					<TextID>330</TextID>
				</Description>
				<DataLabel>
					<TextID>320</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4621">
			<DataEvent16>
				<DataIdentifier>4621</DataIdentifier>
				<ProgrammaticName>evt_ext_snsrAirIssueB</ProgrammaticName>
				<EngineeringDescription>The external air sensor B is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_ext_snsrAirIssueEnableB
st_ext_snsrAirIssueTypeB

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_SENSORB</EngineeringReference>
				<Description>
					<TextID>5276</TextID>
				</Description>
				<DataLabel>
					<TextID>321</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4622">
			<DataEnum>
				<DataIdentifier>4622</DataIdentifier>
				<ProgrammaticName>st_ext_snsrAirIssueEnableB</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [External Air Sensor B Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_snsrAirIssueB.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_194</EngineeringReference>
				<Description>
					<TextID>331</TextID>
				</Description>
				<DataLabel>
					<TextID>5277</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4623">
			<DataEnum>
				<DataIdentifier>4623</DataIdentifier>
				<ProgrammaticName>st_ext_snsrAirIssueTypeB</ProgrammaticName>
				<EngineeringDescription>The event type for the [External Air Sensor B Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_snsrAirIssueB.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_SENSORB_et</EngineeringReference>
				<Description>
					<TextID>332</TextID>
				</Description>
				<DataLabel>
					<TextID>322</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="ChilledWater" id="16385" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="110">
		<dataPoint type="DataInt16" id="4624">
			<DataInt16>
				<DataIdentifier>4624</DataIdentifier>
				<ProgrammaticName>val_clng_tmp_supCW</ProgrammaticName>
				<EngineeringDescription>Supply chilled water temperature.

iCOM Specific Behavior: This value is used in determining activation of event evt_clng_tmpSupCWOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_SUPCHITEMP</EngineeringReference>
				<Description>
					<TextID>5282</TextID>
				</Description>
				<DataLabel>
					<TextID>5281</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>-32768</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4625">
			<DataInt16>
				<DataIdentifier>4625</DataIdentifier>
				<ProgrammaticName>val_clng_tmp_supCWOverThrshld</ProgrammaticName>
				<EngineeringDescription>Threshold value used in the [Supply Chilled Water Over Temp] event.
See event evt_clng_tmpSupCWOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HICHIWTEMP</EngineeringReference>
				<Description>
					<TextID>5284</TextID>
				</Description>
				<DataLabel>
					<TextID>5283</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>3500</ValueMax>
				<ValueMin>100</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1560</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4626">
			<DataEvent16>
				<DataIdentifier>4626</DataIdentifier>
				<ProgrammaticName>evt_clng_tmpSupCWOver</ProgrammaticName>
				<EngineeringDescription>[Supply Chilled Water Temperature] has exceeded [Supply Chilled Water Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_clng_tmp_supCWOverThrshld.
Value used in comparison against threshold is specified in val_clng_tmp_supCW.

The behavior of this event may optionally be modified by:
st_clng_tmpSupCWOverEnable
st_clng_tmpSupCWOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_WAHC</EngineeringReference>
				<Description>
					<TextID>5286</TextID>
				</Description>
				<DataLabel>
					<TextID>5285</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4627">
			<DataEnum>
				<DataIdentifier>4627</DataIdentifier>
				<ProgrammaticName>st_clng_tmpSupCWOverEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Supply Chilled Water Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupCWOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_003</EngineeringReference>
				<Description>
					<TextID>5288</TextID>
				</Description>
				<DataLabel>
					<TextID>5287</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4628">
			<DataEnum>
				<DataIdentifier>4628</DataIdentifier>
				<ProgrammaticName>st_clng_tmpSupCWOverType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Supply Chilled Water Over Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupCWOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_WAHC_et</EngineeringReference>
				<Description>
					<TextID>5290</TextID>
				</Description>
				<DataLabel>
					<TextID>5289</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4629">
			<DataEvent16>
				<DataIdentifier>4629</DataIdentifier>
				<ProgrammaticName>evt_clng_snsrSupCWIssue</ProgrammaticName>
				<EngineeringDescription>The supply chilled water temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_clng_snsrSupCWIssueEnable
st_clng_snsrSupCWIssueType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_SUPCWSE</EngineeringReference>
				<Description>
					<TextID>5292</TextID>
				</Description>
				<DataLabel>
					<TextID>5291</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4630">
			<DataEnum>
				<DataIdentifier>4630</DataIdentifier>
				<ProgrammaticName>st_clng_snsrSupCWIssueEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Supply Chilled Water Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_snsrSupCWIssue.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_214</EngineeringReference>
				<Description>
					<TextID>5294</TextID>
				</Description>
				<DataLabel>
					<TextID>5293</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4631">
			<DataEnum>
				<DataIdentifier>4631</DataIdentifier>
				<ProgrammaticName>st_clng_snsrSupCWIssueType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Supply Chilled Water Temp Sensor Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_snsrSupCWIssue.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_SUPCWSE_et</EngineeringReference>
				<Description>
					<TextID>5296</TextID>
				</Description>
				<DataLabel>
					<TextID>5295</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4703">
			<DataEvent16>
				<DataIdentifier>4703</DataIdentifier>
				<ProgrammaticName>evt_valv_CWPosition</ProgrammaticName>
				<EngineeringDescription>Chilled water valve out of position.  Chilled water control valve position does not match expected value.

          The behavior of this event may optionally be modified by:
          st_valv_CWPositionEnable
          st_valv_CWPositionType

          iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_VALVEFA</EngineeringReference>
				<Description>
					<TextID>5442</TextID>
				</Description>
				<DataLabel>
					<TextID>5441</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4704">
			<DataEnum>
				<DataIdentifier>4704</DataIdentifier>
				<ProgrammaticName>st_valv_CWPositionEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Chilled Water Control Valve Position] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
          See event evt_valv_CWPosition.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_200</EngineeringReference>
				<Description>
					<TextID>5444</TextID>
				</Description>
				<DataLabel>
					<TextID>5443</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4705">
			<DataEnum>
				<DataIdentifier>4705</DataIdentifier>
				<ProgrammaticName>st_valv_CWPositionType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Chilled Water Control Valve Position] event.
          Event types are message, warning, alarm, and failure.
          See evt_valv_CWPosition.

          iCOM specific:
          iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_VALVEFA_et</EngineeringReference>
				<Description>
					<TextID>5446</TextID>
				</Description>
				<DataLabel>
					<TextID>5445</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4980">
			<DataEvent16>
				<DataIdentifier>4980</DataIdentifier>
				<ProgrammaticName>evt_clng_flowLossSupplyCW</ProgrammaticName>
				<EngineeringDescription>Supply chilled water flow is too low.  The event is deactivated when flow is re-established.

iCOM  Specific - This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_WALC</EngineeringReference>
				<Description>
					<TextID>6050</TextID>
				</Description>
				<DataLabel>
					<TextID>6049</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="Refrigerant" id="16386" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="127">
		<dataPoint type="DataInt16" id="4632">
			<DataInt16>
				<DataIdentifier>4632</DataIdentifier>
				<ProgrammaticName>val_clng_tmp_supRfg</ProgrammaticName>
				<EngineeringDescription>Supply refrigerant temperature.

iCOM Specific Behavior: This value is used in determining activation of events evt_clng_tmpSupRfgOver and evt_clng_tmpSupRfgUnder.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_SUPREFTEMP</EngineeringReference>
				<Description>
					<TextID>5298</TextID>
				</Description>
				<DataLabel>
					<TextID>5297</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>10000</ValueMax>
				<ValueMin>-10000</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>-32768</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4981">
			<DataInt16>
				<DataIdentifier>4981</DataIdentifier>
				<ProgrammaticName>val_clng_tmp_supRfgSetPt</ProgrammaticName>
				<EngineeringDescription>Desired supply refrigerant temperature.

iCOM  Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_REFTEMPSET</EngineeringReference>
				<Description>
					<TextID>6052</TextID>
				</Description>
				<DataLabel>
					<TextID>6051</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>2700</ValueMax>
				<ValueMin>500</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1280</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataInt16" id="4633">
			<DataInt16>
				<DataIdentifier>4633</DataIdentifier>
				<ProgrammaticName>val_clng_tmp_supRfgOverThrshld</ProgrammaticName>
				<EngineeringDescription>Threshold value used in the [Supply Refrigerant Over Temp] event.
See event evt_clng_tmpSupRfgOver</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_HIREFTEMP</EngineeringReference>
				<Description>
					<TextID>5300</TextID>
				</Description>
				<DataLabel>
					<TextID>5299</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4125</UnitsOfMeasure>
				<DataScaling>0.1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>1</Resolution>
				<OptSpecialValues>1</OptSpecialValues>
				<ValueMax>3500</ValueMax>
				<ValueMin>100</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2670</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4634">
			<DataEvent16>
				<DataIdentifier>4634</DataIdentifier>
				<ProgrammaticName>evt_clng_tmpSupRfgOver</ProgrammaticName>
				<EngineeringDescription>[Supply Refrigerant Temperature] has exceeded [Supply Refrig Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_clng_tmp_supRfgOverThrshld.
Value used in comparison against threshold is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgOverEnable
st_clng_tmpSupRfgOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_HIREFTE</EngineeringReference>
				<Description>
					<TextID>5302</TextID>
				</Description>
				<DataLabel>
					<TextID>5301</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4635">
			<DataEnum>
				<DataIdentifier>4635</DataIdentifier>
				<ProgrammaticName>st_clng_tmpSupRfgOverEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Supply Refrigerant Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgOver.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_188</EngineeringReference>
				<Description>
					<TextID>5304</TextID>
				</Description>
				<DataLabel>
					<TextID>5303</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4636">
			<DataEnum>
				<DataIdentifier>4636</DataIdentifier>
				<ProgrammaticName>st_clng_tmpSupRfgOverType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Supply Refrigerant Over Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupRfgOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_HIREFTE_et</EngineeringReference>
				<Description>
					<TextID>5306</TextID>
				</Description>
				<DataLabel>
					<TextID>5305</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4637">
			<DataEvent16>
				<DataIdentifier>4637</DataIdentifier>
				<ProgrammaticName>evt_clng_tmpSupRfgUnder</ProgrammaticName>
				<EngineeringDescription>[Supply Refrigerant Temperature] has dropped below a specified threshold.  The event is deactivated when the temperature rises above the threshold.

Value used in comparison against threshold is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgUnderEnable
st_clng_tmpSupRfgUnderType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event threshold is internally specified and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_LOREFTE</EngineeringReference>
				<Description>
					<TextID>5308</TextID>
				</Description>
				<DataLabel>
					<TextID>5307</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4638">
			<DataEnum>
				<DataIdentifier>4638</DataIdentifier>
				<ProgrammaticName>st_clng_tmpSupRfgUnderEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Supply Refrigerant Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgUnder.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_189</EngineeringReference>
				<Description>
					<TextID>5310</TextID>
				</Description>
				<DataLabel>
					<TextID>5309</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4639">
			<DataEnum>
				<DataIdentifier>4639</DataIdentifier>
				<ProgrammaticName>st_clng_tmpSupRfgUnderType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Supply Refrigerant Under Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupRfgUnder.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_LOREFTE_et</EngineeringReference>
				<Description>
					<TextID>5312</TextID>
				</Description>
				<DataLabel>
					<TextID>5311</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4640">
			<DataEvent16>
				<DataIdentifier>4640</DataIdentifier>
				<ProgrammaticName>evt_clng_snsrSupRfgIssue</ProgrammaticName>
				<EngineeringDescription>The supply refrigerant temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_clng_snsrSupRfgIssueEnable
st_clng_snsrSupRfgIssueType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_SUPRESE</EngineeringReference>
				<Description>
					<TextID>5314</TextID>
				</Description>
				<DataLabel>
					<TextID>5313</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4641">
			<DataEnum>
				<DataIdentifier>4641</DataIdentifier>
				<ProgrammaticName>st_clng_snsrSupRfgIssueEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Supply Refrig Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_snsrSupRfgIssue.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_216</EngineeringReference>
				<Description>
					<TextID>5316</TextID>
				</Description>
				<DataLabel>
					<TextID>5315</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4642">
			<DataEnum>
				<DataIdentifier>4642</DataIdentifier>
				<ProgrammaticName>st_clng_snsrSupRfgIssueType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Supply Refrig Temp Sensor Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_snsrSupRfgIssue.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_SUPRESE_et</EngineeringReference>
				<Description>
					<TextID>5318</TextID>
				</Description>
				<DataLabel>
					<TextID>5317</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="PumpsInverters" id="16388" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="173">
		<dataPoint type="DataEnum" id="28">
			<DataEnum>
				<DataIdentifier>28</DataIdentifier>
				<ProgrammaticName>st_pump_setup</ProgrammaticName>
				<EngineeringDescription>Pump setup</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_PUMP_SU</EngineeringReference>
				<Description>
					<TextID>467</TextID>
				</Description>
				<DataLabel>
					<TextID>466</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>16</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4662">
			<DataEvent16>
				<DataIdentifier>4662</DataIdentifier>
				<ProgrammaticName>evt_pump_shortCycle</ProgrammaticName>
				<EngineeringDescription>Pumps have short cycled.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.  .


The behavior of this event may optionally be modified by:
st_pump_shortCycleEnable
st_pump_shortCycleType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_PUMPSHC</EngineeringReference>
				<Description>
					<TextID>5358</TextID>
				</Description>
				<DataLabel>
					<TextID>5357</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4663">
			<DataEnum>
				<DataIdentifier>4663</DataIdentifier>
				<ProgrammaticName>st_pump_shortCycleEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Pump Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_pump_shortCycle.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_198</EngineeringReference>
				<Description>
					<TextID>5360</TextID>
				</Description>
				<DataLabel>
					<TextID>5359</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4664">
			<DataEnum>
				<DataIdentifier>4664</DataIdentifier>
				<ProgrammaticName>st_pump_shortCycleType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Pump Short Cycle] event.
Event types are message, warning, alarm, and failure.
See event evt_pump_shortCycle.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_PUMPSHC_et</EngineeringReference>
				<Description>
					<TextID>5362</TextID>
				</Description>
				<DataLabel>
					<TextID>5361</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<ReportDescriptor ProgrammaticName="Pump1" id="16394" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="443">
			<dataPoint type="DataEnum" id="4654">
				<DataEnum>
					<DataIdentifier>4654</DataIdentifier>
					<ProgrammaticName>st_pump_op1</ProgrammaticName>
					<EngineeringDescription>Pump 1 operational state.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_MANPUMP1</EngineeringReference>
					<Description>
						<TextID>5342</TextID>
					</Description>
					<DataLabel>
						<TextID>5341</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>8</DataWidth>
					<CovQueueDepth>1</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>4100</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEvent16" id="4656">
				<DataEvent16>
					<DataIdentifier>4656</DataIdentifier>
					<ProgrammaticName>evt_pump_flowLoss1</ProgrammaticName>
					<EngineeringDescription>Loss of flow is detected in pump 1.  The loss of flow condition occurs when no differential pressure is detected across the pump. The event is deactivated when flow is re-established.

The behavior of this event may optionally be modified by:
st_pump_flowLossEnable1
st_pump_flowLossType1

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_AL_PUMP1</EngineeringReference>
					<Description>
						<TextID>5346</TextID>
					</Description>
					<DataLabel>
						<TextID>5345</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>4</CovQueueDepth>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEvent16>
			</dataPoint>
			<dataPoint type="DataEnum" id="4657">
				<DataEnum>
					<DataIdentifier>4657</DataIdentifier>
					<ProgrammaticName>st_pump_flowLossEnable1</ProgrammaticName>
					<EngineeringDescription>Enable/disable the activation of the [Pump 1 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_pump_flowLoss1.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_AW_EN_182</EngineeringReference>
					<Description>
						<TextID>5348</TextID>
					</Description>
					<DataLabel>
						<TextID>5347</TextID>
					</DataLabel>
					<AccessDefn>RW</AccessDefn>
					<DataWidth>8</DataWidth>
					<CovQueueDepth>1</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>4102</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>1</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="4658">
				<DataEnum>
					<DataIdentifier>4658</DataIdentifier>
					<ProgrammaticName>st_pump_flowLossType1</ProgrammaticName>
					<EngineeringDescription>The event type for the [Pump 1 Loss of Flow] event.
Event types are message, warning, alarm, and failure.
See event evt_pump_flowLoss1.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_AL_PUMP1_et</EngineeringReference>
					<Description>
						<TextID>5350</TextID>
					</Description>
					<DataLabel>
						<TextID>5349</TextID>
					</DataLabel>
					<AccessDefn>RW</AccessDefn>
					<DataWidth>8</DataWidth>
					<CovQueueDepth>1</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>9</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>2</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
		</ReportDescriptor>
		<ReportDescriptor ProgrammaticName="Inverter1" id="16398" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="459">
			<dataPoint type="DataEnum" id="27">
				<DataEnum>
					<DataIdentifier>27</DataIdentifier>
					<ProgrammaticName>st_pump_inverterOp1</ProgrammaticName>
					<EngineeringDescription>Inverter/Pump 1 operational state.
            Available values:
0 = Off
1 = "Enable Inverter" - pump output will be turned ON. 
2 =  "Power Inverter" - inverter output will be turned ON. 
3 =  "Activate Pump" - inverter output will be turned ON, two seconds later the pump output will be turned ON. Once set to OFF, the pump output will be turned OFF, two seconds later, the inverter output will be turned OFF.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_MANPMPI1</EngineeringReference>
					<Description>
						<TextID>461</TextID>
					</Description>
					<DataLabel>
						<TextID>460</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>8</DataWidth>
					<CovQueueDepth>1</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>15</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEvent16" id="4996">
				<DataEvent16>
					<DataIdentifier>4996</DataIdentifier>
					<ProgrammaticName>evt_pump_inverterShortCycle1</ProgrammaticName>
					<EngineeringDescription>Inverter for pump 1 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period.  The event is automatically deactivated after a certain time period has expired.

            The behavior of this event may optionally be modified by:
            st_pump_inverterShortCycleEnable1
            st_pump_inverterShortCycleType1

            iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_ME_SHCYCI1</EngineeringReference>
					<Description>
						<TextID>6082</TextID>
					</Description>
					<DataLabel>
						<TextID>6081</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<CovQueueDepth>4</CovQueueDepth>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEvent16>
			</dataPoint>
			<dataPoint type="DataEnum" id="4997">
				<DataEnum>
					<DataIdentifier>4997</DataIdentifier>
					<ProgrammaticName>st_pump_inverterShortCycleEnable1</ProgrammaticName>
					<EngineeringDescription>Enable/disable the activation of the [Inverter 1 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
            See event evt_pump_inverterShortCycle1.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_AW_EN_119</EngineeringReference>
					<Description>
						<TextID>6084</TextID>
					</Description>
					<DataLabel>
						<TextID>6083</TextID>
					</DataLabel>
					<AccessDefn>RW</AccessDefn>
					<DataWidth>8</DataWidth>
					<CovQueueDepth>1</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>4102</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>1</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
			<dataPoint type="DataEnum" id="4998">
				<DataEnum>
					<DataIdentifier>4998</DataIdentifier>
					<ProgrammaticName>st_pump_inverterShortCycleType1</ProgrammaticName>
					<EngineeringDescription>The event type for the [Inverter 1 Short Cycle] event.
            Event types are message, warning, alarm, and fault.
            See event evt_pump_inverterShortCycle1.

            iCOM specific:
            iCOM only supports message, warning, and alarm.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_ME_SHCYCI1_et</EngineeringReference>
					<Description>
						<TextID>6086</TextID>
					</Description>
					<DataLabel>
						<TextID>6085</TextID>
					</DataLabel>
					<AccessDefn>RW</AccessDefn>
					<DataWidth>8</DataWidth>
					<CovQueueDepth>1</CovQueueDepth>
					<OptInvalidDispText>
						<TextID />
					</OptInvalidDispText>
					<EnumStateDefnID>9</EnumStateDefnID>
					<ORedValuesValid>False</ORedValuesValid>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>0</ValueInitializer>
					<WriteFunction>enp_write</WriteFunction>
					<ReadFunction />
					<ClientBehavior />
					<ClientBehaviorFunction />
				</DataEnum>
			</dataPoint>
		</ReportDescriptor>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="System" id="16391" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="282">
		<dataPoint type="DataEnum" id="4123">
			<DataEnum>
				<DataIdentifier>4123</DataIdentifier>
				<ProgrammaticName>st_sys_status</ProgrammaticName>
				<EngineeringDescription>The operating status for the system.  The intent of this data definition is to provide a high level status of the system.  The valid states are: Normal Operation, StartUp, Normal with Warning, Normal with Alarm, and Abnormal Operation.

For a more detailed explanation of this data definition, see the Engineering Reference Document.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_STA_SYSTEM</EngineeringReference>
				<Description>
					<TextID>4201</TextID>
				</Description>
				<DataLabel>
					<TextID>4200</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>6</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4104</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataText" id="4240">
			<DataText>
				<DataIdentifier>4240</DataIdentifier>
				<ProgrammaticName>str_sys_modelNumber</ProgrammaticName>
				<EngineeringDescription>System model identifier. This is the marketing model identifier that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_UNITCODE02_map</EngineeringReference>
				<Description>
					<TextID>4445</TextID>
				</Description>
				<DataLabel>
					<TextID>4446</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>25</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
		<dataPoint type="DataEnum" id="4706">
			<DataEnum>
				<DataIdentifier>4706</DataIdentifier>
				<ProgrammaticName>st_sys_operating</ProgrammaticName>
				<EngineeringDescription>Current operating state of the system.
Allowable states:
Off - The unit is not providing services and will not provide services in this state.
On - The unit is able to provide services as needed.
Standby - The unit is not currently providing services, but can do so by transitioning into the 'on' state.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_STA_CURREN</EngineeringReference>
				<Description>
					<TextID>5448</TextID>
				</Description>
				<DataLabel>
					<TextID>5447</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>2</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4129</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4707">
			<DataEnum>
				<DataIdentifier>4707</DataIdentifier>
				<ProgrammaticName>st_sys_controlMode</ProgrammaticName>
				<EngineeringDescription>System control mode.
Allowable modes:
Auto - Internal algorithmic control of the system.
Manual - External control of the system.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_STA_CTRLMO</EngineeringReference>
				<Description>
					<TextID>5453</TextID>
				</Description>
				<DataLabel>
					<TextID>5452</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4130</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="5143">
			<DataEnum>
				<DataIdentifier>5143</DataIdentifier>
				<ProgrammaticName>st_sys_onOffCtrl</ProgrammaticName>
				<EngineeringDescription>Turn system functionality on or off.  The controls and communication are maintained, thus allowing the system to be turned on after being turned off.

iCOM Specific:  The operation of the system is dependent upon this value and other conditions, such as an alarm state.    The "off" command will always turn the system functionality off.  For instance, this turns on/off all cooling, heating, humidifier, and dehumidifier functions.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_IGM_UNITON</EngineeringReference>
				<Description>
					<TextID>6391</TextID>
				</Description>
				<DataLabel>
					<TextID>6390</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4100</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataInt16" id="4710">
			<DataInt16>
				<DataIdentifier>4710</DataIdentifier>
				<ProgrammaticName>val_sys_tm_autoRestart</ProgrammaticName>
				<EngineeringDescription>If power is lost, the control will delay this amount of time after power is restored before restarting the unit.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AURESTART</EngineeringReference>
				<Description>
					<TextID>5461</TextID>
				</Description>
				<DataLabel>
					<TextID>5460</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4097</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>999</ValueMax>
				<ValueMin>0</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>5</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataInt16>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4270">
			<DataEvent16>
				<DataIdentifier>4270</DataIdentifier>
				<ProgrammaticName>evt_ext_inpContact01</ProgrammaticName>
				<EngineeringDescription>The external input contact 1. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_6</EngineeringReference>
				<Description>
					<TextID>381</TextID>
				</Description>
				<DataLabel>
					<TextID>314</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4718">
			<DataEnum>
				<DataIdentifier>4718</DataIdentifier>
				<ProgrammaticName>st_ext_inpContactEnable01</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Input Contact 01] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_inpContact01</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_009</EngineeringReference>
				<Description>
					<TextID>378</TextID>
				</Description>
				<DataLabel>
					<TextID>377</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4719">
			<DataEnum>
				<DataIdentifier>4719</DataIdentifier>
				<ProgrammaticName>st_ext_inpContactType01</ProgrammaticName>
				<EngineeringDescription>The event type for the [Input Contact 01] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_inpContact01.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_6_et</EngineeringReference>
				<Description>
					<TextID>380</TextID>
				</Description>
				<DataLabel>
					<TextID>379</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4711">
			<DataEvent16>
				<DataIdentifier>4711</DataIdentifier>
				<ProgrammaticName>evt_sys_condensDetect</ProgrammaticName>
				<EngineeringDescription>System condensation detected.  The event is deactivated when condensation is no longer detected.

The behavior of this event may optionally be modified by:
st_sys_condensDetectEnable
st_sys_condensDetectType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_CONDDET</EngineeringReference>
				<Description>
					<TextID>5463</TextID>
				</Description>
				<DataLabel>
					<TextID>5462</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4712">
			<DataEnum>
				<DataIdentifier>4712</DataIdentifier>
				<ProgrammaticName>st_sys_condensDetectEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [System Condensation Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_condensDetect.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_186</EngineeringReference>
				<Description>
					<TextID>5465</TextID>
				</Description>
				<DataLabel>
					<TextID>5464</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4713">
			<DataEnum>
				<DataIdentifier>4713</DataIdentifier>
				<ProgrammaticName>st_sys_condensDetectType</ProgrammaticName>
				<EngineeringDescription>The event type for the [System Condensation Detected] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_condensDetect.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_CONDDET_et</EngineeringReference>
				<Description>
					<TextID>5467</TextID>
				</Description>
				<DataLabel>
					<TextID>5466</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4714">
			<DataEvent16>
				<DataIdentifier>4714</DataIdentifier>
				<ProgrammaticName>evt_sys_shutdownPwrLoss</ProgrammaticName>
				<EngineeringDescription>System lost power.  This event becomes active when the unit is powered on following an unexpected loss of power.
The event is deactivated when the unit is powered continuously for some duration of time.  This deactivation time duration is system specific.  The deactivation duration may or may not be user configurable depending on the system.

The behavior of this event may optionally be modified by:
st_sys_shutdownPwrLossEnable
st_sys_shutdownPwrLossType

iCOM Specific: The event will not be activated unless it is enabled.  The deactivation duration is 1 hour.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_LOSSPOW</EngineeringReference>
				<Description>
					<TextID>5469</TextID>
				</Description>
				<DataLabel>
					<TextID>5468</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4715">
			<DataEnum>
				<DataIdentifier>4715</DataIdentifier>
				<ProgrammaticName>st_sys_shutdownPwrLossEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Shutdown - Loss Of Power] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_shutdownPwrLoss.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_142</EngineeringReference>
				<Description>
					<TextID>5471</TextID>
				</Description>
				<DataLabel>
					<TextID>5470</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4716">
			<DataEnum>
				<DataIdentifier>4716</DataIdentifier>
				<ProgrammaticName>st_sys_shutdownPwrLossType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Shutdown - Loss Of Power] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_shutdownPwrLoss.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_LOSSPOW_et</EngineeringReference>
				<Description>
					<TextID>5473</TextID>
				</Description>
				<DataLabel>
					<TextID>5472</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4720">
			<DataEvent16>
				<DataIdentifier>4720</DataIdentifier>
				<ProgrammaticName>evt_sys_smokeDetected</ProgrammaticName>
				<EngineeringDescription>Smoke detected.  The event is deactivated when smoke is no longer detected.

The annunciation of this event may optionally be modified by:
st_sys_smokeDetectedEnable
st_sys_smokeDetectedType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_0</EngineeringReference>
				<Description>
					<TextID>5484</TextID>
				</Description>
				<DataLabel>
					<TextID>5483</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4721">
			<DataEnum>
				<DataIdentifier>4721</DataIdentifier>
				<ProgrammaticName>st_sys_smokeDetectedEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Smoke Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_smokeDetected.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_104</EngineeringReference>
				<Description>
					<TextID>5486</TextID>
				</Description>
				<DataLabel>
					<TextID>5485</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4722">
			<DataEnum>
				<DataIdentifier>4722</DataIdentifier>
				<ProgrammaticName>st_sys_smokeDetectedType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Smoke Detected] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_smokeDetected.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_0_et</EngineeringReference>
				<Description>
					<TextID>5488</TextID>
				</Description>
				<DataLabel>
					<TextID>5487</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4723">
			<DataEvent16>
				<DataIdentifier>4723</DataIdentifier>
				<ProgrammaticName>evt_sys_waterUnderFloor</ProgrammaticName>
				<EngineeringDescription>Water under the floor is detected.  The event is deactivated when water is no longer detected.

The annunciation of this event may optionally be modified by:
st_sys_waterUnderFloorEnable
st_sys_waterUnderFloorType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_1</EngineeringReference>
				<Description>
					<TextID>5490</TextID>
				</Description>
				<DataLabel>
					<TextID>5489</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4724">
			<DataEnum>
				<DataIdentifier>4724</DataIdentifier>
				<ProgrammaticName>st_sys_waterUnderFloorEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Water Under Floor] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_waterUnderFloor.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_105</EngineeringReference>
				<Description>
					<TextID>5492</TextID>
				</Description>
				<DataLabel>
					<TextID>5491</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4725">
			<DataEnum>
				<DataIdentifier>4725</DataIdentifier>
				<ProgrammaticName>st_sys_waterUnderFloorType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Water Under Floor] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_waterUnderFloor.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_1_et</EngineeringReference>
				<Description>
					<TextID>5494</TextID>
				</Description>
				<DataLabel>
					<TextID>5493</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4726">
			<DataEvent16>
				<DataIdentifier>4726</DataIdentifier>
				<ProgrammaticName>evt_sys_serviceReq</ProgrammaticName>
				<EngineeringDescription>Unit requires servicing.  The event is generally deactivated by manual reset or act of service.

The annunciation of this event may optionally be modified by:
st_sys_serviceReqEnable
st_sys_serviceReqType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_MECUSINP14</EngineeringReference>
				<Description>
					<TextID>5496</TextID>
				</Description>
				<DataLabel>
					<TextID>5495</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4727">
			<DataEnum>
				<DataIdentifier>4727</DataIdentifier>
				<ProgrammaticName>st_sys_serviceReqEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Service Required] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_serviceReq.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_015</EngineeringReference>
				<Description>
					<TextID>5498</TextID>
				</Description>
				<DataLabel>
					<TextID>5497</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4728">
			<DataEnum>
				<DataIdentifier>4728</DataIdentifier>
				<ProgrammaticName>st_sys_serviceReqType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Service Required] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_serviceReq.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_MECUSINP14_et</EngineeringReference>
				<Description>
					<TextID>5500</TextID>
				</Description>
				<DataLabel>
					<TextID>5499</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEvent16" id="4729">
			<DataEvent16>
				<DataIdentifier>4729</DataIdentifier>
				<ProgrammaticName>evt_fan_issue</ProgrammaticName>
				<EngineeringDescription>One or more fans are not operating within their operational parameters.   The event is deactivated when the fans return to normal operation.
NOTE: This is not a failure of one or more fans that are cooling the system internal components.  It is a failure of one or more of the environmental unit's blower fans.

The annunciation of this event may optionally be modified by:
st_fan_issueEnable
st_fan_issueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_FANFAIL</EngineeringReference>
				<Description>
					<TextID>5502</TextID>
				</Description>
				<DataLabel>
					<TextID>5501</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>4</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEvent16>
		</dataPoint>
		<dataPoint type="DataEnum" id="4730">
			<DataEnum>
				<DataIdentifier>4730</DataIdentifier>
				<ProgrammaticName>st_fan_issueEnable</ProgrammaticName>
				<EngineeringDescription>Enable/disable the activation of the [Fan Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_fan_issue.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AW_EN_212</EngineeringReference>
				<Description>
					<TextID>5504</TextID>
				</Description>
				<DataLabel>
					<TextID>5503</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4102</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>1</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4731">
			<DataEnum>
				<DataIdentifier>4731</DataIdentifier>
				<ProgrammaticName>st_fan_issueType</ProgrammaticName>
				<EngineeringDescription>The event type for the [Fan Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_fan_issue.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_AL_FANFAIL_et</EngineeringReference>
				<Description>
					<TextID>5506</TextID>
				</Description>
				<DataLabel>
					<TextID>5505</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>8</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>9</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>2</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<dataPoint type="DataEnum" id="4717">
			<DataEnum>
				<DataIdentifier>4717</DataIdentifier>
				<ProgrammaticName>st_sys_eventAckReset</ProgrammaticName>
				<EngineeringDescription>Reset and/or acknowledge all events.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_GENALARM</EngineeringReference>
				<Description>
					<TextID>5475</TextID>
				</Description>
				<DataLabel>
					<TextID>5474</TextID>
				</DataLabel>
				<AccessDefn>WO</AccessDefn>
				<DataWidth>3</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<OptInvalidDispText>
					<TextID />
				</OptInvalidDispText>
				<EnumStateDefnID>4131</EnumStateDefnID>
				<ORedValuesValid>False</ORedValuesValid>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ReadFunction />
				<ClientBehavior />
				<ClientBehaviorFunction />
			</DataEnum>
		</dataPoint>
		<DataGroup ProgrammaticName="val_sys_tm_nextMaint" GroupLabelId="396" QueueDepth="1" EngineeringDescription="Calculated date of the next scheduled maintenance.&#xD;&#xA;&#xD;&#xA;iCOM Specific: The next maintenance is continuously calculated from individual system component parameters.  These parameters may include, but are not limited to, operating hours, number of starts, average running time, and the occurrence of certain alarms and warnings." EngineeringReference="" readFunc="enp_read" writeFunc="enp_write">
			<dataPoint type="DataUint16" id="4868">
				<DataUint16>
					<DataIdentifier>4868</DataIdentifier>
					<ProgrammaticName>val_sys_tm_nextMaintMonth</ProgrammaticName>
					<EngineeringDescription>Calculated month of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Year].  This is a value from 1 to 12, where 1 = January and 12 = December.

            iCOM Specific: The next maintenance is continuously calculated from individual system component parameters.  These parameters may include, but are not limited to, operating hours, number of starts, average running time, and the occurrence of certain alarms and warnings.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_SERV_MON</EngineeringReference>
					<Description>
						<TextID>5813</TextID>
					</Description>
					<DataLabel>
						<TextID>5812</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<UnitsOfMeasure>0</UnitsOfMeasure>
					<DataScaling>1</DataScaling>
					<DataOffset>0</DataOffset>
					<Resolution>0</Resolution>
					<OptSpecialValues>3</OptSpecialValues>
					<ValueMax>12</ValueMax>
					<ValueMin>1</ValueMin>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>1</ValueInitializer>
					<ClientBehavior />
					<ClientBehaviorFunction />
					<ParentKey>0</ParentKey>
					<SortingKey>None</SortingKey>
				</DataUint16>
			</dataPoint>
			<dataPoint type="DataUint16" id="4869">
				<DataUint16>
					<DataIdentifier>4869</DataIdentifier>
					<ProgrammaticName>val_sys_tm_nextMaintYear</ProgrammaticName>
					<EngineeringDescription>Calculated year of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Month]. For example, a value of 2009 is provided to indicate the year 2009 (a value of '09' does NOT represent 2009).

            iCOM Specific: The next maintenance is continuously calculated from individual system component parameters.  These parameters may include, but are not limited to, operating hours, number of starts, average running time, and the occurrence of certain alarms and warnings.</EngineeringDescription>
					<EngineeringReference>tag=e2_dm_map:SC_SERV_YE4</EngineeringReference>
					<Description>
						<TextID>5815</TextID>
					</Description>
					<DataLabel>
						<TextID>5814</TextID>
					</DataLabel>
					<AccessDefn>RD</AccessDefn>
					<DataWidth>1</DataWidth>
					<UnitsOfMeasure>0</UnitsOfMeasure>
					<DataScaling>1</DataScaling>
					<DataOffset>0</DataOffset>
					<Resolution>0</Resolution>
					<OptSpecialValues>2</OptSpecialValues>
					<ValueMax>65535</ValueMax>
					<ValueMin>0</ValueMin>
					<GddCandidate>False</GddCandidate>
					<Reserved>False</Reserved>
					<ValueInitializer>2000</ValueInitializer>
					<ClientBehavior />
					<ClientBehaviorFunction />
					<ParentKey>0</ParentKey>
					<SortingKey>None</SortingKey>
				</DataUint16>
			</dataPoint>
		</DataGroup>
		<dataPoint type="DataUint16" id="4870">
			<DataUint16>
				<DataIdentifier>4870</DataIdentifier>
				<ProgrammaticName>val_sys_pct_maintenanceRamp</ProgrammaticName>
				<EngineeringDescription>Percentage of calculated operations interval that has elapsed before next maintenance is required.

          iCOM Specific: The calculation of this estimate is based upon the run hours, number of starts, and number of alarms logged for each individual component in the system.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_BARA_SERV</EngineeringReference>
				<Description>
					<TextID>5817</TextID>
				</Description>
				<DataLabel>
					<TextID>5816</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>1</CovQueueDepth>
				<UnitsOfMeasure>4124</UnitsOfMeasure>
				<DataScaling>1</DataScaling>
				<DataOffset>0</DataOffset>
				<Resolution>0</Resolution>
				<OptSpecialValues />
				<ValueMax>100</ValueMax>
				<ValueMin>0</ValueMin>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataUint16>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="AssetMgmt" id="16396" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="445">
		<dataPoint type="DataText" id="16">
			<DataText>
				<DataIdentifier>16</DataIdentifier>
				<ProgrammaticName>str_sw_applicationVer</ProgrammaticName>
				<EngineeringDescription>Application software version.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_STR_SWVERS</EngineeringReference>
				<Description>
					<TextID>447</TextID>
				</Description>
				<DataLabel>
					<TextID>446</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>18</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
		<dataPoint type="DataText" id="22">
			<DataText>
				<DataIdentifier>22</DataIdentifier>
				<ProgrammaticName>str_sys_hwPlatform</ProgrammaticName>
				<EngineeringDescription>Hardware platform.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:CO_HW_PLATFORM</EngineeringReference>
				<Description>
					<TextID>449</TextID>
				</Description>
				<DataLabel>
					<TextID>448</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>10</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
		<dataPoint type="DataText" id="23">
			<DataText>
				<DataIdentifier>23</DataIdentifier>
				<ProgrammaticName>str_sw_bootLoaderVer</ProgrammaticName>
				<EngineeringDescription>Bootloader version.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:CO_BOOTLOADER_VER</EngineeringReference>
				<Description>
					<TextID>451</TextID>
				</Description>
				<DataLabel>
					<TextID>450</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>20</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
		<dataPoint type="DataText" id="24">
			<DataText>
				<DataIdentifier>24</DataIdentifier>
				<ProgrammaticName>str_sw_kernelVer</ProgrammaticName>
				<EngineeringDescription>Kernel version.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:CO_KERNEL_VER</EngineeringReference>
				<Description>
					<TextID>453</TextID>
				</Description>
				<DataLabel>
					<TextID>452</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>75</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
		<dataPoint type="DataText" id="25">
			<DataText>
				<DataIdentifier>25</DataIdentifier>
				<ProgrammaticName>str_sw_rootFSVer</ProgrammaticName>
				<EngineeringDescription>Root file system version.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:CO_ROOTFS_VER</EngineeringReference>
				<Description>
					<TextID>455</TextID>
				</Description>
				<DataLabel>
					<TextID>454</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>75</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
		<dataPoint type="DataText" id="26">
			<DataText>
				<DataIdentifier>26</DataIdentifier>
				<ProgrammaticName>str_sw_frameWorkVer</ProgrammaticName>
				<EngineeringDescription>iCOM software framework version.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:CO_FW_VER</EngineeringReference>
				<Description>
					<TextID>457</TextID>
				</Description>
				<DataLabel>
					<TextID>456</TextID>
				</DataLabel>
				<AccessDefn>RD</AccessDefn>
				<DataWidth>75</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer />
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataText>
		</dataPoint>
	</ReportDescriptor>
	<ReportDescriptor ProgrammaticName="Time" id="16397" readAuth="User (non-secure)" writeAuth="User (non-secure)" velocityInternalUse="False" configReport="False" privateReport="False" notificationsReport="False" EngineeringDescription="" EngineeringReference="" labelId="458">
		<dataPoint type="DataTime32" id="4293">
			<DataTime32>
				<DataIdentifier>4293</DataIdentifier>
				<ProgrammaticName>val_sys_tm_dateTime</ProgrammaticName>
				<EngineeringDescription>The system date and time (generally based on a real-time clock).
        NOTE: This is generally the local time. It is not Coordinated Universal Time (UTC) unless the local time zone is GMT.</EngineeringDescription>
				<EngineeringReference>tag=e2_dm_map:SC_RTC_DT</EngineeringReference>
				<Description>
					<TextID>4579</TextID>
				</Description>
				<DataLabel>
					<TextID>4580</TextID>
				</DataLabel>
				<AccessDefn>RW</AccessDefn>
				<DataWidth>1</DataWidth>
				<CovQueueDepth>0</CovQueueDepth>
				<Tick>1000</Tick>
				<Epoch>01.01.1970</Epoch>
				<GddCandidate>False</GddCandidate>
				<Reserved>False</Reserved>
				<ValueInitializer>0</ValueInitializer>
				<WriteFunction>enp_write</WriteFunction>
				<ClientBehavior />
				<ClientBehaviorFunction />
				<ParentKey>0</ParentKey>
				<SortingKey>None</SortingKey>
			</DataTime32>
		</dataPoint>
	</ReportDescriptor>
</DataModel>