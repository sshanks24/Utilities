<?xml-stylesheet type="text/xsl" href="GDD.xsl"?>
<Enp2DataDict xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="ddSchema.xsd">
    <Version>
        <VersionId>1</VersionId>    <!-- maps to GDD Binary Schema -->
        <VerLetter>X</VerLetter>
        <Major>5512</Major>         <!-- GDD Bnary Version = 16*Major + Minor; set to LastDictionaryEntry -->
        <Delimiter>.</Delimiter>
        <Minor>1</Minor>            <!-- Reset to 1 when new Major value changes. Increment for bug fixes -->
        <LastDictionaryEntry>5512</LastDictionaryEntry>
    </Version>
    <SecurityLevelDefn>
        <SecurityLevel>User (non-secure)</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Administrator</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Service</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Super User</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Service with Configuration Access</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Factory</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Engineering</SecurityLevel>
    </SecurityLevelDefn>
    <SecurityLevelDefn>
        <SecurityLevel>Full</SecurityLevel>
    </SecurityLevelDefn>
    <AccessibilityDefn>
        <Accessibility>ReadOnly</Accessibility>
    </AccessibilityDefn>
    <AccessibilityDefn>
        <Accessibility>WriteOnly</Accessibility>
    </AccessibilityDefn>
    <AccessibilityDefn>
        <Accessibility>ReadWrite</Accessibility>
    </AccessibilityDefn>
    <DataType>
        <TypeName>DataEnum</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataEvent16</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataEvent32</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataInt16</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataUint16</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataInt32</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataUint32</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataReal</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataTime32</TypeName>
    </DataType>
    <DataType>
        <TypeName>DataText</TypeName>
    </DataType>
    <MeasureBase>
        <MbaseName Id="0">Generic</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="1">Second</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="2">VoltRMS</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="3">AmpRMS</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="4">VoltAmp</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="5">VoltAmpReactive</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="6">Watt</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="7">TemperatureC</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="8">Kelvin</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="9">Hertz</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="10">WattHour</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="11">Percent</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="12">AmpHour</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="13">VoltDC</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="14">AmpDC</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="15">Pascal</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="16">VoltPeak</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="17">VoltPeakToPeak</MbaseName>
    </MeasureBase>
    <MeasureBase>
        <MbaseName Id="18">Ohm</MbaseName>
    </MeasureBase>
    <Epoch>
        <EpochName>SysUpTime</EpochName>
    </Epoch>
    <Epoch>
        <EpochName>1970-Jan-01 (local time)</EpochName>
    </Epoch>
    <Epoch>
        <EpochName>January_1</EpochName>
    </Epoch>
    <Epoch>
        <EpochName>1st_Of_Month</EpochName>
    </Epoch>
    <Epoch>
        <EpochName>Midnight</EpochName>
    </Epoch>
    <Epoch>
        <EpochName>1970-Jan-01 (GMT)</EpochName>
    </Epoch>
    <GlobalStringDefinitions Lang="en_US" Encoding="utf-8">
        <String Id="0" xsi:nil="true"/>
        <String Id="4096">unknown</String>
        <String Id="4097">on</String>
        <String Id="4098">off</String>
        <String Id="4099">true</String>
        <String Id="4100">false</String>
        <String Id="4101">enabled</String>
        <String Id="4102">disabled</String>
        <String Id="4103">ms</String>
        <String Id="4104">sec</String>
        <String Id="4105">min</String>
        <String Id="4106">hr</String>
        <String Id="4108">VAC</String>
        <String Id="4109">mV AC</String>
        <String Id="4110">VDC</String>
        <String Id="4111">mV DC</String>
        <String Id="4112">V peak</String>
        <String Id="4113">V peak-to-peak</String>
        <String Id="4114">A AC</String>
        <String Id="4115">mA AC</String>
        <String Id="4116">A DC</String>
        <String Id="4117">mA DC</String>
        <String Id="4118">VA</String>
        <String Id="4119">kVA</String>
        <String Id="4120">VAR</String>
        <String Id="4121">kVAR</String>
        <String Id="4122">W</String>
        <String Id="4123">kW</String>
        <String Id="4124">WH</String>
        <String Id="4125">kWH</String>
        <String Id="4126">AH</String>
        <String Id="4127">Hz</String>
        <String Id="4128">mHz</String>
        <String Id="4129">kHz</String>
        <String Id="4130">MHz</String>
        <String Id="4131">GHz</String>
        <String Id="4132">deg C</String>
        <String Id="4133">deg F</String>
        <String Id="4134">deg C</String>    <!-- unit-of-measure for delta degree C per Tracker #5657 2009/07/07 -->
        <String Id="4135">deg F</String>    <!-- unit-of-measure for delta degree F per Tracker #5657 2009/07/07 -->
        <String Id="4136">%</String>
        <String Id="4137">psi</String>
        <String Id="4138">Pa</String>
        <String Id="4139">atm</String>
        <String Id="4140">% RH</String>
        <String Id="4141">psia</String>
        <String Id="4142">% THD</String>
        <String Id="4143">Battery time remaining</String>
        <String Id="4144">System Input RMS A-N</String>
        <String Id="4145">The System Input RMS Voltage between Phase A and Neutral</String>
        <String Id="4146">System Input RMS A-B</String>
        <String Id="4147">The System Input RMS Voltage between Phase A and Phase B</String>
        <String Id="4148">System Input RMS B-N</String>
        <String Id="4149">The System Input RMS Voltage between Phase B and Neutral</String>
        <String Id="4150">System Input RMS B-C</String>
        <String Id="4151">The System Input RMS Voltage between Phase B and Phase C</String>
        <String Id="4152">System Input RMS C-N</String>
        <String Id="4153">The System Input RMS Voltage between Phase C and Neutral</String>
        <String Id="4154">System Input RMS C-A</String>
        <String Id="4155">The System Input RMS Voltage between Phase C and Phase A</String>
        <String Id="4156">System Input Nominal Voltage</String>
        <String Id="4157">The nominal (or rated) system input voltage</String>
        <String Id="4158">System Input Nominal Frequency</String>
        <String Id="4159">The nominal (or rated) system input frequency</String>
        <String Id="4160">System Input Nominal Current</String>
        <String Id="4161">The nominal (or rated) system input current</String>
        <String Id="4162">System Input Frequency</String>
        <String Id="4163">The system input frequency</String>
        <String Id="4164">System Input Max Voltage A-N</String>
        <String Id="4165">The maximum system input voltage measurement for Phase A-N since the last reset</String>
        <String Id="4166">System Input Min Voltage A-N</String>
        <String Id="4167">The minimum system input voltage measurement for Phase A-N since the last reset</String>
        <String Id="4168">System Input Max Voltage B-N</String>
        <String Id="4169">The maximum system input voltage measurement for Phase B-N since the last reset</String>
        <String Id="4170">System Input Min Voltage B-N</String>
        <String Id="4171">The minimum system input voltage measurement for Phase B-N since the last reset</String>
        <String Id="4172">System Input Max Voltage C-N</String>
        <String Id="4173">The maximum system input voltage measurement for Phase C-N since the last reset</String>
        <String Id="4174">System Input Min Voltage C-N</String>
        <String Id="4175">The minimum system input voltage measurement for Phase C-N since the last reset</String>
        <String Id="4176">System Input Phase Count</String>
        <String Id="4177">The number of phases for the system input</String>
        <String Id="4178">System Input RMS Current Phase A</String>
        <String Id="4179">The system input RMS current for Phase A</String>
        <String Id="4180">System Input RMS Current Phase B</String>
        <String Id="4181">The system input RMS current for Phase B</String>
        <String Id="4182">System Input RMS Current Phase C</String>
        <String Id="4183">The system input RMS current for Phase C</String>
        <String Id="4184">System Input Power Factor Phs A</String>
        <String Id="4185">The system input power factor for Phase A</String>
        <String Id="4186">System Input Power Factor Phs B</String>
        <String Id="4187">The system input power factor for Phase B</String>
        <String Id="4188">System Input Power Factor Phs C</String>
        <String Id="4189">The system input power factor for Phase C</String>
        <String Id="4190">System Input Brown Out Count</String>
        <String Id="4191">The number of occurrences, since the last reset, where the system input voltage has fallen below a pre-determined threshold for a specified amount of time</String>
        <String Id="4192">System Input Black Out Count</String>
        <String Id="4193">The number of occurrences, since the last reset, where the input was not qualified to provide power to the system</String>
        <String Id="4194">System Input Transient Count</String>
        <String Id="4195">The number of occurrences, since the last reset, where the absolute value of the system input voltage deviated from the expected values</String>
        <String Id="4196">System Input Power Problem</String>
        <String Id="4197">The input is not qualified to provide power to the system</String>
        <String Id="4198">day</String>
        <String Id="4199">deg</String>
        <String Id="4200">System Status</String>
        <String Id="4201">The operating status for the system</String>
        <String Id="4202">Group Status</String>
        <String Id="4203">The summary status of the grouped systems</String>
        <String Id="4204">Normal Operation</String>
        <String Id="4205">StartUp</String>
        <String Id="4206">Unknown - No System Support for System Status</String>
        <String Id="4207">Normal with Warning</String>
        <String Id="4208">Normal with Alarm</String>
        <String Id="4209">Abnormal Operation</String>
        <String Id="4210">Unknown - Communication Failure</String>
        <String Id="4211">Bypass Input Voltage RMS A-B</String>
        <String Id="4212">The bypass input RMS voltage between phases A and B</String>
        <String Id="4213">Bypass Input Voltage RMS B-C</String>
        <String Id="4214">The bypass input RMS voltage between phases B and C</String>
        <String Id="4215">Bypass Input Voltage RMS C-A</String>
        <String Id="4216">The bypass input RMS voltage between phases C and A</String>
        <String Id="4217">Bypass Input Voltage RMS A-N</String>
        <String Id="4218">The bypass input RMS voltage between phase A and Neutral</String>
        <String Id="4219">Bypass Input Voltage RMS B-N</String>
        <String Id="4220">The bypass input RMS voltage between phase B and Neutral</String>
        <String Id="4221">Bypass Input Voltage RMS C-N</String>
        <String Id="4222">The bypass input RMS voltage between phase C and Neutral</String>
        <String Id="4223">Bypass Input Frequency</String>
        <String Id="4224">The bypass input frequency</String>
        <String Id="4225">Bypass Overload Phase A</String>
        <String Id="4226">An overload exists on output phase A while operating on the bypass</String>
        <String Id="4227">Bypass Overload Phase B</String>
        <String Id="4228">An overload exists on output phase B while operating on the bypass</String>
        <String Id="4229">Bypass Overload Phase C</String>
        <String Id="4230">An overload exists on output phase C while operating on the bypass</String>
        <String Id="4231">Bypass Not Available</String>
        <String Id="4232">A problem associated with the bypass has been detected</String>
        <String Id="4233">Bypass Sync Phase Difference</String>
        <String Id="4234">The phase angle difference between the inverter output and bypass source</String>
        <String Id="4235">Bypass Auto Retransfer Primed</String>
        <String Id="4236">Automatic retransfer from bypass to inverter is possible</String>
        <String Id="4237">Bypass Auto Retransfer Failed</String>
        <String Id="4238">After performing a recoverable transfer to bypass, an attempt to auto retransfer from bypass to inverter failed</String>
        <String Id="4239">Bypass - Excess Auto Retransfers</String>
        <String Id="4240">The number of auto retransfers, from bypass to inverter, has exceeded the maximum for a specified time interval</String>
        <String Id="4241">Bypass Restart Inhibit - External</String>
        <String Id="4242">Restart of the bypass is inhibited by the state of an external signal</String>
        <String Id="4243">Bypass Breaker Closed</String>
        <String Id="4244">The bypass breaker is closed</String>
        <String Id="4245">Bypass Static Switch Overload</String>
        <String Id="4246">Bypass off due to static switch overload</String>
        <String Id="4247">Bypass Static Switch Unavailable</String>
        <String Id="4248">The static bypass switch is off, and unable to operate</String>
        <String Id="4249">Bypass Excessive Pulse Parallel</String>
        <String Id="4250">The system has performed too many pulse parallel operations within a specified time interval</String>
        <String Id="4251">Bypass Auto Transfer Failed</String>
        <String Id="4252">An automatic transfer to static bypass failed</String>
        <String Id="4253">System Input Phs Rotation Error</String>
        <String Id="4254">The power conductors on the input line are not wired to the UPS in the sequence preferred for the rectifier (A-B-C)</String>
        <String Id="4255">System Input Current Limit</String>
        <String Id="4256">The RMS input current has reached the input current limit threshold</String>
        <String Id="4257">DC Bus Voltage</String>
        <String Id="4258">The voltage between the positive and negative terminals of the DC bus at the battery input</String>
        <String Id="4259">DC Bus Current</String>
        <String Id="4260">The current at the battery input terminals. In charging mode, the current will be a positive value. In discharging mode, the current will be a negative value</String>
        <String Id="4261">Battery Time Remaining</String>
        <String Id="4262">The calculated available time on battery</String>
        <String Id="4263">Battery Discharge Time</String>
        <String Id="4264">The time on battery operation for this discharge</String>
        <String Id="4265">No Support</String>
        <String Id="4266">Unavailable</String>
        <String Id="4267">Overflow</String>
        <String Id="4268">Underflow</String>
        <String Id="4269">Battery Total Discharge Time</String>
        <String Id="4270">The cumulative battery discharge time</String>
        <String Id="4271">The percentage of battery charge</String>
        <String Id="4272">Battery Percentage Charge</String>
        <String Id="4273">The voltage between the positive and the negative battery terminals of the common battery disconnect</String>
        <String Id="4274">Battery Volts at Main Disconnect</String>
        <String Id="4275">The voltage between the positive and negative battery terminals of a battery cabinet</String>
        <String Id="4276">Battery Volts for Cabinet</String>
        <String Id="4277">The battery temperature for a cabinet</String>
        <String Id="4278">Battery Temperature for Cabinet</String>
        <String Id="4279">The calculated time remaining before bypass static switch shutdown due to the present overload condition</String>
        <String Id="4280">Bypass SS Overload Time Remain</String>
        <String Id="4281">Cumulative battery amp-hours withdrawn over the life of the battery</String>
        <String Id="4282">Battery Amp-Hours Consumed</String>
        <String Id="4283">Instantaneous battery power while discharging</String>
        <String Id="4284">Battery Discharge Power</String>
        <String Id="4285">Date and time when battery placed into service</String>
        <String Id="4286">Battery Commission Date</String>
        <String Id="4287">The date and time of the last battery discharge</String>
        <String Id="4288">Battery Last Discharge Date</String>
        <String Id="4289">The calculated battery time remaining has reached the low battery threshold</String>
        <String Id="4290">Battery Low</String>
        <String Id="4291">Output turned off due to battery reaching end-of-discharge</String>
        <String Id="4292">Output Off - End-of-Discharge</String>
        <String Id="4293">The battery is not charging properly</String>
        <String Id="4294">Battery Charging Error</String>
        <String Id="4295">Using a reduced battery charging algorithm due to an external signal</String>
        <String Id="4296">Battery Charging Reduced-Extrnl</String>
        <String Id="4297">Battery capacity is low</String>
        <String Id="4298">Battery Capacity Low</String>
        <String Id="4299">Output is off</String>
        <String Id="4300">Output Off</String>
        <String Id="4301">The battery is discharging</String>
        <String Id="4302">Battery Discharging</String>
        <String Id="4303">Excessive temperature differences between battery sensors detected</String>
        <String Id="4304">Battery Temperature Imbalance</String>
        <String Id="4305">The rectifier output voltage is increased to equalize the battery voltage level.</String>
        <String Id="4306">Battery Equalize</String>
        <String Id="4307">Manual battery test is in progress</String>
        <String Id="4308">Battery Manual Test In Progress</String>
        <String Id="4309">Automatic battery test is in progress</String>
        <String Id="4310">Battery Auto Test In Progress</String>
        <String Id="4311">Main battery disconnect is open</String>
        <String Id="4312">Main Battery Disconnect Open</String>
        <String Id="4313">A battery temperature sensor fault has been detected</String>
        <String Id="4314">Battery Temperature Sensor Fault</String>
        <String Id="4315">The bypass frequency is outside the inverter synchronization limits</String>
        <String Id="4316">Bypass Frequency Error</String>

        <String Id="4317">Battery circuit breaker 1 is open</String>
        <String Id="4318">Battery Circuit Breaker 1 Open</String>
        <String Id="4319">Battery circuit breaker 1 failed to open</String>
        <String Id="4320">Battery Breaker 1 Open Failure</String>
        <String Id="4321">Battery circuit breaker 1 failed to close</String>
        <String Id="4322">Battery Breaker 1 Close Failure</String>

        <String Id="4323">Battery circuit breaker 2 is open</String>
        <String Id="4324">Battery Circuit Breaker 2 Open</String>
        <String Id="4325">Battery circuit breaker 2 failed to open</String>
        <String Id="4326">Battery Breaker 2 Open Failure</String>
        <String Id="4327">Battery circuit breaker 2 failed to close</String>
        <String Id="4328">Battery Breaker 2 Close Failure</String>

        <String Id="4329">Battery circuit breaker 3 is open</String>
        <String Id="4330">Battery Circuit Breaker 3 Open</String>
        <String Id="4331">Battery circuit breaker 3 failed to open</String>
        <String Id="4332">Battery Breaker 3 Open Failure</String>
        <String Id="4333">Battery circuit breaker 3 failed to close</String>
        <String Id="4334">Battery Breaker 3 Close Failure</String>

        <String Id="4335">Battery circuit breaker 4 is open</String>
        <String Id="4336">Battery Circuit Breaker 4 Open</String>
        <String Id="4337">Battery circuit breaker 4 failed to open</String>
        <String Id="4338">Battery Breaker 4 Open Failure</String>
        <String Id="4339">Battery circuit breaker 4 failed to close</String>
        <String Id="4340">Battery Breaker 4 Close Failure</String>

        <String Id="4341">Battery circuit breaker 5 is open</String>
        <String Id="4342">Battery Circuit Breaker 5 Open</String>
        <String Id="4343">Battery circuit breaker 5 failed to open</String>
        <String Id="4344">Battery Breaker 5 Open Failure</String>
        <String Id="4345">Battery circuit breaker 5 failed to close</String>
        <String Id="4346">Battery Breaker 5 Close Failure</String>

        <String Id="4347">Battery circuit breaker 6 is open</String>
        <String Id="4348">Battery Circuit Breaker 6 Open</String>
        <String Id="4349">Battery circuit breaker 6 failed to open</String>
        <String Id="4350">Battery Breaker 6 Open Failure</String>
        <String Id="4351">Battery circuit breaker 6 failed to close</String>
        <String Id="4352">Battery Breaker 6 Close Failure</String>

        <String Id="4353">Battery circuit breaker 7 is open</String>
        <String Id="4354">Battery Circuit Breaker 7 Open</String>
        <String Id="4355">Battery circuit breaker 7 failed to open</String>
        <String Id="4356">Battery Breaker 7 Open Failure</String>
        <String Id="4357">Battery circuit breaker 7 failed to close</String>
        <String Id="4358">Battery Breaker 7 Close Failure</String>

        <String Id="4359">Battery circuit breaker 8 is open</String>
        <String Id="4360">Battery Circuit Breaker 8 Open</String>
        <String Id="4361">Battery circuit breaker 8 failed to open</String>
        <String Id="4362">Battery Breaker 8 Open Failure</String>
        <String Id="4363">Battery circuit breaker 8 failed to close</String>
        <String Id="4364">Battery Breaker 8 Close Failure</String>
        <String Id="4365">Battery charging is inhibited due to an external inhibit signal</String>
        <String Id="4366">Battery Charging Inhibited</String>

        <String Id="4367">The system output RMS voltage between phases A and B</String>
        <String Id="4368">System Output Voltage RMS A-B</String>
        <String Id="4369">The system output RMS voltage between phases B and C</String>
        <String Id="4370">System Output Voltage RMS B-C</String>
        <String Id="4371">The system output RMS voltage between phases C and A</String>
        <String Id="4372">System Output Voltage RMS C-A</String>

        <String Id="4373">The system output RMS current for Phase A</String>
        <String Id="4374">System Output RMS Current Phs A</String>
        <String Id="4375">The system output RMS current for Phase B</String>
        <String Id="4376">System Output RMS Current Phs B</String>
        <String Id="4377">The system output RMS current for Phase C</String>
        <String Id="4378">System Output RMS Current Phs C</String>

        <String Id="4379">The system output frequency</String>
        <String Id="4380">System Output Frequency</String>

        <String Id="4381">The sum total power of all system output phases</String>
        <String Id="4382">System Output Power</String>

        <String Id="4383">The sum total apparent power of all system output phases</String>
        <String Id="4384">System Output Apparent Power</String>

        <String Id="4385">The system output power factor of phase A</String>
        <String Id="4386">System Output Power Factor Phs A</String>
        <String Id="4387">The system output power factor of phase B</String>
        <String Id="4388">System Output Power Factor Phs B</String>
        <String Id="4389">The system output power factor of phase C</String>
        <String Id="4390">System Output Power Factor Phs C</String>

        <String Id="4391">System shutdown due to Emergency Power Off (EPO)</String>
        <String Id="4392">System Shutdown - EPO</String>

        <String Id="4393">System shutdown due to Remote Emergency Power Off (REPO)</String>
        <String Id="4394">System Shutdown - REPO</String>

        <String Id="4395">The system output is off</String>
        <String Id="4396">System Output Off</String>

        <String Id="4397">The system detected a voltage on the bypass when none was expected</String>
        <String Id="4398">Bypass Backfeed Detected</String>

        <String Id="4399">Manual transfer from inverter to bypass is inhibited - bypass not qualified.</String>
        <String Id="4400">Bypass - Manual Xfr Inhibited</String>

        <String Id="4401">Manual transfer from bypass to inverter is inhibited - inverter output not qualified.</String>
        <String Id="4402">Bypass - Manual Rexfr Inhibited</String>

        <String Id="4403">A battery temperature sensor is reporting a value above a threshold</String>
        <String Id="4404">Battery Over Temperature</String>

        <String Id="4405">External battery monitor 1 - battery maintenance required</String>
        <String Id="4406">Battery - External Monitor 1</String>

        <String Id="4407">External battery monitor 2 - battery maintenance required</String>
        <String Id="4408">Battery - External Monitor 2</String>

        <String Id="4409">Battery system ground fault amperage exceeds the threshold</String>
        <String Id="4410">Battery Ground Fault</String>

        <String Id="4411">The system output power on phase A as a percentage of the rated capacity</String>
        <String Id="4412">System Output Pct Power Phase A</String>

        <String Id="4413">The system output power on phase B as a percentage of the rated capacity</String>
        <String Id="4414">System Output Pct Power Phase B</String>

        <String Id="4415">The system output power on phase C as a percentage of the rated capacity</String>
        <String Id="4416">System Output Pct Power Phase C</String>

        <String Id="4417">The system output apparent power on phase A as a percentage of the rated capacity</String>
        <String Id="4418">System Output Pct Pwr (VA) Phs A</String>

        <String Id="4419">The system output apparent power on phase B as a percentage of the rated capacity</String>
        <String Id="4420">System Output Pct Pwr (VA) Phs B</String>

        <String Id="4421">The system output apparent power on phase C as a percentage of the rated capacity</String>
        <String Id="4422">System Output Pct Pwr (VA) Phs C</String>

        <String Id="4423">Emergency Power Off - Latched</String>
        <String Id="4424">System output is off - 'Emergency Power Off (EPO) - latched' requires manual reset</String>

        <String Id="4425">System Output Low Power Factor</String>
        <String Id="4426">The system output power factor is low, resulting in reduced output capacity</String>

        <String Id="4427">Output Current Exceeds Threshold</String>
        <String Id="4428">Output current for one or more phases exceeds a threshold</String>

        <String Id="4429">Inverter Overload Time Remaining</String>
        <String Id="4430">The calculated time remaining before inverter shutdown</String>

        <String Id="4431">Inverter Failure</String>
        <String Id="4432">Inverter failure - inverter output is off</String>

        <String Id="4433">Inverter Overload Phase A</String>
        <String Id="4434">Inverter is operating with an overload on phase A</String>

        <String Id="4435">Inverter Overload Phase B</String>
        <String Id="4436">Inverter is operating with an overload on phase B</String>

        <String Id="4437">Inverter Overload Phase C</String>
        <String Id="4438">Inverter is operating with an overload on phase C</String>

        <String Id="4439">Inverter Out Breaker Open Fail</String>
        <String Id="4440">Inverter output breaker failed to open</String>

        <String Id="4441">Inverter Out Breaker Close Fail</String>
        <String Id="4442">Inverter output breaker failed to close</String>

        <String Id="4443">Restart of the inverter is inhibited by an external signal</String>
        <String Id="4444">Inverter Inhibit - External</String>

        <String Id="4445">System model identifier</String>
        <String Id="4446">System Model Number</String>

        <String Id="4447">Maintenance bypass model identifier</String>
        <String Id="4448">Maintenance Bypass Model Number</String>

        <String Id="4449">Battery cabinet model identifier</String>
        <String Id="4450">Battery Cabinet Model Number</String>

        <String Id="4451">System parallel cabinet model identifier</String>
        <String Id="4452">Sys Parallel Cabinet Model Num</String>

        <String Id="4453">System serial number</String>
        <String Id="4454">System Serial Number</String>

        <String Id="4455">Maintenance bypass serial number</String>
        <String Id="4456">Maintenance Bypass Serial Number</String>

        <String Id="4457">System parallel cabinet serial number</String>
        <String Id="4458">Sys Parallel Cabinet Serial Num</String>

        <String Id="4459">Site identifier</String>
        <String Id="4460">Site Identifier</String>

        <String Id="4461">Site equipment tag number</String>
        <String Id="4462">Site Equipment Tag Number</String>

        <String Id="4463">Battery cabinet 1 serial number</String>
        <String Id="4464">Battery Cabinet 1 Serial Number</String>

        <String Id="4465">Battery cabinet 2 serial number</String>
        <String Id="4466">Battery Cabinet 2 Serial Number</String>

        <String Id="4467">Battery cabinet 3 serial number</String>
        <String Id="4468">Battery Cabinet 3 Serial Number</String>

        <String Id="4469">Battery cabinet 4 serial number</String>
        <String Id="4470">Battery Cabinet 4 Serial Number</String>

        <String Id="4471">Battery cabinet 5 serial number</String>
        <String Id="4472">Battery Cabinet 5 Serial Number</String>

        <String Id="4473">Battery cabinet 6 serial number</String>
        <String Id="4474">Battery Cabinet 6 Serial Number</String>

        <String Id="4475">Battery cabinet 7 serial number</String>
        <String Id="4476">Battery Cabinet 7 Serial Number</String>

        <String Id="4477">Battery cabinet 8 serial number</String>
        <String Id="4478">Battery Cabinet 8 Serial Number</String>

        <String Id="4479">UPS configuration description</String>
        <String Id="4480">UPS Configuration Description</String>

        <String Id="4481">Rectifier description</String>
        <String Id="4482">Rectifier Description</String>

        <String Id="4483">Bypass nominal (or rated) voltage</String>
        <String Id="4484">Bypass Nominal Voltage</String>

        <String Id="4485">The nominal (or rated) system output voltage</String>
        <String Id="4486">System Output Nominal Voltage</String>

        <String Id="4487">The nominal (or rated) system output frequency</String>
        <String Id="4488">System Output Nominal Frequency</String>

        <String Id="4489">Battery cell count - lead acid</String>
        <String Id="4490">Battery Cell Count - Lead Acid</String>

        <String Id="4491">Battery cell count - nickel cadmium</String>
        <String Id="4492">Battery Cell Count-Nickel Cadmium</String>

        <String Id="4493">Output apparent power rating</String>
        <String Id="4494">Output Apparent Power Rating</String>

        <String Id="4495">Output real power rating</String>
        <String Id="4496">Output Real Power Rating</String>

        <String Id="4497">Input isolation transformer</String>
        <String Id="4498">Input Isolation Transformer</String>

        <String Id="4499">Not Installed</String>
        <String Id="4500">Installed</String>

        <String Id="4501">System output maximum amperage rating</String>
        <String Id="4502">System Output Maximum Amp Rating</String>

        <String Id="4503">Number of UPS modules in the system</String>
        <String Id="4504">System UPS Module Count</String>

        <String Id="4505">Number of redundant UPS modules in the system</String>
        <String Id="4506">System Redundant UPS Modules</String>

        <String Id="4507">6 Pulse</String>
        <String Id="4508">12 Pulse</String>
        <String Id="4509">18 Pulse</String>
        <String Id="4510">24 Pulse</String>
        <String Id="4511">Single Module System</String>
        <String Id="4512">Module (1 + 1)</String>
        <String Id="4513">Module (1 + N)</String>
        <String Id="4514">Module (N + 1)</String>
        <String Id="4515">System Control Cabinet</String>
        <String Id="4516">Main Static Switch</String>
        <String Id="4517">Two Wire (single phase + return)</String>
        <String Id="4518">Two Wire (2 phase, no neutral)</String>
        <String Id="4519">Three Wire (2 phase + neutral)</String>
        <String Id="4520">Three Wire (3 phase, no neutral)</String>
        <String Id="4521">Four Wire (3 phases + neutral)</String>
        <String Id="4522">Not Applicable</String>
        <String Id="4523">Continuous Duty</String>
        <String Id="4524">Momentary Duty</String>
        <String Id="4525">None</String>
        <String Id="4526">Inverter</String>
        <String Id="4527">Bypass</String>
        <String Id="4528">Maintenance Bypass</String>

        <String Id="4529">None</String>
        <String Id="4530">Utility (mains)</String>
        <String Id="4531">Generator</String>
        <String Id="4532">UPS</String>

        <String Id="4533">The external input contact 1</String>
        <String Id="4534">Input Contact 01</String>

        <String Id="4535">The external input contact 2</String>
        <String Id="4536">Input Contact 02</String>

        <String Id="4537">The external input contact 3</String>
        <String Id="4538">Input Contact 03</String>

        <String Id="4539">The external input contact 4</String>
        <String Id="4540">Input Contact 04</String>

        <String Id="4541">The external input contact 5</String>
        <String Id="4542">Input Contact 05</String>

        <String Id="4543">The external input contact 6</String>
        <String Id="4544">Input Contact 06</String>

        <String Id="4545">The external input contact 7</String>
        <String Id="4546">Input Contact 07</String>

        <String Id="4547">The external input contact 8</String>
        <String Id="4548">Input Contact 08</String>

        <String Id="4549">The external input contact 9</String>
        <String Id="4550">Input Contact 09</String>

        <String Id="4551">The external input contact 10</String>
        <String Id="4552">Input Contact 10</String>

        <String Id="4553">The external input contact 11</String>
        <String Id="4554">Input Contact 11</String>

        <String Id="4555">The external input contact 12</String>
        <String Id="4556">Input Contact 12</String>

        <String Id="4557">The external input contact 13</String>
        <String Id="4558">Input Contact 13</String>

        <String Id="4559">The external input contact 14</String>
        <String Id="4560">Input Contact 14</String>

        <String Id="4561">The external input contact 15</String>
        <String Id="4562">Input Contact 15</String>

        <String Id="4563">The external input contact 16</String>
        <String Id="4564">Input Contact 16</String>

        <String Id="4565">The phase A output has exceeded the user amperage threshold</String>
        <String Id="4566">Output Amp Over User Limit-Phs A</String>

        <String Id="4567">The phase B output has exceeded the user amperage threshold</String>
        <String Id="4568">Output Amp Over User Limit-Phs B</String>

        <String Id="4569">The phase C output has exceeded the user amperage threshold</String>
        <String Id="4570">Output Amp Over User Limit-Phs C</String>

        <String Id="4571">Transfer of critical bus source to inverter is inhibited by an external signal</String>
        <String Id="4572">Inverter Transfer Inhibit - Ext</String>

        <String Id="4573">The inverter has shutdown due to a sustained overload</String>
        <String Id="4574">Inverter Shutdown - Overload</String>

        <String Id="4575">The temperature of the inlet air</String>
        <String Id="4576">Inlet Air Temperature</String>

        <String Id="4577">The cumulative operation time of the unit</String>
        <String Id="4578">Total System Operating Time</String>

        <String Id="4579">The system date and time</String>
        <String Id="4580">System Date and Time</String>

        <String Id="4581">The inlet air exceeds the maximum temperature threshold</String>
        <String Id="4582">Inlet Air Over Temperature</String>

        <String Id="4583">Rectifier failure - rectifier is off</String>
        <String Id="4584">Rectifier Failure</String>

        <String Id="4585">The operation of the rectifier is inhibited by an external signal</String>
        <String Id="4586">Rectifier Operation Inhibit-Ext</String>

        <String Id="4587">The output power is supplied by the inverter</String>
        <String Id="4588">UPS Output on Inverter</String>

        <String Id="4589">The output power is supplied by the bypass</String>
        <String Id="4590">UPS Output on Bypass</String>

        <String Id="4591">The output power is supplied by the maintenance bypass</String>
        <String Id="4592">Output Load on Maint. Bypass</String>

        <String Id="4593">The control has detected a communication failure of a component on the internal communication bus</String>
        <String Id="4594">Internal Communications Failure</String>

        <String Id="4595">Rectifier pulse count per cycle configuration</String>
        <String Id="4596">Rectifier Pulse Count</String>

        <String Id="4597">Rectifier input passive filter configuration</String>
        <String Id="4598">Rectifier Input Passive Filter</String>

        <String Id="4599">Rectifier input passive filter switch configuration</String>
        <String Id="4600">Rectifier Passive Filter Switch</String>

        <String Id="4601">Rectifier input active filter configuration</String>
        <String Id="4602">Rectifier Active Filter</String>

        <String Id="4603">UPS module type</String>
        <String Id="4604">UPS Module Type</String>

        <String Id="4605">Bypass input wire configuration</String>
        <String Id="4606">Bypass Input Wire Configuration</String>

        <String Id="4607">Output wire configuration</String>
        <String Id="4608">Output Wire Configuration</String>

        <String Id="4609">Static switch type configuration</String>
        <String Id="4610">Static Switch Type</String>

        <String Id="4611">The UPS's output power source</String>
        <String Id="4612">UPS Output Source</String>

        <String Id="4613">A ground fault has been detected on the positive DC Bus link</String>
        <String Id="4614">DC Bus Ground Fault - Positive</String>

        <String Id="4615">A ground fault has been detected on the negative DC Bus link</String>
        <String Id="4616">DC Bus Ground Fault - Negative</String>

        <String Id="4617">Equipment over temperature summary event</String>
        <String Id="4618">Equipment Over Temperature</String>

        <String Id="4619">System fan failure - one or more fans have failed</String>
        <String Id="4620">System Fan Failure</String>

        <String Id="4621">System multiple fan failure - remaining fans no longer able to provide adequate heat management capability</String>
        <String Id="4622">System Multiple Fan Failure</String>

        <String Id="4623">Password changed</String>
        <String Id="4624">Password Changed</String>

        <String Id="4625">Power supply failure</String>
        <String Id="4626">Power Supply Failure</String>

        <String Id="4627">A generator is supplying the power to the system</String>
        <String Id="4628">On Generator</String>

        <String Id="4629">Auto restart is in progress</String>
        <String Id="4630">Auto Restart In Progress</String>

        <String Id="4631">Auto restart inhibited due to an external signal</String>
        <String Id="4632">Auto Restart Inhibited - Ext</String>

        <String Id="4633">System input power source</String>
        <String Id="4634">System Input Power Source</String>

        <String Id="4635">Load Off</String>

        <String Id="4636">Load Power Source</String>
        <String Id="4637">Load power source</String>

        <String Id="4638">User initiated manual transfer to bypass</String>
        <String Id="4639">Initiated Transfer to Bypass</String>

        <String Id="4640">User initiated manual transfer to inverter</String>
        <String Id="4641">Initiated Transfer to Inverter</String>

        <String Id="4642">Battery test passed</String>
        <String Id="4643">Battery Test Passed</String>

        <String Id="4644">Battery test failed</String>
        <String Id="4645">Battery Test Failed</String>

        <String Id="4646">The battery test was manually stopped prior to completion</String>
        <String Id="4647">Battery Test Manually Stopped</String>

        <String Id="4648">The backfeed breaker is in the open position</String>
        <String Id="4649">Backfeed Breaker Open</String>

        <String Id="4650">System fan status</String>
        <String Id="4651">System Fan Status</String>

        <String Id="4652">System fan redundant status</String>
        <String Id="4653">System Fan Redundant Status</String>

        <String Id="4654">System fan capacity status</String>
        <String Id="4655">System Fan Capacity Status</String>

        <String Id="4656">Unknown</String>
        <String Id="4657">Normal</String>
        <String Id="4658">Failure</String>

        <String Id="4659">Unknown</String>
        <String Id="4660">Redundancy Available</String>
        <String Id="4661">Loss of Redundancy</String>

        <String Id="4662">Unknown</String>
        <String Id="4663">Adequate</String>
        <String Id="4664">Inadequate</String>

        <String Id="4665">System Name</String>
        <String Id="4666">End user assigned name for the system</String>

        <String Id="4667">System Description</String>
        <String Id="4668">End user assigned description for the system</String>

        <String Id="4669">System Location</String>
        <String Id="4670">End user assigned location of the system</String>

        <String Id="4671">Contact Information</String>
        <String Id="4672">End user assigned contact information for the system</String>

        <String Id="4673">Manufacturer</String>
        <String Id="4674">Manufacturer of the system</String>

        <String Id="4675">Manufacture Date</String>
        <String Id="4676">Manufacturing date of the system</String>

        <String Id="4677">Firmware Version</String>
        <String Id="4678">Firmware version identifier</String>

        <String Id="4679">MS/TP 485 stack output buffer high water mark, in number of messages</String>
        <String Id="4680">MS/TP 485 Stack Out Buffer Peak</String>

        <String Id="4681">The total number of header CRC errors for all MS/TP 485 stacks in the system since boot</String>
        <String Id="4682">MS/TP 485 Header CRC Errors</String>

        <String Id="4683">The total number of data CRC errors for all MS/TP 485 stacks in the system since boot</String>
        <String Id="4684">MS/TP 485 Data CRC Errors</String>

        <String Id="4685">The number of messages rejected by Velocity due to authentication failures</String>
        <String Id="4686">Velocity Authentication Failures</String>

        <String Id="4687">Notification of a message rejected by Velocity due to an authentication failure</String>
        <String Id="4688">Velocity Authentication Failure</String>

        <String Id="4689">MS/TP 485 stack output buffer size in number of messages</String>
        <String Id="4690">MS/TP 485 Stack Out Buffer Size</String>

        <String Id="4691">The number of router cache lookups that resulted in a miss</String>
        <String Id="4692">Router Cache Miss Count</String>



        <String Id="4693">The network address</String>
        <String Id="4694">Network Address</String>

        <String Id="4695">The network gateway address</String>
        <String Id="4696">Gateway Address</String>

        <String Id="4697">The network mask</String>
        <String Id="4698">Network Mask</String>

        <String Id="4699">Domain name server 1 address</String>
        <String Id="4700">DNS 1</String>
        <String Id="4701">Domain name server 2 address</String>
        <String Id="4702">DNS 2</String>

        <!-- Started to add MPX related items -->
        <String Id="4703">This is the label assigned to the receptacle at runtime by the system. The value is independent of any user assigned label or asset tag.</String>
        <String Id="4704">System Assigned Position Label</String>

        <String Id="4705">20 Amp (NEMA 5-20R)</String>
        <String Id="4706">10 Amp (IEC C13 sheet F)</String>
        <String Id="4707">16 Amp (IEC C19 sheet J)</String>
        <String Id="4708">Receptacle type (form factor and amperage rating)</String>
        <String Id="4709">Receptacle Type</String>

        <String Id="4710">L1-N</String>
        <String Id="4711">L2-N</String>
        <String Id="4712">L3-N</String>
        <String Id="4713">L1-L2</String>
        <String Id="4714">L2-L3</String>
        <String Id="4715">L3-L1</String>
        <String Id="4716">This is the receptacle power source line configuration (for example, L1-to-N or L1-to-L2)</String>
        <String Id="4717">Receptacle Line Source</String>

        <String Id="4718">No optional capabilities</String>
        <String Id="4719">Measurement Capability</String>
        <String Id="4720">Control Capability</String>
        <String Id="4721">Receptacle capabilities indicates the measurement and/or control capability, etc. These capabilities are associated with the receptacle</String>
        <String Id="4722">Receptacle Capabilities</String>

        <String Id="4723">Voltage (RMS) measured at the receptacle</String>
        <String Id="4724">Receptacle Voltage</String>

        <String Id="4725">Current (RMS) being delivered to the load attached to the receptacle</String>
        <String Id="4726">Receptacle Current</String>

        <String Id="4727">Power (watts) measured at the receptacle</String>
        <String Id="4728">Receptacle Power</String>

        <String Id="4729">Apparent Power (volt-amps) measured at the receptacle</String>
        <String Id="4730">Receptacle Apparent Power</String>

        <String Id="4731">Receptacle Power Factor (ratio of real power to apparent power)</String>
        <String Id="4732">Receptacle Power Factor</String>

        <String Id="4733">The line frequency measured at the receptacle</String>
        <String Id="4734">Receptacle Line Frequency</String>

        <String Id="4735">Total accumulated energy, measured at the receptacle, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset</String>
        <String Id="4736">Receptacle Accumulated Energy</String>

        <String Id="4737">Receptacle label - user assigned</String>
        <String Id="4738">Receptacle Label</String>

        <String Id="4739">The user assigned receptacle name</String>
        <String Id="4740">Receptacle User Assigned Label</String>

        <String Id="4741">The system has detected a receptacle over current condition</String>
        <String Id="4742">Receptacle Over Current</String>

        <String Id="4743">The system has detected a receptacle under current condition</String>
        <String Id="4744">Receptacle Under Current</String>

        <String Id="4745">Receptacle Power State - indicates the availability of power to the receptacle</String>
        <String Id="4746">Receptacle Power State</String>

        <String Id="4747">Unknown</String>
        <String Id="4748">Off</String>
        <String Id="4749">On</String>
        <String Id="4750">Off - On is pending time delay</String>

        <String Id="4751">User assigned receptacle asset tag</String>
        <String Id="4752">Receptacle Asset Tag 01</String>

        <String Id="4753">User assigned receptacle asset tag</String>
        <String Id="4754">Receptacle Asset Tag 02</String>

        <String Id="4755">Receptacle Power Control (OFF, ON, Cycle, etc)</String>
        <String Id="4756">Receptacle Power Control</String>
        <String Id="4757">Off</String>
        <String Id="4758">On</String>
        <String Id="4759">Cycle Power</String>

        <String Id="4760">The receptacle control lock state. User control of the receptacle power state is inhibited while LOCKED</String>
        <String Id="4761">Receptacle Control Lock State</String>
        <String Id="4762">Unlocked</String>
        <String Id="4763">Locked</String>

        <String Id="4764">If the receptacle current is below this threshold, an alarm is activated</String>
        <String Id="4765">Under Current Alarm Threshold</String>

        <String Id="4766">If the receptacle current is above this threshold, a warning is activated</String>
        <String Id="4767">Over Current Warning Threshold</String>

        <String Id="4768">If the receptacle current is above this threshold, an alarm is activated</String>
        <String Id="4769">Over Current Alarm Threshold</String>

        <String Id="4770">Receptacle power on delay after a boot event</String>
        <String Id="4771">Receptacle Power On Delay</String>

        <String Id="4772">This is the label assigned to the Branch Receptacle Module at runtime by the system. The value is independent of any user assigned label or asset tag.</String>
        <String Id="4773">System Assigned Label</String>

        <String Id="4774">The Branch Receptacle Module (BRM) model designation</String>
        <String Id="4775">BRM Model</String>

        <String Id="4776">The form factor and amperage rating of the receptacles in the module</String>
        <String Id="4777">Branch Receptacle Type</String>

        <String Id="4778">Branch Receptacle Module capabilities indicates the measurement and/or control capability, etc. This applies to the Branch Receptacle Module and its associated receptacles</String>
        <String Id="4779">Branch Capabilities</String>

        <String Id="4780">This is the Branch Receptacle Module power source line configuration (for example, L1-to-N or L1-to-L2)</String>
        <String Id="4781">Branch Line Source</String>

        <String Id="4782">The number of receptacles in this module</String>
        <String Id="4783">Module Receptacle Count</String>

        <String Id="4784">Rated line voltage for the module</String>
        <String Id="4785">Branch Rated Line Voltage</String>

        <String Id="4786">This is the rated input line current for the module</String>
        <String Id="4787">Branch Rated Line Current</String>

        <String Id="4788">Rated line frequency for the module and its associated receptacles</String>
        <String Id="4789">Branch Rated Line Frequency</String>

        <String Id="4790">Total accumulated energy, measured at the Branch Receptacle Module input, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset</String>
        <String Id="4791">Branch Accumulated Energy</String>

        <String Id="4792">System Input Currents are Imbalanced</String>
        <String Id="4793">System Input Current Imbalance</String>

        <String Id="4794">Bypass static switch is off due to the state of an external signal</String>
        <String Id="4795">Bypass Static Switch Off Extrnl</String>

        <String Id="4796">Battery disconnect due to end-of-discharge</String>
        <String Id="4797">Battery EoD - Disconnect</String>

        <String Id="4798">The system output RMS voltage between phases A and Neutral</String>
        <String Id="4799">System Output Voltage RMS A-N</String>

        <String Id="4800">The system output RMS voltage between phases B and Neutral</String>
        <String Id="4801">System Output Voltage RMS B-N</String>

        <String Id="4802">The system output RMS voltage between phases C and Neutral</String>
        <String Id="4803">System Output Voltage RMS C-N</String>

        <String Id="4804">A fault has been detected in the system output</String>
        <String Id="4805">System Output Fault</String>

        <String Id="4806">Inverter is off (operation is inhibited) due to external signal state</String>
        <String Id="4807">Inverter Off - External</String>

        <String Id="4808">The system has detected a short across one or more inverter static switch Silicon Controlled Rectifiers (SCR)</String>
        <String Id="4809">Inverter Static Switch SCR Short</String>

        <String Id="4810">One or more temperature sensors cannot provide a valid temperature reading (i.e. sensor failure, wiring failure, sense circuit failure, etc)</String>
        <String Id="4811">Temperature Sensor Error</String>

        <String Id="4812">This is the label assigned to the Power Distribution Unit at runtime by the system. The value is independent of any user assigned label or asset tag.</String>
        <String Id="4813">System Assigned Position Label</String>

        <String Id="4814">The Branch's globally unique serial number assigned at the time of manufacture</String>
        <String Id="4815">Branch Serial Number</String>

        <String Id="4816">This is a one-based value that indicates the strip's relative position within the rack</String>
        <String Id="4817">PDU Relative Position</String>

        <String Id="4818">This is a one-based value that indicates the modules relative position within the strip</String>
        <String Id="4819">Module's Relative Position</String>

        <String Id="4820">A one-based number indicating the position of this receptacle within a module</String>
        <String Id="4821">Receptacle Position</String>

        <String Id="4822">The Branch Receptacle Module is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N)</String>
        <String Id="4823">PDU Module S/N</String>

        <String Id="4824">The receptacle is installed in the Branch Receptacle Module identified by this Serial Number (S/N)</String>
        <String Id="4825">Branch Receptacle Module S/N</String>

        <String Id="4826">Module Firmware Version Identifier</String>
        <String Id="4827">Firmware Version</String>

        <String Id="4828">Module's measured input line-to-neutral voltage</String>
        <String Id="4829">Branch Voltage</String>

        <String Id="4830">Module's measured total input line-to-neutral current</String>
        <String Id="4831">Branch Current</String>

        <String Id="4832">Module's measured total input line-to-neutral real power</String>
        <String Id="4833">Branch Power</String>

        <String Id="4834">Module's measured total input line-to-neutral apparent power</String>
        <String Id="4835">Branch Apparent Power</String>

        <String Id="4836">Module's measured total input line-to-neutral power factor</String>
        <String Id="4837">Branch Power Factor</String>

        <String Id="4838">The system has detected a module over current condition</String>
        <String Id="4839">Branch Over Current</String>

        <String Id="4840">The system has detected a module under current condition</String>
        <String Id="4841">Branch Under Current</String>

        <String Id="4842">If the module current is below this threshold, an under current alarm is activated</String>
        <String Id="4843">Under Current Alarm Threshold</String>

        <String Id="4844">If the module current is above this threshold, an over current warning is activated</String>
        <String Id="4845">Over Current Warning Threshold</String>

        <String Id="4846">If the module current is above this threshold, an over current alarm is activated</String>
        <String Id="4847">Over Current Alarm Threshold</String>

        <String Id="4848">Module's measured input line-to-line voltage</String>
        <String Id="4849">Branch Voltage</String>

        <String Id="4850">Module's measured input line-to-line current</String>
        <String Id="4851">Branch Current</String>

        <String Id="4852">Module's measured input line-to-line real power</String>
        <String Id="4853">Branch Power</String>

        <String Id="4854">Module's measured input line-to-line apparent power</String>
        <String Id="4855">Branch Apparent Power</String>

        <String Id="4856">Module's measured input line-to-line power factor</String>
        <String Id="4857">Branch Power Factor</String>

        <String Id="4858">The system has detected a module over current condition</String>
        <String Id="4859">Branch Over Current</String>

        <String Id="4860">The system has detected a module under current condition</String>
        <String Id="4861">Branch Under Current</String>

        <String Id="4862">If the module current is below this threshold, an under current alarm is activated</String>
        <String Id="4863">Under Current Alarm Threshold</String>

        <String Id="4864">If the module current is above this threshold, an over current warning is activated</String>
        <String Id="4865">Over Current Warning Threshold</String>

        <String Id="4866">If the module current is above this threshold, an over current alarm is activated</String>
        <String Id="4867">Over Current Alarm Threshold</String>

        <String Id="4868">One or more conditions indicate a Branch Receptacle Module failure, service is required</String>
        <String Id="4869">Branch Failure</String>

        <String Id="4870">This is the label assigned to the Power Entry Module at runtime by the system. The value is independent of any user assigned label or asset tag.</String>
        <String Id="4871">System Assigned Position Label</String>

        <String Id="4872">The Power Entry Module model designation</String>
        <String Id="4873">PEM Model</String>

        <String Id="4874">1-Phase / 3-Wire (L1, N, PE)</String>
        <String Id="4875">2-Phase / 3-Wire (L1, L2, PE)</String>
        <String Id="4876">3-Phase / 4-Wire (L1, L2, L3, PE)</String>
        <String Id="4877">3-Phase / 5-Wire (L1, L2, L3, N, PE)</String>
        <String Id="4878">The PDU input wiring type</String>
        <String Id="4879">PDU Input Wiring Type</String>

        <String Id="4880">Rated input line voltage for the module</String>
        <String Id="4881">Rated Input Line Voltage</String>

        <String Id="4882">Rated input line current for the module</String>
        <String Id="4883">Rated Input Line Current</String>

        <String Id="4884">Rated input line frequency for the module</String>
        <String Id="4885">Rated Input Line Frequency</String>

        <String Id="4886">Total accumulated energy, measured at the module input, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset</String>
        <String Id="4887">PDU Accumulated Energy</String>

        <String Id="4888">The PEM's globally unique serial number assigned at the time of manufacture</String>
        <String Id="4889">PEM Serial Number</String>

        <String Id="4890">Module Firmware Version Identifier</String>
        <String Id="4891">Firmware Version</String>

        <String Id="4892">Module's measured input line-to-neutral voltage</String>
        <String Id="4893">PDU Voltage</String>

        <String Id="4894">Module's measured total input line-to-neutral current</String>
        <String Id="4895">PDU Current</String>

        <String Id="4896">Module's measured total input line-to-neutral real power</String>
        <String Id="4897">PDU Power</String>

        <String Id="4898">Module's measured total input line-to-neutral apparent power</String>
        <String Id="4899">PDU Apparent Power</String>

        <String Id="4900">Module's measured total input line-to-neutral power factor</String>
        <String Id="4901">PDU Power Factor</String>

        <String Id="4902">The system has detected a module over current condition</String>
        <String Id="4903">PDU Over Current</String>

        <String Id="4904">The system has detected a module under current condition</String>
        <String Id="4905">PDU Under Current</String>

        <String Id="4906">Excessive temperature rise internal to the system (i.e. difference between the output versus input temperature is too large)</String>
        <String Id="4907">System Internal Temperature Rise</String>

        <String Id="4908">Automatic restart failed</String>
        <String Id="4909">Automatic Restart Failed</String>

        <String Id="4910">A summary event indicating one or more fuse failures</String>
        <String Id="4911">Fuse Failure</String>

        <String Id="4912">System controller internal error</String>
        <String Id="4913">System Controller Error</String>

        <String Id="4914">One or more breakers in the system failed to open</String>
        <String Id="4915">System Breaker(s) Open Failure</String>

        <String Id="4916">Module's measured input voltage</String>
        <String Id="4917">PDU Voltage</String>

        <String Id="4918">Module's measured total input current</String>
        <String Id="4919">PDU Current</String>

        <String Id="4920">Module's measured total input line-to-line real power</String>
        <String Id="4921">PDU Power</String>

        <String Id="4922">Module's measured total input apparent power</String>
        <String Id="4923">PDU Apparent Power</String>

        <String Id="4924">Module's measured total input power factor</String>
        <String Id="4925">PDU Power Factor</String>

        <String Id="4926">The system has detected a module over current condition</String>
        <String Id="4927">PDU Over Current</String>

        <String Id="4928">The system has detected a module under current condition</String>
        <String Id="4929">PDU Under Current</String>

        <String Id="4930">Module's measured input line-to-line voltage (L1-L2)</String>
        <String Id="4931">PDU Voltage L1-L2</String>

        <String Id="4932">Module's measured input line-to-line voltage (L2-L3)</String>
        <String Id="4933">PDU Voltage L2-L3</String>

        <String Id="4934">Module's measured input line-to-line voltage (L3-L1)</String>
        <String Id="4935">PDU Voltage L3-L1</String>

        <String Id="4936">Module's measured input line-to-neutral voltage (L1-N)</String>
        <String Id="4937">PDU Voltage L1-N</String>

        <String Id="4938">Module's measured input line-to-neutral voltage (L2-N)</String>
        <String Id="4939">PDU Voltage L2-N</String>

        <String Id="4940">Module's measured input line-to-neutral voltage (L3-N)</String>
        <String Id="4941">PDU Voltage L3-N</String>

        <String Id="4942">Module's measured total input current line 1</String>
        <String Id="4943">PDU Current L1</String>

        <String Id="4944">Module's measured total input current line 2</String>
        <String Id="4945">PDU Current L2</String>

        <String Id="4946">Module's measured total input current line 3</String>
        <String Id="4947">PDU Current L3</String>

        <String Id="4948">Module's measured total input power line 1</String>
        <String Id="4949">PDU Power L1</String>

        <String Id="4950">Module's measured total input power line 2</String>
        <String Id="4951">PDU Power L2</String>

        <String Id="4952">Module's measured total input power line 3</String>
        <String Id="4953">PDU Power L3</String>

        <String Id="4954">Module's measured total input apparent power line 1</String>
        <String Id="4955">PDU Apparent Pwr L1</String>

        <String Id="4956">Module's measured total input apparent power line 2</String>
        <String Id="4957">PDU Apparent Pwr L2</String>

        <String Id="4958">Module's measured total input apparent power line 3</String>
        <String Id="4959">PDU Apparent Pwr L3</String>

        <String Id="4960">Module's measured total input power factor line 1</String>
        <String Id="4961">PDU Power Factor L1</String>

        <String Id="4962">Module's measured total input power factor line 2</String>
        <String Id="4963">PDU Power Factor L2</String>

        <String Id="4964">Module's measured total input power factor line 3</String>
        <String Id="4965">PDU Power Factor L3</String>

        <String Id="4966">The system has detected a module over current condition on line 1</String>
        <String Id="4967">PDU Over Current L1</String>

        <String Id="4968">The system has detected a module over current condition on line 2</String>
        <String Id="4969">PDU Over Current L2</String>

        <String Id="4970">The system has detected a module over current condition on line 3</String>
        <String Id="4971">PDU Over Current L3</String>

        <String Id="4972">The system has detected a module under current condition on line 1</String>
        <String Id="4973">PDU Under Current L1</String>

        <String Id="4974">The system has detected a module under current condition on line 2</String>
        <String Id="4975">PDU Under Current L2</String>

        <String Id="4976">The system has detected a module under current condition on line 3</String>
        <String Id="4977">PDU Under Current L3</String>

        <String Id="4978">If the module current is below this threshold, an under current alarm is activated</String>
        <String Id="4979">Under Current Alarm Threshold</String>

        <String Id="4980">If the module current is above this threshold, an over current warning is activated</String>
        <String Id="4981">Over Current Warning Threshold</String>

        <String Id="4982">If the module current is above this threshold, an over current alarm is activated</String>
        <String Id="4983">Over Current Alarm Threshold</String>

        <String Id="4984">If the module current is below this threshold, an under current alarm is activated</String>
        <String Id="4985">Under Current Alarm Threshold</String>

        <String Id="4986">If the module current is above this threshold, an over current warning is activated</String>
        <String Id="4987">Over Current Warning Threshold</String>

        <String Id="4988">If the module current is above this threshold, an over current alarm is activated</String>
        <String Id="4989">Over Current Alarm Threshold</String>

        <String Id="4990">If the module's line 1 current is below this threshold, an under current alarm is activated</String>
        <String Id="4991">Under Current Alarm Threshold L1</String>

        <String Id="4992">If the module's line 2 current is below this threshold, an under current alarm is activated</String>
        <String Id="4993">Under Current Alarm Threshold L2</String>

        <String Id="4994">If the module's line 3 current is below this threshold, an under current alarm is activated</String>
        <String Id="4995">Under Current Alarm Threshold L3</String>

        <String Id="4996">If the module's line 1 current is above this threshold, an over current warning is activated</String>
        <String Id="4997">Over Current Warn Threshold L1</String>

        <String Id="4998">If the module's line 2 current is above this threshold, an over current warning is activated</String>
        <String Id="4999">Over Current Warn Threshold L2</String>

        <String Id="5000">If the module's line 3 current is above this threshold, an over current warning is activated</String>
        <String Id="5001">Over Current Warn Threshold L3</String>

        <String Id="5002">If the module's line 1 current is above this threshold, an over current alarm is activated</String>
        <String Id="5003">Over Current Alarm Threshold L1</String>

        <String Id="5004">If the module's line 2 current is above this threshold, an over current alarm is activated</String>
        <String Id="5005">Over Current Alarm Threshold L2</String>

        <String Id="5006">If the module's line 3 current is above this threshold, an over current alarm is activated</String>
        <String Id="5007">Over Current Alarm Threshold L3</String>

        <String Id="5008">The user assigned PDU label</String>
        <String Id="5009">PDU User Assigned Label</String>

        <String Id="5010">User assigned PDU asset tag</String>
        <String Id="5011">PDU Asset Tag 01</String>

        <String Id="5012">User assigned PDU asset tag</String>
        <String Id="5013">PDU Asset Tag 02</String>

        <String Id="5014">The receptacle power state changed to the ON state</String>
        <String Id="5015">Receptacle Power State - On</String>

        <String Id="5016">The receptacle power state changed to the OFF state</String>
        <String Id="5017">Receptacle Power State - Off</String>

        <String Id="5018">The Branch Receptacle Module's input breaker is open</String>
        <String Id="5019">Branch Breaker Open</String>

        <String Id="5020">Device Configuration Change</String>
        <String Id="5021">Device Configuration Change</String>

        <String Id="5022">Basic Display Module Removed</String>
        <String Id="5023">Basic Display Module Removed</String>

        <String Id="5024">Basic Display Module Discovered</String>
        <String Id="5025">Basic Display Module Discovered</String>

        <String Id="5026">The PDU's globally unique serial number assigned at the time of manufacture</String>
        <String Id="5027">PDU Serial Number</String>

        <String Id="5028">The Power Module is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N)</String>
        <String Id="5029">PDU Module S/N</String>

        <String Id="5030">The system has detected a power module over current condition</String>
        <String Id="5031">PDU Over Current</String>

        <String Id="5032">The system has detected a power module under current condition</String>
        <String Id="5033">PDU Under Current</String>

        <String Id="5034">One or more conditions indicate a power module failure, service is required</String>
        <String Id="5035">PDU Failure</String>

        <String Id="5036">Internal communications failure with the Power Module</String>
        <String Id="5037">PDU Communication Fail</String>

        <String Id="5038">Branch Receptacle Module Removed</String>
        <String Id="5039">Branch Removed</String>

        <String Id="5040">Branch Receptacle Module Discovered</String>
        <String Id="5041">Branch Discovered</String>

        <String Id="5042">The system has detected a Branch Receptacle Module over current condition</String>
        <String Id="5043">Branch Over Current</String>

        <String Id="5044">The system has detected a Branch Receptacle Module under current condition</String>
        <String Id="5045">Branch Current</String>

        <String Id="5046">The receptacle's load stopped drawing power</String>
        <String Id="5047">Receptacle Load Removed</String>

        <String Id="5048">The receptacle's load started to draw power</String>
        <String Id="5049">Receptacle Load Added</String>

        <String Id="5050">A runtime assigned receptacle identification number</String>
        <String Id="5051">Receptacle Identifier</String>

        <String Id="5052">A runtime assigned Branch Receptacle Module identification number</String>
        <String Id="5053">Branch Identifier</String>

        <String Id="5054">A runtime assigned power module identification number</String>
        <String Id="5055">Power Module Identifier</String>

        <String Id="5056">A runtime assigned advanced power strip identification number</String>
        <String Id="5057">Power Distribution Unit ID</String>

        <String Id="5058">PDU's Total Input Power (sum of power for all phases).</String>
        <String Id="5059">PDU Total Input Power</String>

        <String Id="5060">Total accumulated energy, measured at the module input line 1, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset for line 1</String>
        <String Id="5061">PDU Total Input Power via L1</String>

        <String Id="5062">Total accumulated energy, measured at the module input line 2, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset for line 2</String>
        <String Id="5063">PDU Total Input Power via L2</String>

        <String Id="5064">Total accumulated energy, measured at the module input line 3, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset for line 3</String>
        <String Id="5065">PDU Total Input Power via L3</String>

        <String Id="5066">Branch Receptacle Module label - user assigned</String>
        <String Id="5067">Branch User Assigned Label</String>

        <String Id="5068">User assigned Branch Receptacle Module asset tag</String>
        <String Id="5069">Branch Asset Tag 01</String>

        <String Id="5070">User assigned Branch Receptacle Module asset tag</String>
        <String Id="5071">Branch Asset Tag 02</String>

        <String Id="5072">Module Serial Number</String>
        <String Id="5073">Module Serial Number</String>

        <String Id="5074">PEM</String>
        <String Id="5075">Branch Receptacle Module</String>
        <String Id="5076">Basic Display Module</String>
        <String Id="5077">Communications Module</String>
        <String Id="5078">Power Rail Chassis</String>

        <String Id="5079">Module Removed</String>
        <String Id="5080">Module Removed</String>

        <String Id="5081">Module Added</String>
        <String Id="5082">Module Added</String>

        <String Id="5083">Power Distribution Unit module type</String>
        <String Id="5084">PDU Module Type</String>

        <String Id="5085">If the receptacle current is below this percentage of the full scale rated value, an alarm is activated</String>
        <String Id="5086">Under Current Alarm Threshold</String>

        <String Id="5087">If the receptacle current is above this percentage of the full scale rated value, a warning is activated</String>
        <String Id="5088">Over Current Warning Threshold</String>

        <String Id="5089">If the receptacle current is above this percentage of the full scale rated value, an alarm is activated</String>
        <String Id="5090">Over Current Alarm Threshold</String>

        <String Id="5091">If the module current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5092">Under Current Alarm Threshold</String>

        <String Id="5093">If the module current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5094">Over Current Warning Threshold</String>

        <String Id="5095">If the module current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5096">Over Current Alarm Threshold</String>

        <String Id="5097">If the module current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5098">Under Current Alarm Threshold</String>

        <String Id="5099">If the module current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5100">Over Current Warning Threshold</String>

        <String Id="5101">If the module current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5102">Over Current Alarm Threshold</String>

        <String Id="5103">If the module's line 1 current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5104">Under Current Alarm Threshold L1</String>

        <String Id="5105">If the module's line 2 current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5106">Under Current Alarm Threshold L2</String>

        <String Id="5107">If the module's line 3 current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5108">Under Current Alarm Threshold L3</String>

        <String Id="5109">If the module's line 1 current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5110">Over Current Warn Threshold L1</String>

        <String Id="5111">If the module's line 2 current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5112">Over Current Warn Threshold L2</String>

        <String Id="5113">If the module's line 3 current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5114">Over Current Warn Threshold L3</String>

        <String Id="5115">If the module's line 1 current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5116">Over Current Alarm Threshold L1</String>

        <String Id="5117">If the module's line 2 current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5118">Over Current Alarm Threshold L2</String>

        <String Id="5119">If the module's line 3 current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5120">Over Current Alarm Threshold L3</String>

        <String Id="5121">If the module current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5122">Under Current Alarm Threshold</String>

        <String Id="5123">If the module current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5124">Over Current Warning Threshold</String>

        <String Id="5125">If the module current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5126">Over Current Alarm Threshold</String>

        <String Id="5127">If the module current is below this percentage of the full scale rated value, an under current alarm is activated</String>
        <String Id="5128">Under Current Alarm Threshold</String>

        <String Id="5129">If the module current is above this percentage of the full scale rated value, an over current warning is activated</String>
        <String Id="5130">Over Current Warning Threshold</String>

        <String Id="5131">If the module current is above this percentage of the full scale rated value, an over current alarm is activated</String>
        <String Id="5132">Over Current Alarm Threshold</String>

        <String Id="5133">Reset to factory defaults</String>
        <String Id="5134">No action</String>
        <String Id="5135">Reset the system to the factory default settings</String>
        <String Id="5136">Reset System to Factory Defaults</String>

        <String Id="5137">Module compatibility error requires a system firmware update to resolve</String>
        <String Id="5138">Firmware Update Required</String>

        <String Id="5139">A generic test event designed to evaluate system handling of events</String>
        <String Id="5140">Generic Test Event</String>

        <String Id="5141">Defines the number of devices contained in the system</String>
        <String Id="5142">System Device Count</String>

        <String Id="5143">microOhm</String>
        <String Id="5144">milliOhm</String>
        <String Id="5145">ohm</String>
        <String Id="5146">kiloOhm</String>
        <String Id="5147">megaOhm</String>
        <!-- Machine transferred from FDM 'CoreInterfaces.xml' via Fdm2Xml.exe -->
        <String Id="5148">Server Class</String>
        <String Id="5149">The general classification for this system</String>
        <String Id="5150">UPS</String>
        <String Id="5151">AIR</String>
        <String Id="5152">PMP</String>
        <String Id="5153">PDU</String>
        <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
        <String Id="5154">PDU Available Current Until Alarm</String>
        <String Id="5155">The amount of current increase allowed before the over current alarm occurs.</String>
        <String Id="5156">PDU Percent Current Utilization</String>
        <String Id="5157">The percent of current utilization relative to over current alarm threshold.</String>
        <String Id="5158">Branch Available Current Until Alarm</String>
        <String Id="5159">Branch Percent Current Utilization</String>
        <String Id="5160">Receptacle Available Current Until Alarm</String>
        <String Id="5161">Receptacle Percent Current Utilization</String>
        <String Id="5162">PDU Available L1 Current Until Alarm</String>
        <String Id="5163">PDU Available L2 Current Until Alarm</String>
        <String Id="5164">PDU Available L3 Current Until Alarm</String>
        <String Id="5165">PDU Percent L1 Current Utilization</String>
        <String Id="5166">PDU Percent L2 Current Utilization</String>
        <String Id="5167">PDU Percent L3 Current Utilization</String>
        <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
        <String Id="5168">Auxiliary Sensor Identifier</String>
        <String Id="5169">System assigned auxiliary sensor identification number</String>
        <String Id="5170">System Assigned Label</String>
        <String Id="5171">Label assigned to the Auxiliary Sensor at runtime by the system. The value is independent of any user assigned label or asset tag.</String>
        <String Id="5172">Auxiliary Sensor's Relative Position</String>
        <String Id="5173">Auxiliary sensor relative position. This is a one-based value that indicates the sensor's position relative to the sensor string connector.</String>
        <String Id="5174">PDU Module S/N</String>
        <String Id="5175">The Auxiliary Sensor is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N)</String>
        <String Id="5176">Auxiliary Sensor Measurement Type</String>
        <String Id="5177">Auxiliary Sensor Measurement Type</String>
        <String Id="5178">Temperature</String>
        <String Id="5179">Relative Humidity</String>
        <String Id="5180">Auxiliary Sensor User Assigned Label</String>
        <String Id="5181">User assigned auxiliary sensor label.</String>
        <String Id="5182">Auxiliary Sensor Asset Tag 01</String>
        <String Id="5183">User assigned auxiliary sensor asset tag 01</String>
        <String Id="5184">Auxiliary Sensor Asset Tag 02</String>
        <String Id="5185">User assigned auxiliary sensor asset tag 02</String>
        <String Id="5186">Temperature Sensor Serial Number</String>
        <String Id="5187">The Temperature Sensor's globally unique serial number assigned at the time of manufacture</String>
        <String Id="5188">Temperature measured at the temperature sensor</String>
        <String Id="5189">Over Temperature</String>
        <String Id="5190">An over temperature condition was detected.</String>
        <String Id="5191">Under Temperature</String>
        <String Id="5192">An under temperature condition was detected</String>
        <String Id="5193">Over Temperature Warning Threshold</String>
        <String Id="5194">Over temperature warning threshold.</String>
        <String Id="5195">Over Temperature Alarm Threshold</String>
        <String Id="5196">Over temperature alarm threshold.</String>
        <String Id="5197">Under Temperature Warning Threshold</String>
        <String Id="5198">Under temperature warning threshold.</String>
        <String Id="5199">Under Temperature Alarm Threshold</String>
        <String Id="5200">Under temperature alarm threshold.</String>
        <String Id="5201">Humidity Sensor Serial Number</String>
        <String Id="5202">The Humidity Sensor's globally unique serial number assigned at the time of manufacture</String>
        <String Id="5203">Relative Humidity</String>
        <String Id="5204">Relative Humidity measured at the humidity sensor</String>
        <String Id="5205">Over Relative Humidity</String>
        <String Id="5206">An over relative humidity condition was detected</String>
        <String Id="5207">Under Relative Humidity</String>
        <String Id="5208">An under relative humidity condition was detected</String>
        <String Id="5209">Over Relative Humidity Warning Threshold</String>
        <String Id="5210">Over relative humidity warning threshold.</String>
        <String Id="5211">Over Relative Humidity Alarm Threshold</String>
        <String Id="5212">Over relative humidity alarm threshold.</String>
        <String Id="5213">Under Relative Humidity Warning Threshold</String>
        <String Id="5214">Under relative humidity warning threshold.</String>
        <String Id="5215">Under Relative Humidity Alarm Threshold</String>
        <String Id="5216">Under relative humidity alarm threshold.</String>
        <String Id="5217">Auxiliary Sensor String</String>
        <!-- Machine transferred from FDM 'icom_xp.xml' via Fdm2Xml.exe -->
        <String Id="5218">Ext Air Sensor A Temperature</String>
        <String Id="5219">Air temperature as measured by external air sensor A.</String>
        <String Id="5220">Ext Air Sensor A Humidity</String>
        <String Id="5221">Relative humidity as measured by external air sensor A.</String>
        <String Id="5222">Ext Air Sensor A Dew Point Temp</String>
        <String Id="5223">Dew point temperature as measured by external air sensor A.</String>
        <String Id="5224">Ext Air Sensor B Temperature</String>
        <String Id="5225">Air temperature as measured by external air sensor B.</String>
        <String Id="5226">Ext Air Sensor B Humidity</String>
        <String Id="5227">Relative humidity as measured by external air sensor B.</String>
        <String Id="5228">Ext Air Sensor B Dew Point Temp</String>
        <String Id="5229">Dew point temperature as measured by external air sensor B.</String>
        <String Id="5230">External Air Over Temp Threshold</String>
        <String Id="5231">Threshold value used in the ([External Air Sensor A Over Temperature], [External Air Sensor B Over Temperature]...) events.</String>
        <String Id="5232">External Air Sensor A Over Temperature</String>
        <String Id="5233">[Ext Air Sensor A Temperature] has exceeded [External Air Over Temp Threshold].</String>
        <String Id="5234">Ext Air Sensor A Over Temp - Event Control</String>
        <String Id="5235">Enable/disable the activation of the [External Air Sensor A Over Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5236">Ext Air Sensor A Over Temp - Event Type</String>
        <String Id="5237">The event type for the [External Air Sensor A Over Temperature] event.</String>
        <String Id="5238">Message</String>
        <String Id="5239">Warning</String>
        <String Id="5240">Alarm</String>
        <String Id="5241">External Air Sensor B Over Temperature</String>
        <String Id="5242">[Ext Air Sensor B Temperature] has exceeded [External Air Over Temp Threshold].</String>
        <String Id="5243">Ext Air Sensor B Over Temp - Event Control</String>
        <String Id="5244">Enable/disable the activation of the [External Air Sensor B Over Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5245">Ext Air Sensor B Over Temp - Event Type</String>
        <String Id="5246">The event type for the [External Air Sensor B Over Temperature] event.</String>
        <String Id="5247">Ext Air Under Temp Threshold</String>
        <String Id="5248">Threshold value used in the ([Ext Air Sensor A Under Temperature], [Ext Air Sensor B Under Temperature]...) events.</String>
        <String Id="5249">Ext Air Sensor A Under Temperature</String>
        <String Id="5250">[Ext Air Sensor A Temperature] has dropped below [Ext Air Under Temp Threshold].</String>
        <String Id="5251">Ext Air Sensor A Under Temp - Event Control</String>
        <String Id="5252">Enable/disable the activation of the [Ext Air Sensor A Under Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5253">Ext Air Sensor A Under Temp - Event Type</String>
        <String Id="5254">The event type for the [Ext Air Sensor A Under Temperature] event.</String>
        <String Id="5255">Ext Air Sensor B Under Temperature</String>
        <String Id="5256">[Ext Air Sensor B Temperature] has dropped below [Ext Air Under Temp Threshold].</String>
        <String Id="5257">Ext Air Sensor B Under Temp - Event Control</String>
        <String Id="5258">Enable/disable the activation of the [Ext Air Sensor B Under Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5259">Ext Air Sensor B Under Temp - Event Type</String>
        <String Id="5260">The event type for the [Ext Air Sensor B Under Temperature] event.</String>
        <String Id="5261">Ext Dew Point Over Temp Threshold</String>
        <String Id="5262">Threshold value used in the [Ext Dew Point Over Temperature] event.</String>
        <String Id="5263">Ext Dew Point Over Temperature</String>
        <String Id="5264">At least one dew point temperature reading ([Ext Air Sensor A Dew Point Temp], [Ext Air Sensor B Dew Point Temp]...) has exceeded [Ext Dew Point Over Temp Threshold].</String>
        <String Id="5265">Ext Dew Point Over Temp - Event Control</String>
        <String Id="5266">Enable/disable the activation of the [Ext Dew Point Over Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5267">Ext Dew Point Over Temp - Event Type</String>
        <String Id="5268">The event type for the [Ext Dew Point Over Temperature] event.</String>
        <String Id="5269">External Air Sensor A Issue</String>
        <String Id="5270">The external air sensor A is disconnected or the signal is out of range.</String>
        <String Id="5271">Ext Air Sensor A Issue - Event Control</String>
        <String Id="5272">Enable/disable the activation of the [External Air Sensor A Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5273">External Air Sensor A Issue - Event Type</String>
        <String Id="5274">The event type for the [External Air Sensor A Issue] event.</String>
        <String Id="5275">External Air Sensor B Issue</String>
        <String Id="5276">The external air sensor B is disconnected or the signal is out of range.</String>
        <String Id="5277">Ext Air Sensor B Issue - Event Control</String>
        <String Id="5278">Enable/disable the activation of the [External Air Sensor B Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5279">External Air Sensor B Issue - Event Type</String>
        <String Id="5280">The event type for the [External Air Sensor B Issue] event.</String>
        <String Id="5281">Supply Chilled Water Temperature</String>
        <String Id="5282">Supply chilled water temperature.</String>
        <String Id="5283">Supply Chilled Water Over Temp Threshold</String>
        <String Id="5284">Threshold value used in the [Supply Chilled Water Over Temp] event.</String>
        <String Id="5285">Supply Chilled Water Over Temp</String>
        <String Id="5286">[Supply Chilled Water Temperature] has exceeded [Supply Chilled Water Over Temp Threshold].</String>
        <String Id="5287">Supply CW Over Temp - Event Control</String>
        <String Id="5288">Enable/disable the activation of the [Supply Chilled Water Over Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5289">Supply CW Over Temp - Event Type</String>
        <String Id="5290">The event type for the [Supply Chilled Water Over Temp] event.</String>
        <String Id="5291">Supply Chilled Water Temp Sensor Issue</String>
        <String Id="5292">The supply chilled water temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="5293">Supply CW Temp Sensor Issue - Event Control</String>
        <String Id="5294">Enable/disable the activation of the [Supply Chilled Water Temp Sensor Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5295">Supply CW Temp Sensor Issue - Event Type</String>
        <String Id="5296">The event type for the [Supply Chilled Water Temp Sensor Issue] event.</String>
        <String Id="5297">Supply Refrigerant Temperature</String>
        <String Id="5298">Supply refrigerant temperature.</String>
        <String Id="5299">Supply Refrig Over Temp Threshold</String>
        <String Id="5300">Threshold value used in the [Supply Refrigerant Over Temp] event.</String>
        <String Id="5301">Supply Refrigerant Over Temp</String>
        <String Id="5302">Event that is activated when [Supply Refrigerant Temperature] exceeds [Supply Refrig Over Temp Threshold]. The event is deactivated when the temperature drops below the threshold.</String>
        <String Id="5303">Supply Refrig Over Temp - Event Control</String>
        <String Id="5304">Enable/disable the activation of the [Supply Refrigerant Over Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5305">Supply Refrig Over Temp - Event Type</String>
        <String Id="5306">The event type for the [Supply Refrigerant Over Temp] event.</String>
        <String Id="5307">Supply Refrigerant Under Temp</String>
        <String Id="5308">[Supply Refrigerant Temperature] has dropped below a specified threshold.</String>
        <String Id="5309">Supply Refrig Under Temp - Event Control</String>
        <String Id="5310">Enable/disable the activation of the [Supply Refrigerant Under Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5311">Supply Refrig Under Temp - Event Type</String>
        <String Id="5312">The event type for the [Supply Refrigerant Under Temp] event.</String>
        <String Id="5313">Supply Refrigerant Temp Sensor Issue</String>
        <String Id="5314">The supply refrigeramt temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="5315">Supply Refrig Temp Sensor Issue - Event Control</String>
        <String Id="5316">Enable/disable the activation of the [Supply Refrigerant Temp Sensor Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5317">Supply Refrig Temp Sensor Issue - Event Type</String>
        <String Id="5318">The event type for the [Supply Refrigerant Temp Sensor Issue] event.</String>
        <String Id="5319">Supply Fluid Temperature</String>
        <String Id="5320">Supply fluid temperature.</String>
        <String Id="5321">Supply Fluid Over Temp Threshold</String>
        <String Id="5322">Threshold value used in the [Supply Fluid Over Temp] event.</String>
        <String Id="5323">Supply Fluid Over Temp</String>
        <String Id="5324">[Supply Fluid Temperature] has exceeded [Supply Fluid Over Temp Threshold].</String>
        <String Id="5325">Supply Fluid Over Temp - Event Control</String>
        <String Id="5326">Enable/disable the activation of the [Supply Fluid Over Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5327">Supply Fluid Over Temp - Event Type</String>
        <String Id="5328">The event type for the [Supply Fluid Over Temp] event.</String>
        <String Id="5329">Supply Fluid Under Temp</String>
        <String Id="5330">[Supply Fluid Temperature] has dropped below a specified threshold.</String>
        <String Id="5331">Supply Fluid Under Temp - Event Control</String>
        <String Id="5332">Enable/disable the activation of the [Supply Fluid Under Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5333">Supply Fluid Under Temp - Event Type</String>
        <String Id="5334">The event type for the [Supply Fluid Under Temp] event.</String>
        <String Id="5335">Supply Fluid Temp Sensor Issue</String>
        <String Id="5336">The supply fluid temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="5337">Supply Fluid Temp Sensor Issue - Event Control</String>
        <String Id="5338">Enable/disable the activation of the [Supply Fluid Temp Sensor Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5339">Supply Fluid Temp Sensor Issue - Event Type</String>
        <String Id="5340">The event type for the [Supply Fluid Temp Sensor Issue] event.</String>
        <String Id="5341">Pump 1 State</String>
        <String Id="5342">Pump 1 operational state.</String>
        <String Id="5343">Pump 2 State</String>
        <String Id="5344">Pump 2 operational state.</String>
        <String Id="5345">Pump 1 Loss of Flow</String>
        <String Id="5346">Loss of flow is detected in pump 1. The loss of flow condition occurs when no differential pressure is detected across the pump.</String>
        <String Id="5347">Pump 1 Loss of Flow - Event Control</String>
        <String Id="5348">Enable/disable the activation of the [Pump 1 Loss of Flow] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5349">Pump 1 Loss of Flow - Event Type</String>
        <String Id="5350">The event type for the [Pump 1 Loss of Flow] event.</String>
        <String Id="5351">Pump 2 Loss of Flow</String>
        <String Id="5352">Loss of flow is detected in pump 2. The loss of flow condition occurs when no differential pressure is detected across the pump.</String>
        <String Id="5353">Pump 2 Loss of Flow - Event Control</String>
        <String Id="5354">Enable/disable the activation of the [Pump 2 Loss of Flow] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5355">Pump 2 Loss of Flow - Event Type</String>
        <String Id="5356">The event type for the [Pump 2 Loss of Flow] event.</String>
        <String Id="5357">Pump Short Cycle</String>
        <String Id="5358">Pumps have short cycled. A short cycle is defined as turning on and off a number of times over a set time period.</String>
        <String Id="5359">Pump Short Cycle - Event Control</String>
        <String Id="5360">Enable/disable the activation of the [Pump Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5361">Pump Short Cycle - Event Type</String>
        <String Id="5362">The event type for the [Pump Short Cycle] event.</String>
        <String Id="5363">Compressor 1A State</String>
        <String Id="5364">Compressor 1A operational state.</String>
        <String Id="5365">Compressor 1B State</String>
        <String Id="5366">Compressor 1B operational state.</String>
        <String Id="5367">Compressor 2A State</String>
        <String Id="5368">Compressor 2A operational state.</String>
        <String Id="5369">Compressor 2B State</String>
        <String Id="5370">Compressor 2B operational state.</String>
        <String Id="5371">Compressor 1A High Head Pressure</String>
        <String Id="5372">Compressor 1A high head pressure.</String>
        <String Id="5373">Compressor 1A High Head Pressure - Event Control</String>
        <String Id="5374">Enable/disable the activation of the [Compressor 1A High Head Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5375">Compressor 1A High Head Pressure - Event Type</String>
        <String Id="5376">The event type for the [Compressor 1A High Head Pressure] event.</String>
        <String Id="5377">Compressor 1B High Head Pressure</String>
        <String Id="5378">Compressor 1B high head pressure.</String>
        <String Id="5379">Compressor 1B High Head Pressure - Event Control</String>
        <String Id="5380">Enable/disable the activation of the [Compressor 1B High Head Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5381">Compressor 1B High Head Pressure - Event Type</String>
        <String Id="5382">The event type for the [Compressor 1B High Head Pressure] event.</String>
        <String Id="5383">Compressor 2A High Head Pressure</String>
        <String Id="5384">Compressor 2A high head pressure.</String>
        <String Id="5385">Compressor 2A High Head Pressure - Event Control</String>
        <String Id="5386">Enable/disable the activation of the [Compressor 2A High Head Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5387">Compressor 2A High Head Pressure - Event Type</String>
        <String Id="5388">The event type for the [Compressor 2A High Head Pressure] event.</String>
        <String Id="5389">Compressor 2B High Head Pressure</String>
        <String Id="5390">Compressor 2B high head pressure.</String>
        <String Id="5391">Compressor 2B High Head Pressure - Event Control</String>
        <String Id="5392">Enable/disable the activation of the [Compressor 2B High Head Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5393">Compressor 2B High Head Pressure - Event Type</String>
        <String Id="5394">The event type for the [Compressor 2B High Head Pressure] event.</String>
        <String Id="5395">Compressor 1A Short Cycle</String>
        <String Id="5396">Compressor 1A short cycle. A short cycle is defined as turning on and off a number of times over a set time period.</String>
        <String Id="5397">Compressor 1A Short Cycle - Event Control</String>
        <String Id="5398">Enable/disable the activation of the [Compressor 1A Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5399">Compressor 1A Short Cycle - Event Type</String>
        <String Id="5400">The event type for the [Compressor 1A Short Cycle] event.</String>
        <String Id="5401">Compressor 1B Short Cycle</String>
        <String Id="5402">Compressor 1B short cycle. A short cycle is defined as turning on and off a number of times over a set time period.</String>
        <String Id="5403">Compressor 1B Short Cycle - Event Control</String>
        <String Id="5404">Enable/disable the activation of the [Compressor 1B Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5405">Compressor 1B Short Cycle - Event Type</String>
        <String Id="5406">The event type for the [Compressor 1B Short Cycle] event.</String>
        <String Id="5407">Compressor 2A Short Cycle</String>
        <String Id="5408">Compressor 2A short cycle. A short cycle is defined as turning on and off a number of times over a set time period.</String>
        <String Id="5409">Compressor 2A Short Cycle - Event Control</String>
        <String Id="5410">Enable/disable the activation of the [Compressor 2A Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5411">Compressor 2A Short Cycle - Event Type</String>
        <String Id="5412">The event type for the [Compressor 2A Short Cycle] event.</String>
        <String Id="5413">Compressor 2B Short Cycle</String>
        <String Id="5414">Compressor 2B short cycle. A short cycle is defined as turning on and off a number of times over a set time period.</String>
        <String Id="5415">Compressor 2B Short Cycle - Event Control</String>
        <String Id="5416">Enable/disable the activation of the [Compressor 2B Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5417">Compressor 2B Short Cycle - Event Type</String>
        <String Id="5418">The event type for the [Compressor 2B Short Cycle] event.</String>
        <String Id="5419">Tandem 1 Low Suction Pressure</String>
        <String Id="5420">'Tandem compressors' 1 low suction pressure.</String>
        <String Id="5421">Tandem 1 Low Suction Pressure - Event Control</String>
        <String Id="5422">Enable/disable the activation of the [Tandem 1 Low Suction Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5423">Tandem 1 Low Suction Pressure - Event Type</String>
        <String Id="5424">The event type for the [Tandem 1 Low Suction Pressure] event.</String>
        <String Id="5425">Tandem 2 Low Suction Pressure</String>
        <String Id="5426">'Tandem compressors' 2 low suction pressure.</String>
        <String Id="5427">Tandem 2 Low Suction Pressure - Event Control</String>
        <String Id="5428">Enable/disable the activation of the [Tandem 2 Low Suction Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5429">Tandem 2 Low Suction Pressure - Event Type</String>
        <String Id="5430">The event type for the [Tandem 2 Low Suction Pressure] event.</String>
        <String Id="5431">Hot Gas Valve 1 Open Position</String>
        <String Id="5432">Hot gas valve 1 open position.</String>
        <String Id="5433">Hot Gas Valve 2 Open Position</String>
        <String Id="5434">Hot gas valve 2 open position.</String>
        <String Id="5435">Hot Gas Solenoid Valve 1 Position</String>
        <String Id="5436">Hot gas solenoid valve 1 position.</String>
        <String Id="5437">closed</String>
        <String Id="5438">open</String>
        <String Id="5439">Hot Gas Solenoid Valve 2 Position</String>
        <String Id="5440">Hot gas solenoid valve 2 position</String>
        <String Id="5441">Chilled Water Control Valve Position</String>
        <String Id="5442">Chilled water valve out of position. Chilled water control valve position does not match expected value.</String>
        <String Id="5443">Chilled Water Cntrl Valve Pos - Event Control</String>
        <String Id="5444">Enable/disable the activation of the [Chilled Water Control Valve Position] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5445">Chilled Water Cntrl Valve Pos - Event Type</String>
        <String Id="5446">The event type for the [Chilled Water Control Valve Position] event.</String>
        <String Id="5447">System Operating State</String>
        <String Id="5448">Current operating state of the system.</String>
        <String Id="5449">off</String>
        <String Id="5450">on</String>
        <String Id="5451">standby</String>
        <String Id="5452">System Control Mode</String>
        <String Id="5453">System control mode.</String>
        <String Id="5454">Internal (Auto)</String>
        <String Id="5455">External (Manual)</String>
        <String Id="5456">Cooling Output</String>
        <String Id="5457">Amount of cooling being applied relative to the unit's cooling capacity.</String>
        <String Id="5458">Minimum Room Temperature Set Point</String>
        <String Id="5459">Minimum desired room air temperature. If the room air temperature falls below this set point, the unit will reduce the cooling.</String>
        <String Id="5460">Auto Restart Delay</String>
        <String Id="5461">If power is lost, the control will delay this amount of time after power is restored before restarting the unit.</String>
        <String Id="5462">System Condensation Detected</String>
        <String Id="5463">System condensation detected.</String>
        <String Id="5464">System Condensation Detected - Event Control</String>
        <String Id="5465">Enable/disable the activation of the [System Condensation Detected] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5466">System Condensation Detected - Event Type</String>
        <String Id="5467">The event type for the [System Condensation Detected] event.</String>
        <String Id="5468">Shutdown - Loss Of Power</String>
        <String Id="5469">System lost power. This event becomes active when the unit is powered on following an unexpected loss of power.</String>
        <String Id="5470">Shutdown - Loss Of Power - Event Control</String>
        <String Id="5471">Enable/disable the activation of the [Shutdown - Loss Of Power] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5472">Shutdown - Loss Of Power - Event Type</String>
        <String Id="5473">The event type for the [Shutdown - Loss Of Power] event.</String>
        <String Id="5474">System Event Acknowledge/Reset</String>
        <String Id="5475">Reset and/or acknowledge all events.</String>
        <String Id="5476">Reset</String>
        <String Id="5477">Acknowledge</String>
        <String Id="5478">Failure</String>
        <!-- Machine transferred from FDM 'icom_xp.xml' via Fdm2Xml.exe -->
        <String Id="5479">Input Contact 01 - Event Control</String>
        <String Id="5480">Enable/disable the activation of the [Input Contact 01] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5481">Input Contact 01 - Event Type</String>
        <String Id="5482">The event type for the [Input Contact 01] event.</String>
        <String Id="5483">Smoke Detected</String>
        <String Id="5484">Smoke detected.</String>
        <String Id="5485">Smoke Detected - Event Control</String>
        <String Id="5486">Enable/disable the activation of the [Smoke Detected] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5487">Smoke Detected - Event Type</String>
        <String Id="5488">The event type for the [Smoke Detected] event.</String>
        <String Id="5489">Water Under Floor</String>
        <String Id="5490">Water under the floor is detected.</String>
        <String Id="5491">Water Under Floor - Event Control</String>
        <String Id="5492">Enable/disable the activation of the [Water Under Floor] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5493">Water Under Floor - Event Type</String>
        <String Id="5494">The event type for the [Water Under Floor] event.</String>
        <String Id="5495">Service Required</String>
        <String Id="5496">Unit requires servicing.</String>
        <String Id="5497">Service Required - Event Control</String>
        <String Id="5498">Enable/disable the activation of the [Service Required] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5499">Service Required - Event Type</String>
        <String Id="5500">The event type for the [Service Required] event.</String>
        <String Id="5501">Fan Issue</String>
        <String Id="5502">One or more fans are not operating within their operational parameters.</String>
        <String Id="5503">Fan Issue - Event Control</String>
        <String Id="5504">Enable/disable the activation of the [Fan Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="5505">Fan Issue - Event Type</String>
        <String Id="5506">The event type for the [Fan Issue] event.</String>
        <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
        <String Id="5507">Receptacle Load Dropped</String>
        <String Id="5508">The receptacle's load is not drawing power</String>
        <String Id="5509">Temperature Offset</String>
        <String Id="5510">Temperature Offset. This value is added to the temperature sensor measurement to calibrate the sensor.</String>
        <String Id="5511">Relative Humidity Offset</String>
        <String Id="5512">Relative Humidity Offset. This value is added to the humidity sensor measurement to calibrate the sensor.</String>
        <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
        <String Id="5513">Input Qualification Status</String>
        <String Id="5514">input qualification status</String>
        <String Id="5515">Fail</String>
        <String Id="5516">Marginal Low</String>
        <String Id="5517">Normal</String>
        <String Id="5518">Marginal High</String>
        <String Id="5519">Static Bypass Switch</String>
        <String Id="5520">Static Bypass Switch state - On/Off</String>
        <String Id="5521">Bypass Qualification Status</String>
        <String Id="5522">bypass qualification status</String>
        <String Id="5523">Bypass Retransfer Time Remaining</String>
        <String Id="5524">Time remaining before an inverter overload or inverter fault can be cleared and auto retransfer from the bypass to the inverter can take place</String>
        <String Id="5525">Battery Amp-Hours Consumed This Discharge</String>
        <String Id="5526">Battery amp-hours withdrawn this discharge.</String>
        <String Id="5527">Battery Automatic Test Inhibited</String>
        <String Id="5528">Automatic (scheduled) battery tests are inhibited</String>
        <String Id="5529">Battery Self Test</String>
        <String Id="5530">Battery self test is in progress</String>
        <String Id="5531">Battery Low Shutdown</String>
        <String Id="5532">Battery disconnect due to end-of-discharge.</String>
        <String Id="5533">DC Bus Qualification Status</String>
        <String Id="5534">dc bus qualification status</String>
        <String Id="5535">Output Qualification Status</String>
        <String Id="5536">output qualification status</String>
        <String Id="5537">Inverter Output Qualification Status</String>
        <String Id="5538">inverter output qualification status</String>
        <String Id="5539">Inverter On/Off State</String>
        <String Id="5540">inverter on/off state</String>
        <String Id="5541">Equipment Temperature Sensor Fail</String>
        <String Id="5542">One or more temperature sensors report a temperature outside of the range of expected operation.</String>
        <String Id="5543">Rectifier Status</String>
        <String Id="5544">rectifier status</String>
        <String Id="5545">System Fan Failure - Redundant</String>
        <String Id="5546">Redundant system fan failure</String>
        <String Id="5547">Multiple Fan Failure</String>
        <String Id="5548">Multiple fan failure</String>
        <String Id="5549">Configuration Description</String>
        <String Id="5550">Configuration description</String>
        <String Id="5551">Single Module System 33</String>
        <String Id="5552">Single Module System 34</String>
        <String Id="5553">Single Module System 44</String>
        <String Id="5554">1+1 33</String>
        <String Id="5555">1+1 34</String>
        <String Id="5556">1+1 44</String>
        <String Id="5557">1+N 33</String>
        <String Id="5558">1+N 34</String>
        <String Id="5559">1+N 44</String>
        <String Id="5560">N+1 33</String>
        <String Id="5561">N+1 34</String>
        <String Id="5562">N+1 44</String>
        <String Id="5563">SCC w/Continuous Duty SS 33</String>
        <String Id="5564">SCC w/Continuous Duty SS 44</String>
        <String Id="5565">SCC w/Momentary Duty SS</String>
        <String Id="5566">Main Static Switch</String>
        <String Id="5567">UPS System Output Source</String>
        <String Id="5568">The UPS system's output power source</String>
        <String Id="5569">Off</String>
        <String Id="5570">Normal</String>
        <String Id="5571">Bypass</String>
        <String Id="5572">Maintenance Bypass</String>
        <String Id="5573">Main Controller Fault</String>
        <String Id="5574">A Main Controller fault has been detected.</String>
        <String Id="5575">System Breaker(s) Close Failure</String>
        <String Id="5576">One or more breakers in the system failed to close</String>
        <String Id="5577">Input Filter Cycle Lock</String>
        <String Id="5578">The input filter disconnect is open due to exceeding the maximum number of cycles.</String>
        <String Id="5579">Service Code Active</String>
        <String Id="5580">Service code is running</String>
        <String Id="5581">LBS Active</String>
        <String Id="5582">The Load Bus Sync option is active</String>
        <String Id="5583">LBS Inhibited</String>
        <String Id="5584">The system has detected that conditions to perform Load Bus Sync are not satisfied</String>
        <String Id="5585">Leading Power Factor</String>
        <String Id="5586">The leading output Power Factor has fallen below a specified value</String>
        <String Id="5587">Controls Reset Required</String>
        <String Id="5588">A controls reset is required due to one or more critical settings changing</String>
        <String Id="5589">Sales Order Line 1</String>
        <String Id="5590">Customer Sales Order line 1</String>
        <String Id="5591">Sales Order Line 2</String>
        <String Id="5592">Customer Sales Order line 2</String>
        <String Id="5593">Service Phone Number</String>
        <String Id="5594">Authorized Service contact Phone Number</String>
        <String Id="5595">Backfeed Breaker</String>
        <String Id="5596">Backfeed breaker</String>
        <String Id="5597">Open</String>
        <String Id="5598">Close</String>
        <String Id="5599">Not Installed</String>
        <String Id="5600">SBS Load Disconnect</String>
        <String Id="5601">SBS load disconnect</String>
        <String Id="5602">Input Breaker (CB1)</String>
        <String Id="5603">Input breaker (CB1)</String>
        <String Id="5604">Trap Filter Disconnect</String>
        <String Id="5605">Trap filter disconnect</String>
        <String Id="5606">Output Breaker (CB2)</String>
        <String Id="5607">Output breaker (CB2)</String>
        <String Id="5608">Internal Bypass Breaker (CB3)</String>
        <String Id="5609">Internal bypass breaker (CB3)</String>
        <String Id="5610">Bypass Isolation Breaker (BIB)</String>
        <String Id="5611">Bypass isolation breaker (BIB)</String>
        <String Id="5612">Rectifier Isolation Breaker (RIB)</String>
        <String Id="5613">Rectifier isolation breaker (RIB)</String>
        <String Id="5614">Maintenance Bypass Breaker (MBB)</String>
        <String Id="5615">Maintenance bypass breaker (MBB)</String>
        <String Id="5616">Maintenance Isolation Breaker (MIB)</String>
        <String Id="5617">Maintenance isolation breaker (MIB)</String>
        <String Id="5618">Output Series Static Switch</String>
        <String Id="5619">output series static switch</String>
        <String Id="5620">Off</String>
        <String Id="5621">On</String>
        <String Id="5622">Not Installed</String>
        <String Id="5623">Module Output Breaker (MOB)</String>
        <String Id="5624">Module output breaker (MOB)</String>
        <!-- Machine transferred from FDM '20090210_MPX.xml' via Fdm2Xml.exe -->
        <String Id="5625">PDU Percent Current Utilization</String>
        <String Id="5626">The percent of PDU line-to-neutral electrical current utilization relative to the PDU's current rating.</String>
        <String Id="5627">PDU Percent Current Utilization</String>
        <String Id="5628">The percent of PDU line-to-line electrical current utilization relative to the PDU's current rating.</String>
        <String Id="5629">PDU Percent L1 Current Utilization</String>
        <String Id="5630">The percent of PDU line 1 electrical current utilization relative to the PDU's current rating.</String>
        <String Id="5631">PDU Percent L2 Current Utilization</String>
        <String Id="5632">The percent of PDU line 2 electrical current utilization relative to the PDU's current rating.</String>
        <String Id="5633">PDU Percent L3 Current Utilization</String>
        <String Id="5634">The percent of PDU line 3 electrical current utilization relative to the PDU's current rating.</String>
        <String Id="5635">Branch Percent Current Utilization</String>
        <String Id="5636">The percent of BRM line-to-neutral current utilization relative to the BRM's current rating.</String>
        <String Id="5637">Branch Percent Current Utilization</String>
        <String Id="5638">The percent of BRM line-to-line current utilization relative to the BRM's current rating.</String>
        <String Id="5639">Receptacle Percent Current Utilization</String>
        <String Id="5640">The percent of receptacle electrical current utilization relative to the receptacle's current rating.</String>
        <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
        <String Id="5641">User Label for Input Contact 1</String>
        <String Id="5642">User programmable string for external input contact 1</String>
        <String Id="5643">User Label for Input Contact 2</String>
        <String Id="5644">User programmable string for external input contact 2</String>
        <String Id="5645">User Label for Input Contact 3</String>
        <String Id="5646">User programmable string for external input contact 3</String>
        <String Id="5647">User Label for Input Contact 4</String>
        <String Id="5648">User programmable string for external input contact 4</String>
        <String Id="5649">User Label for Input Contact 5</String>
        <String Id="5650">User programmable string for external input contact 5</String>
        <String Id="5651">User Label for Input Contact 6</String>
        <String Id="5652">User programmable string for external input contact 6</String>
        <String Id="5653">User Label for Input Contact 7</String>
        <String Id="5654">User programmable string for external input contact 7</String>
        <String Id="5655">User Label for Input Contact 8</String>
        <String Id="5656">User programmable string for external input contact 8</String>
        <String Id="5657">User Label for Input Contact 9</String>
        <String Id="5658">User programmable string for external input contact 9</String>
        <String Id="5659">User Label for Input Contact 10</String>
        <String Id="5660">User programmable string for external input contact 10</String>
        <String Id="5661">User Label for Input Contact 11</String>
        <String Id="5662">User programmable string for external input contact 11</String>
        <String Id="5663">User Label for Input Contact 12</String>
        <String Id="5664">User programmable string for external input contact 12</String>
        <String Id="5665">User Label for Input Contact 13</String>
        <String Id="5666">User programmable string for external input contact 13</String>
        <String Id="5667">User Label for Input Contact 14</String>
        <String Id="5668">User programmable string for external input contact 14</String>
        <String Id="5669">User Label for Input Contact 15</String>
        <String Id="5670">User programmable string for external input contact 15</String>
        <String Id="5671">User Label for Input Contact 16</String>
        <String Id="5672">User programmable string for external input contact 16</String>
        <String Id="5673">Multi-module System Output Voltage RMS A-B</String>
        <String Id="5674">Multi-module system output RMS voltage between phases A and B</String>
        <String Id="5675">Multi-module System Output Voltage RMS B-C</String>
        <String Id="5676">Multi-module system output RMS voltage between phases B and C</String>
        <String Id="5677">Multi-module System Output Voltage RMS C-A</String>
        <String Id="5678">Multi-module system output RMS voltage between phases C and A</String>
        <String Id="5679">Multi-module System Output Voltage RMS A-N</String>
        <String Id="5680">Multi-module system output RMS voltage between phase B and Neutral</String>
        <String Id="5681">Multi-module System Output Voltage RMS B-N</String>
        <String Id="5682">Multi-module System Output Voltage RMS C-N</String>
        <String Id="5683">Multi-module system output RMS voltage between phase C and Neutral</String>
        <String Id="5684">Sum of MMS Output RMS Currents for Phase A</String>
        <String Id="5685">The sum of the multi-module system output RMS currents for phase A</String>
        <String Id="5686">Sum of MMS Output RMS Currents for Phase B</String>
        <String Id="5687">The sum of the multi-module system output RMS currents for phase B</String>
        <String Id="5688">Sum of MMS Output RMS Currents for Phase C</String>
        <String Id="5689">The sum of the multi-module system output RMS currents for phase C</String>
        <String Id="5690">MMS Output Frequency</String>
        <String Id="5691">The multi-module system output frequency</String>
        <String Id="5692">MMS Output Power</String>
        <String Id="5693">The sum total power of all system output modules</String>
        <String Id="5694">MMS Output Apparent Power</String>
        <String Id="5695">The sum total apparent power of all system output modules</String>
        <String Id="5696">MMS Output Power Factor Phase A</String>
        <String Id="5697">The multi-module system output power factor for phase A</String>
        <String Id="5698">MMS Output Power Factor Phase B</String>
        <String Id="5699">The multi-module system output power factor for phase B</String>
        <String Id="5700">MMS Output Power Factor Phase C</String>
        <String Id="5701">The multi-module system output power factor for phase C</String>
        <String Id="5702">MMS Output Pct Power Phase A</String>
        <String Id="5703">The multi-module system output power on phase A as a percentage of the rated capacity</String>
        <String Id="5704">MMS Output Pct Power Phase B</String>
        <String Id="5705">The multi-module system output power on phase B as a percentage of the rated capacity</String>
        <String Id="5706">MMS Output Pct Power Phase C</String>
        <String Id="5707">The multi-module system output power on phase C as a percentage of the rated capacity</String>
        <String Id="5708">MMS Output Pct Apparent Pwr (kVA) Phase A</String>
        <String Id="5709">The multi-module system output apparent power on phase A as a percentage of the rated capacity</String>
        <String Id="5710">MMS Output Pct Apparent Pwr (kVA) Phase B</String>
        <String Id="5711">The multi-module system output apparent power on phase B as a percentage of the rated capacity</String>
        <String Id="5712">MMS Output Pct Apparent Pwr (kVA) Phase C</String>
        <String Id="5713">The multi-module system output apparent power on phase C as a percentage of the rated capacity</String>
        <String Id="5714">Number of Redundant Modules</String>
        <String Id="5715">The number of redundant modules in a multi-module collective.</String>
        <String Id="5716">Parallel Comm Warning</String>
        <String Id="5717">Parallel communication bus warning</String>
        <String Id="5718">System Comm Fail</String>
        <String Id="5719">Failure of a device on the multi-module system communication bus</String>
        <String Id="5720">Loss of Redundancy</String>
        <String Id="5721">The multi-module collection doesn't have enough modules to redundantly support the load</String>
        <String Id="5722">BPSS Startup Inhibit</String>
        <String Id="5723">The Bypass Static Switch startup is inhibited</String>
        <String Id="5724">MMS Transfer Inhibit</String>
        <String Id="5725">The critical load can not be manually transferred from inverter to bypass</String>
        <String Id="5726">MMS Retransfer Inhibit</String>
        <String Id="5727">The critical load can not be manually retransferred from bypass to inverter</String>
        <String Id="5728">MMS Module Number</String>
        <String Id="5729">MMS module number</String>
        <String Id="5730">MMS Loss of Sync Pulse</String>
        <String Id="5731">Multi-module system loss of sync pulse</String>
        <String Id="5732">MMS Overload</String>
        <String Id="5733">Multi-module system overload</String>
        <String Id="5734">MMS SCC Monitoring Card Access URL</String>
        <String Id="5735">URL for the monitoring card of the SCC in a multi-module system.</String>
        <String Id="5736">Number of Modules in a MMS</String>
        <String Id="5737">The number of modules in a multi-module system</String>
        <String Id="5738">MMS On Battery</String>
        <String Id="5739">The multi-module system is on battery</String>
        <String Id="5740">MMS Low Battery Warning</String>
        <String Id="5741">Multi-module system low battery warning</String>
        <String Id="5742">Module Output Breaker for Module 1 (MOB1)</String>
        <String Id="5743">Module output breaker for module 1 (MOB1)</String>
        <String Id="5744">Module Output Breaker for Module 2 (MOB2)</String>
        <String Id="5745">Module output breaker for module 2 (MOB2)</String>
        <String Id="5746">Module Output Breaker for Module 3 (MOB3)</String>
        <String Id="5747">Module output breaker for module 3 (MOB3)</String>
        <String Id="5748">Module Output Breaker for Module 4 (MOB4)</String>
        <String Id="5749">Module output breaker for module 4 (MOB4)</String>
        <String Id="5750">Module Output Breaker for Module 5 (MOB5)</String>
        <String Id="5751">Module output breaker for module 5 (MOB5)</String>
        <String Id="5752">Module Output Breaker for Module 6 (MOB6)</String>
        <String Id="5753">Module output breaker for module 6 (MOB6)</String>
        <String Id="5754">Module Output Breaker for Module 7 (MOB7)</String>
        <String Id="5755">Module output breaker for module 7 (MOB7)</String>
        <String Id="5756">Module Output Breaker for Module 8 (MOB8)</String>
        <String Id="5757">Module output breaker for module 8 (MOB8)</String>
        <String Id="5758">Bypass Isolation Breaker for Module 1 (BIB1)</String>
        <String Id="5759">Bypass isolation breaker for module 1 (BIB1)</String>
        <String Id="5760">Bypass Isolation Breaker for Module 2 (BIB2)</String>
        <String Id="5761">Bypass isolation breaker for module 2 (BIB2)</String>
        <String Id="5762">Bypass Isolation Breaker for Module 3 (BIB3)</String>
        <String Id="5763">Bypass isolation breaker for module 3 (BIB3)</String>
        <String Id="5764">Bypass Isolation Breaker for Module 4 (BIB4)</String>
        <String Id="5765">Bypass isolation breaker for module 4 (BIB4)</String>
        <String Id="5766">Bypass Isolation Breaker for Module 5 (BIB5)</String>
        <String Id="5767">Bypass isolation breaker for module 5 (BIB5)</String>
        <String Id="5768">Bypass Isolation Breaker for Module 6 (BIB6)</String>
        <String Id="5769">Bypass isolation breaker for module 6 (BIB6)</String>
        <String Id="5770">Bypass Isolation Breaker for Module 7 (BIB7)</String>
        <String Id="5771">Bypass isolation breaker for module 7 (BIB7)</String>
        <String Id="5772">Bypass Isolation Breaker for Module 8 (BIB8)</String>
        <String Id="5773">Bypass isolation breaker for module 8 (BIB8)</String>
        <String Id="5774">System Output Breaker (UOB)</String>
        <String Id="5775">System output breaker (UOB)</String>
        <String Id="5776">System Load Bank Breaker (LBB)</String>
        <String Id="5777">System load bank breaker (LBB)</String>
        <String Id="5778">System Isolation Output Breaker (IOB)</String>
        <String Id="5779">System isolation output breaker (IOB)</String>
        <String Id="5780">SCC Event Summary</String>
        <String Id="5781">Summary of any active user alarms or faults on the SCC</String>
        <String Id="5782">None</String>
        <String Id="5783">Alarm</String>
        <String Id="5784">Fault</String>
        <String Id="5785">MMS Inter-Module Comm Status</String>
        <String Id="5786">Inter-module communication status of this module in a multi-module system</String>
        <String Id="5787">Failed</String>
        <String Id="5788">Normal</String>
        <String Id="5789">MMS Event Summary</String>
        <String Id="5790">Summary of any active user alarm or fault of this module in a multi-module system</String>
        <String Id="5791">MMS Module Inverter Status</String>
        <String Id="5792">Multi-module inverter status of this module (on/off)</String>
        <String Id="5793">MMS Module Output Voltage Status</String>
        <String Id="5794">Output voltage status of this module in multi-module system</String>
        <String Id="5795">MMS Module Output Source</String>
        <String Id="5796">Module output source in a multi-module system (normal/bypass/maintenance bypass/off)</String>
        <String Id="5797">MMS Module Total kW Output</String>
        <String Id="5798">Total kW output of this module in a multi-module system</String>
        <String Id="5799">MMS Module Total kVA Output</String>
        <String Id="5800">Total kVA output of this module in a multi-module system</String>
        <String Id="5801">MMS Module DC Bus Voltage</String>
        <String Id="5802">DC bus voltage of this module in a multi-module system</String>
        <String Id="5803">MMS Module Battery Current</String>
        <String Id="5804">Battery current of this module in a multi-module system</String>
        <String Id="5805">MMS Module Battery Time Remaining</String>
        <String Id="5806">Battery time remaining for this module in a multi-module system</String>
        <String Id="5807">MMS Module URL Address</String>
        <String Id="5808">URL for the monitoring card of this module in a multi-module system.</String>
        <String Id="5809">bar</String>
        <!-- Machine transferred from FDM 'iCOM_XP.xml' via Fdm2Xml.exe -->
        <String Id="5810">Dew Point Temperature</String>
        <String Id="5811">Dew point temperature, using the highest reading from all sensors.</String>
        <String Id="5812">Calculated Next Maintenance Month</String>
        <String Id="5813">Calculated month of the next scheduled maintenance. Used in conjunction with [Calculated Next Maintenance Year].</String>
        <String Id="5814">Calculated Next Maintenance Year</String>
        <String Id="5815">Calculated year of the next scheduled maintenance. Used in conjunction with [Calculated Next Maintenance Month].</String>
        <String Id="5816">Maintenance Ramp</String>
        <String Id="5817">The ratio of operations performed to the calculated operations available between maintenance intervals.</String>
        <!-- Machine transferred from FDM 'RaptrHMI-090325.xml' via Fdm2Xml.exe -->
        <String Id="5818">UPS Battery Status</String>
        <String Id="5819">UPS battery status</String>
        <String Id="5820">Unknown</String>
        <String Id="5821">Normal</String>
        <String Id="5822">Low</String>
        <String Id="5823">Depleted</String>
        <String Id="5824">UPS Output Source</String>
        <String Id="5825">UPS output source</String>
        <String Id="5826">Other</String>
        <String Id="5827">Off</String>
        <String Id="5828">Normal</String>
        <String Id="5829">Bypass</String>
        <String Id="5830">Battery</String>
        <String Id="5831">Booster</String>
        <String Id="5832">Reducer</String>
        <String Id="5833">MMS UPS Battery Status</String>
        <String Id="5834">Multi-module UPS battery status</String>
        <String Id="5835">MMS UPS Output Source</String>
        <String Id="5836">Multi-module UPS output source</String>
        <!-- Machine transferred from FDM 'BDSU.xml' via Fdm2Xml.exe -->
        <String Id="5837">Customer's Name</String>
        <String Id="5838">The name of the customer the device belongs to.</String>
        <String Id="5839">Customer's Street Address</String>
        <String Id="5840">The street address where the customer is located.</String>
        <String Id="5841">Customer's City</String>
        <String Id="5842">The city where the customer is located.</String>
        <String Id="5843">Customer's State</String>
        <String Id="5844">The state where the customer is located.</String>
        <String Id="5845">Customer's ZIP Code</String>
        <String Id="5846">The ZIP code where the customer is located.</String>
        <String Id="5847">Customer's Contact Person</String>
        <String Id="5848">The contact person for the customer.</String>
        <String Id="5849">Customer's Phone Number</String>
        <String Id="5850">The phone number of the customer's contact person.</String>
        <String Id="5851">Customer's Phone Extension</String>
        <String Id="5852">The phone number extension of the customer's contact person, if applicable.</String>
        <String Id="5853">Customer's Cell Phone Number</String>
        <String Id="5854">The cell phone number of the customer's contact person.</String>
        <String Id="5855">Customer's FAX Number</String>
        <String Id="5856">The FAX number of the customer's contact person.</String>
        <String Id="5857">Customer's E-mail Address</String>
        <String Id="5858">The e-mail address of the customer's contact person.</String>
        <String Id="5859">Location Name</String>
        <String Id="5860">Name of the site where the unit is located.</String>
        <String Id="5861">Location Street Address</String>
        <String Id="5862">Street address where the unit resides.</String>
        <String Id="5863">Location City</String>
        <String Id="5864">City where the unit resides.</String>
        <String Id="5865">Location State</String>
        <String Id="5866">State where the unit resides.</String>
        <String Id="5867">Location ZIP Code</String>
        <String Id="5868">ZIP code where the unit resides.</String>
        <String Id="5869">Location Contact Person</String>
        <String Id="5870">Contact person at the location where the unit resides.</String>
        <String Id="5871">Location Phone Number</String>
        <String Id="5872">Phone number of contact person at the location where the unit resides.</String>
        <String Id="5873">Location Phone Extension</String>
        <String Id="5874">Phone extension of the contact person at the location where the unit resides.</String>
        <String Id="5875">Location Cell Phone Number</String>
        <String Id="5876">Cell phone number of the contact person at the location where the unit resides.</String>
        <String Id="5877">Location FAX Number</String>
        <String Id="5878">FAX number of the contact person at the location where the unit resides.</String>
        <String Id="5879">Location E-mail Address</String>
        <String Id="5880">E-mail address of the contact person at the location where the unit resides.</String>
        <String Id="5881">Battery Name</String>
        <String Id="5882">A name string providing a meaningful reference to the battery.</String>
        <String Id="5883">Battery Rating</String>
        <String Id="5884">Total rating of all parallel strings in the battery.</String>
        <String Id="5885">String Ambient Temperature</String>
        <String Id="5886">Ambient temperature reading(s) for the battery string.</String>
        <String Id="5887">String Overall Voltage</String>
        <String Id="5888">Overall voltage of a battery string.</String>
        <String Id="5889">String Current</String>
        <String Id="5890">Discharge(-) or charge(+) current of a battery string.</String>
        <String Id="5891">Float Current</String>
        <String Id="5892">The current drawn by a battery string that is being float charged.</String>
        <String Id="5893">Ripple Current</String>
        <String Id="5894">Ripple current on a string.</String>
        <String Id="5895">Total Active Alarms on a Battery String</String>
        <String Id="5896">The number of active alarms (maintenance or critical) on a battery string.</String>
        <String Id="5897">Battery String Alarm Reset</String>
        <String Id="5898">Initiates a reset/clear of all latched alarms on a battery string.</String>
        <String Id="5899">Low Ambient Temperature</String>
        <String Id="5900">The system has detected a low ambient temperature condition.</String>
        <String Id="5901">High Ambient Temperature</String>
        <String Id="5902">The system has detected a high ambient temperature condition.</String>
        <String Id="5903">Low Overall Voltage</String>
        <String Id="5904">The system has detected a low battery string overall voltage condition.</String>
        <String Id="5905">High Overall Voltage</String>
        <String Id="5906">The system has detected a high battery string overall voltage condition.</String>
        <String Id="5907">High Battery String Current</String>
        <String Id="5908">The system has detected a high battery string current condition.</String>
        <String Id="5909">Low Battery String Float Current</String>
        <String Id="5910">The system has detected a low battery string float current condition.</String>
        <String Id="5911">High Battery String Float Current</String>
        <String Id="5912">The system has detected a high battery string float current condition.</String>
        <String Id="5913">High Battery String Ripple Current</String>
        <String Id="5914">The system has detected a high battery string ripple current condition.</String>
        <String Id="5915">Battery String Discharge Detected</String>
        <String Id="5916">The system has detected a battery string discharge condition.</String>
        <String Id="5917">Maximum Discharge Time Exceeded</String>
        <String Id="5918">The system has detected an excessive discharge time condition.</String>
        <String Id="5919">Discharge Low Overall Voltage</String>
        <String Id="5920">The system has detected a low battery string overall voltage condition during a discharge.</String>
        <String Id="5921">Discharge Low Cell Voltage</String>
        <String Id="5922">The system has detected a low cell voltage condition during a discharge.</String>
        <String Id="5923">Discharge High Battery String Current</String>
        <String Id="5924">The system has detected a high battery string current condition during a discharge.</String>
        <String Id="5925">Excessive Cell to Cell Temperature Deviation</String>
        <String Id="5926">The system has detected an excessive cell to cell temperature deviation condition.</String>
        <String Id="5927">Excessive Cell to Ambient Temperature Deviation</String>
        <String Id="5928">The system has detected an excessive cell to ambient temperature deviation condition.</String>
        <String Id="5929">Low Ambient Temperature Global Threshold</String>
        <String Id="5930">If the battery string ambient temperature is below this global threshold a low ambient temperature event is triggered.</String>
        <String Id="5931">High Ambient Temperature Global Threshold</String>
        <String Id="5932">If the battery string ambient temperature is above this global threshold a high ambient temperature event is triggered</String>
        <String Id="5933">Battery String Overall Voltage Low Threshold</String>
        <String Id="5934">If the battery string overall voltage is below this value a low overall voltage event is triggered</String>
        <String Id="5935">Battery String Overall Voltage High Threshold</String>
        <String Id="5936">If the battery string overall voltage is above this value a high overall voltage event is triggered.</String>
        <String Id="5937">Battery String Current High Threshold</String>
        <String Id="5938">If the battery string current is above this value a high string current event is triggered.</String>
        <String Id="5939">Battery String Float Current Low Threshold</String>
        <String Id="5940">If the battery string float current is below this value a low float current event is triggered.</String>
        <String Id="5941">Battery String Float Current High Threshold</String>
        <String Id="5942">If the battery string float current is above this value a high float current event is triggered.</String>
        <String Id="5943">Battery String Ripple Current High Threshold</String>
        <String Id="5944">If the battery string ripple current is above this value a high ripple current event is triggered.</String>
        <String Id="5945">Cell Voltage Low Global Threshold</String>
        <String Id="5946">If the cell voltage is below this global threshold a low cell voltage event is triggered.</String>
        <String Id="5947">Cell Voltage High Global Threshold</String>
        <String Id="5948">If the cell voltage is above this global threshold a high cell voltage event is triggered.</String>
        <String Id="5949">Cell Temperature Low Global Threshold</String>
        <String Id="5950">If the cell temperature is below this global threshold a low cell temperature event is triggered.</String>
        <String Id="5951">Cell Temperature High Global Threshold</String>
        <String Id="5952">If the cell temperature is above this global threshold a high cell temperature event is triggered.</String>
        <String Id="5953">Internal Resistance Low Global Threshold</String>
        <String Id="5954">If the internal cell resistance is below this global threshold a low internal cell resistance event is triggered.</String>
        <String Id="5955">Internal Resistance High Global Threshold</String>
        <String Id="5956">If the internal cell resistance is above this global threshold a high internal cell resistance event is triggered.</String>
        <String Id="5957">Intercell Resistance High Global Threshold</String>
        <String Id="5958">If the intercell resistance is above this global threshold a high intercell resistance event is triggered.</String>
        <String Id="5959">Intertier Resistance High Global Threshold</String>
        <String Id="5960">If the intertier resistance is above this global threshold a high intertier resistance event is triggered.</String>
        <String Id="5961">Cell to Cell Temperature Deviation Threshold</String>
        <String Id="5962">If the cell to cell temperature difference is above this value an excessive cell to cell temperature deviation event is triggered.</String>
        <String Id="5963">Cell to Ambient Temperature Deviation Threshold</String>
        <String Id="5964">If the cell to ambient temperature difference is above this value an excessive cell to ambient temperature deviation event is triggered</String>
        <String Id="5965">Battery String Name</String>
        <String Id="5966">A name to uniquely identify the battery string.</String>
        <String Id="5967">Installation Date</String>
        <String Id="5968">Installation date of battery string</String>
        <String Id="5969">Cell/Monobloc Model Number</String>
        <String Id="5970">Model Number of the Cell/Monobloc</String>
        <String Id="5971">Cell/Monobloc Manufacturer</String>
        <String Id="5972">Manufacturer of the Cell/Monobloc.</String>
        <String Id="5973">Cell/Monobloc Rating</String>
        <String Id="5974">Name plate capacity rating of the Cell/Monobloc.</String>
        <String Id="5975">Discharge State</String>
        <String Id="5976">Current discharge state of battery string.</String>
        <String Id="5977">Not In Progress</String>
        <String Id="5978">In Progress</String>
        <String Id="5979">Battery String Time-To-Go</String>
        <String Id="5980">Time remaining (time-to-go) of battery string during a discharge.</String>
        <String Id="5981">Amp-Hours Remaining in Battery String</String>
        <String Id="5982">Capacity (Amp-Hours) remaining in battery string.</String>
        <String Id="5983">Battery String Discharge Time</String>
        <String Id="5984">Total time the battery string is in discharge.</String>
        <String Id="5985">Discharge Low Cell Voltage Threshold</String>
        <String Id="5986">If the cell voltage is below this value during a discharge a low cell voltage during discharge event is triggered.</String>
        <String Id="5987">Discharge Low Overall Voltage Threshold</String>
        <String Id="5988">If the battery string overall voltage is below this value during a discharge a low battery string overall voltage during discharge event is triggered.</String>
        <String Id="5989">Discharge Battery String Current High Threshold</String>
        <String Id="5990">If the battery string current is above this value during a discharge a high battery string current during discharge event is triggered.</String>
        <String Id="5991">Discharge Maximum Time</String>
        <String Id="5992">If the battery string is in discharge for a time greater than this value an excessive discharge time event is triggered.</String>
        <String Id="5993">Startup Engineer's Name</String>
        <String Id="5994">The name of the engineer responsible for startup of the battery monitoring system.</String>
        <String Id="5995">Startup Company's Name</String>
        <String Id="5996">The name of the company responsible for startup of the battery monitoring system.</String>
        <String Id="5997">Startup Company's Street Address</String>
        <String Id="5998">The street address of the company responsible for startup.</String>
        <String Id="5999">Startup Company's City</String>
        <String Id="6000">The city where the company responsible for startup of the battery monitoring system is located.</String>
        <String Id="6001">Startup Company's State</String>
        <String Id="6002">The state where the company responsible for startup of the battery monitoring system is located.</String>
        <String Id="6003">Startup Company's ZIP Code</String>
        <String Id="6004">The ZIP code of the company responsible for startup of the battery monitoring system.</String>
        <String Id="6005">Startup Engineer's Phone Number</String>
        <String Id="6006">Telephone number of the engineer responsible for startup of the battery monitoring system.</String>
        <String Id="6007">Startup Engineer's E-mail Address</String>
        <String Id="6008">E-mail address of the engineer responsible for startup of the battery monitoring system.</String>
        <String Id="6009">Startup Purchase Order</String>
        <String Id="6010">Reference Purchase Order/Ticket Number for the battery monitoring system startup work.</String>
        <String Id="6011">Startup Date</String>
        <String Id="6012">Startup date of monitoring system for this battery string.</String>
        <String Id="6013">Cell Voltage</String>
        <String Id="6014">Voltage reading of a Cell within a BAM device.</String>
        <String Id="6015">Cell Temperature</String>
        <String Id="6016">Temperature reading of a Cell within a BAM device.</String>
        <String Id="6017">Low Cell Voltage</String>
        <String Id="6018">The system has detected a low cell voltage condition.</String>
        <String Id="6019">High Cell Voltage</String>
        <String Id="6020">The system has detected a high cell voltage condition.</String>
        <String Id="6021">Low Cell Temperature</String>
        <String Id="6022">The system has detected a low cell temperature condition.</String>
        <String Id="6023">High Cell Temperature</String>
        <String Id="6024">The system has detected a high cell temperature condition.</String>
        <String Id="6025">Low Internal Resistance</String>
        <String Id="6026">The system has detected a low internal resistance condition.</String>
        <String Id="6027">High Internal Resistance</String>
        <String Id="6028">The system has detected a high internal resistance condition.</String>
        <String Id="6029">High Intercell Resistance</String>
        <String Id="6030">The system has detected a high intercell resistance condition.</String>
        <String Id="6031">Cell Voltage Low Threshold</String>
        <String Id="6032">If the cell voltage is below this value a low cell voltage event is triggered</String>
        <String Id="6033">Cell Voltage High Threshold</String>
        <String Id="6034">If the cell voltage is above this value a high cell voltage event is triggered</String>
        <String Id="6035">Cell Temperature Low Threshold</String>
        <String Id="6036">If the cell temperature is below this value a low cell temperature event is triggered.</String>
        <String Id="6037">Cell Temperature High Threshold</String>
        <String Id="6038">If the cell temperature is above this value a high cell temperature event is triggered.</String>
        <String Id="6039">Internal Resistance Low Threshold</String>
        <String Id="6040">If the internal cell resistance is below this value a low internal cell resistance event is triggered.</String>
        <String Id="6041">Internal Resistance High Threshold</String>
        <String Id="6042">If the internal cell resistance is above this value a high internal cell resistance event is triggered.</String>
        <String Id="6043">Intercell Resistance High Threshold</String>
        <String Id="6044">If the intercell resistance is above this value a high intercell resistance event is triggered.</String>
        <String Id="6045">Intertier Resistance High</String>
        <String Id="6046">The system has detected a high intertier resistance condition.</String>
        <String Id="6047">Intertier Resistance High Threshold</String>
        <String Id="6048">If the intertier resistance is above this value a high intertier resistance event is triggered.</String>
        <!-- Machine transferred from FDM 'iCOM_XPCray.xml' via Fdm2Xml.exe -->
        <String Id="6049">Supply Chilled Water Loss of Flow</String>
        <String Id="6050">Supply chilled water flow is too low.</String>
        <String Id="6051">Supply Refrig Temp Set Point</String>
        <String Id="6052">Desired supply refrigerant temperature.</String>
        <String Id="6053">Supply Refrig Temp Band 1</String>
        <String Id="6054">Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point].</String>
        <String Id="6055">Supply Refrig Over Temp Band 1</String>
        <String Id="6056">[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 1].</String>
        <String Id="6057">Supply Refrig Over Temp Band 1 - Event Control</String>
        <String Id="6058">Enable/disable the activation of the [Supply Refrig Over Temp Band 1] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6059">Supply Refrig Over Temp Band 1 - Event Type</String>
        <String Id="6060">The event type for the [Supply Refrig Over Temp Band 1] event.</String>
        <String Id="6061">Supply Refrig Under Temp Band 1</String>
        <String Id="6062">[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 1].</String>
        <String Id="6063">Supply Refrig Under Temp Band 1 - Event Control</String>
        <String Id="6064">Enable/disable the activation of the [Supply Refrig Under Temp Band 1] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6065">Supply Refrig Under Temp Band 1 - Event Type</String>
        <String Id="6066">The event type for the [Supply Refrig Under Temp Band 1] event.</String>
        <String Id="6067">Supply Refrig Temp Band 2</String>
        <String Id="6068">Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point].</String>
        <String Id="6069">Supply Refrig Over Temp Band 2</String>
        <String Id="6070">[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 2].</String>
        <String Id="6071">Supply Refrig Over Temp Band 2 - Event Control</String>
        <String Id="6072">Enable/disable the activation of the [Supply Refrig Over Temp Band 2] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6073">Supply Refrig Over Temp Band 2 - Event Type</String>
        <String Id="6074">The event type for the [Supply Refrig Over Temp Band 2] event.</String>
        <String Id="6075">Supply Refrig Under Temp Band 2</String>
        <String Id="6076">[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 2].</String>
        <String Id="6077">Supply Refrig Under Temp Band 2 - Event Control</String>
        <String Id="6078">Enable/disable the activation of the [Supply Refrig Under Temp Band 2] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6079">Supply Refrig Under Temp Band 2 - Event Type</String>
        <String Id="6080">The event type for the [Supply Refrig Under Temp Band 2] event.</String>
        <String Id="6081">Inverter 1 Short Cycle</String>
        <String Id="6082">Inverter for pump 1 has short cycled and is temporarily locked out from further operation to protect from thermal overload. A short cycle is defined as powering on and off a number of times over a set time period.</String>
        <String Id="6083">Inverter 1 Short Cycle - Event Control</String>
        <String Id="6084">Enable/disable the activation of the [Inverter 1 Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6085">Inverter 1 Short Cycle - Event Type</String>
        <String Id="6086">The event type for the [Inverter 1 Short Cycle] event.</String>
        <String Id="6087">Inverter 2 Short Cycle</String>
        <String Id="6088">Inverter for pump 2 has short cycled and is temporarily locked out from further operation to protect from thermal overload. A short cycle is defined as powering on and off a number of times over a set time period.</String>
        <String Id="6089">Inverter 2 Short Cycle - Event Control</String>
        <String Id="6090">Enable/disable the activation of the [Inverter 2 Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6091">Inverter 2 Short Cycle - Event Type</String>
        <String Id="6092">The event type for the [Inverter 2 Short Cycle] event.</String>
        <!-- Machine transferred from FDM 'iCOM_CR.xml' via Fdm2Xml.exe -->
        <String Id="6093">Supply Air Temperature</String>
        <String Id="6094">Air temperature measured at the outlet of the unit.</String>
        <String Id="6095">Return Air Temperature</String>
        <String Id="6096">Air temperature measured at the inlet of the unit.</String>
        <String Id="6097">Return Dew Point</String>
        <String Id="6098">Dew point temperature measured at the inlet of the unit.</String>
        <String Id="6099">Remote Sensor Minimum Temperature</String>
        <String Id="6100">Minimum value of remote sensor temperature measurements.</String>
        <String Id="6101">Remote Sensor Maximum Temperature</String>
        <String Id="6102">Maximum value of remote sensor temperature measurements.</String>
        <String Id="6103">Remote Sensor Average Temperature</String>
        <String Id="6104">Average value of remote sensor temperature measurements.</String>
        <String Id="6105">Air Temperature Set Point</String>
        <String Id="6106">Desired air temperature.</String>
        <String Id="6107">Cooling Proportional Band</String>
        <String Id="6108">Temperature control band above [Air Temperature Set Point]. If measured air temperature is within this band, cooling operations are proportionally controlled.</String>
        <String Id="6109">Heating Proportional Band</String>
        <String Id="6110">Temperature control band below [Air Temperature Set Point]. If measured air temperature is within this band, heating operations are proportionally controlled.</String>
        <String Id="6111">Air Temperature Dead Band</String>
        <String Id="6112">Value that is divided evenly to form a temperature range above and below [Air Temperature Set Point]. If measured air temperature is within this range, no heating or cooling will occur.</String>
        <String Id="6113">Air Temperature Control Sensor</String>
        <String Id="6114">Sensor from which air temperature measurements will be used for cooling and heating control.</String>
        <String Id="6115">Supply</String>
        <String Id="6116">Remote</String>
        <String Id="6117">Return</String>
        <String Id="6118">Remote Sensor Temperature Calculation</String>
        <String Id="6119">Calculation method applied to temperature readings from the remote sensors to determine a single temperature measurement value for cooling and heating control.</String>
        <String Id="6120">Average</String>
        <String Id="6121">Maximum</String>
        <String Id="6122">Supply Air Over Temp Threshold</String>
        <String Id="6123">Threshold value used in the [Supply Air Over Temperature] event.</String>
        <String Id="6124">Supply Air Over Temperature</String>
        <String Id="6125">[Supply Air Temperature] has exceeded [Supply Air Over Temp Threshold].</String>
        <String Id="6126">Supply Air Over Temperature - Event Control</String>
        <String Id="6127">Enable/disable the activation of the [Supply Air Over Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6128">Supply Air Over Temperature - Event Type</String>
        <String Id="6129">The event type for the [Supply Air Over Temperature] event.</String>
        <String Id="6130">Supply Air Under Temp Threshold</String>
        <String Id="6131">Threshold value used in the [Supply Air Under Temperature] event.</String>
        <String Id="6132">Supply Air Under Temperature</String>
        <String Id="6133">[Supply Air Temperature] has dropped below [Supply Air Under Temp Threshold].</String>
        <String Id="6134">Supply Air Under Temperature - Event Control</String>
        <String Id="6135">Enable/disable the activation of the [Supply Air Under Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6136">Supply Air Under Temperature - Event Type</String>
        <String Id="6137">The event type for the [Supply Air Under Temperature] event.</String>
        <String Id="6138">Return Air Over Temp Threshold</String>
        <String Id="6139">Threshold value used in the [Return Air Over Temperature] event.</String>
        <String Id="6140">Return Air Over Temperature</String>
        <String Id="6141">[Return Air Temperature] has exceeded [Return Air Over Temp Threshold].</String>
        <String Id="6142">Return Air Over Temp - Event Control</String>
        <String Id="6143">Enable/disable the activation of the [Return Air Over Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6144">Return Air Over Temp - Event Type</String>
        <String Id="6145">The event type for the [Return Air Over Temperature] event.</String>
        <String Id="6146">Supply Air Sensor Issue</String>
        <String Id="6147">The air sensor at the outlet of the unit is disconnected or the signal is out of range.</String>
        <String Id="6148">Supply Humidity</String>
        <String Id="6149">Relative humidity at the outlet of the unit.</String>
        <String Id="6150">Return Humidity</String>
        <String Id="6151">Relative humidity measured at the inlet of the unit.</String>
        <String Id="6152">Humidity Set Point</String>
        <String Id="6153">Desired relative humidity.</String>
        <String Id="6154">Humidification Proportional Band</String>
        <String Id="6155">Humidity control band below [Humidity Set Point]. If measured humidity is within this band, humidification operations are proportionally controlled.</String>
        <String Id="6156">Dehumidification Proportional Band</String>
        <String Id="6157">Humidity control band above [Humidity Set Point]. If measured humidity is within this band, dehumidification operations are proportionally controlled.</String>
        <String Id="6158">Humidity Dead Band</String>
        <String Id="6159">Value that is divided evenly to form a range above and below [Humidity Set Point]. If measured humidity is within this range, no humidification or dehumidification will occur.</String>
        <String Id="6160">High Return Humidity Threshold</String>
        <String Id="6161">Threshold value used in the [High Return Humidity] event.</String>
        <String Id="6162">High Return Humidity</String>
        <String Id="6163">[Return Humidity] has exceeded [High Return Humidity Threshold].</String>
        <String Id="6164">Low Return Humidity Threshold</String>
        <String Id="6165">Threshold value used in the [Low Return Humidity] event.</String>
        <String Id="6166">Low Return Humidity</String>
        <String Id="6167">[Return Humidity] has dropped below [Low Return Humidity Threshold].</String>
        <String Id="6168">Humidifier Hours Exceeded</String>
        <String Id="6169">Operating hours for the humidifier have exceeded the threshold.</String>
        <String Id="6170">Dehumidifier Hours Exceeded</String>
        <String Id="6171">Operating hours for the dehumidifier have exceeded the threshold.</String>
        <String Id="6172">Humidifier Under Current</String>
        <String Id="6173">The electrical current to the humidifier has dropped below its lower threshold.</String>
        <String Id="6174">Humidifier Over Current</String>
        <String Id="6175">The electrical current to the humidifier has exceeded its upper threshold.</String>
        <String Id="6176">Humidifier Low Water</String>
        <String Id="6177">The water level in the humidifier has dropped below its threshold.</String>
        <String Id="6178">Humidifier Cylinder Worn</String>
        <String Id="6179">Humidifier cylinder is not operating properly and needs to be replaced.</String>
        <String Id="6180">Humidifier Issue</String>
        <String Id="6181">Humidifier issue detected, causing it to be locked out.</String>
        <String Id="6182">Ext Humidifier Lockout</String>
        <String Id="6183">The humidifier is shut down and disabled by an external input signal.</String>
        <String Id="6184">Humidifier Control Board Not Detected</String>
        <String Id="6185">Humidifier control board is required to be connected, but no signal is detected.</String>
        <String Id="6186">Return Humidity Out Of Proportional Band</String>
        <String Id="6187">[Return Humidity] has exceeded the upper limit of [Dehumidification Proportional Band], or has dropped below the lower limit of [Humidification Proportional Band] ], for an extended period of time.</String>
        <String Id="6188">Fan Control Mode</String>
        <String Id="6189">Fan control mode.</String>
        <String Id="6190">Fan Speed Proportional Band</String>
        <String Id="6191">Temperature control band above the temperature set point calculated for proportional fan speed control. If measured air temperature is within this band, fan speed operations are proportionally controlled.</String>
        <String Id="6192">Fan Speed Manual Set Point</String>
        <String Id="6193">Manual fan speed.</String>
        <String Id="6194">Fan Speed Maximum Set Point</String>
        <String Id="6195">Maximum fan speed.</String>
        <String Id="6196">Fan Speed Minimum Set Point</String>
        <String Id="6197">Minimum fan speed.</String>
        <String Id="6198">Fan Control Sensor</String>
        <String Id="6199">Sensor from which air temperature measurements will be used for fan speed control.</String>
        <String Id="6200">Loss of Air Flow</String>
        <String Id="6201">No air flow through the unit due to failure of all fans.</String>
        <String Id="6202">Fan Hours Exceeded</String>
        <String Id="6203">Operating hours for the unit blower fan have exceeded the threshold.</String>
        <String Id="6204">Top Fan Issue</String>
        <String Id="6205">The top fan is not operating within its normal parameters.</String>
        <String Id="6206">Bottom Fan Issue</String>
        <String Id="6207">The bottom fan is not operating within its normal parameters.</String>
        <String Id="6208">Remote Sensor Name</String>
        <String Id="6209">Name assigned to remote sensor.</String>
        <String Id="6210">Remote Sensor Function</String>
        <String Id="6211">Function assigned to remote sensor.</String>
        <String Id="6212">Disable</String>
        <String Id="6213">Reference</String>
        <String Id="6214">Control</String>
        <String Id="6215">Remote Sensor Temperature</String>
        <String Id="6216">Air temperature as measured by remote sensor.</String>
        <String Id="6217">Remote Sensor Issue</String>
        <String Id="6218">Remote sensor is disconnected or the signal is out of range.</String>
        <String Id="6219">Compressor 1 High Head Pressure</String>
        <String Id="6220">Compressor 1 high head pressure.</String>
        <String Id="6221">Compressor 1 Low Suction Pressure</String>
        <String Id="6222">Compressor 1 low suction pressure.</String>
        <String Id="6223">Compressor 1 Hours Exceeded</String>
        <String Id="6224">Operating hours for compressor 1 have exceeded the threshold.</String>
        <String Id="6225">Dig Scroll Comp 1 Temp Sensor Issue</String>
        <String Id="6226">Digital scroll compressor 1 temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="6227">Dig Scroll Comp 1 Over Temp</String>
        <String Id="6228">Digital scroll compressor 1 shut off because its head temperature has exceeded the upper threshold.</String>
        <String Id="6229">Compressor 1 Low Pressure Transducer Issue</String>
        <String Id="6230">Compressor 1 low pressure transducer is disconnected or the signal is out of range.</String>
        <String Id="6231">Ext Compressor Lockout</String>
        <String Id="6232">The compressor is shut down and disabled by an external input signal.</String>
        <String Id="6233">Reheater Over Temperature</String>
        <String Id="6234">The temperature of the reheater has exceeded its threshold.</String>
        <String Id="6235">Electric Reheater 1 Hours Exceeded</String>
        <String Id="6236">Operating hours for electric reheater 1 have exceeded the threshold.</String>
        <String Id="6237">Ext Reheat Lockout</String>
        <String Id="6238">The reheater is shut down and disabled by an external input signal.</String>
        <String Id="6239">Condenser 1 Issue</String>
        <String Id="6240">Condenser 1 is not operating within its normal parameters.</String>
        <String Id="6241">Condenser VFD Issue</String>
        <String Id="6242">The condenser fan Variable Frequency Drive is offline.</String>
        <String Id="6243">Condenser TVSS Issue</String>
        <String Id="6244">The condenser Transient Voltage Surge Suppressor device has failed.</String>
        <String Id="6245">System Operating State Reason</String>
        <String Id="6246">The reason the system is in the current operating state.</String>
        <String Id="6247">Reason Unknown</String>
        <String Id="6248">Network Display</String>
        <String Id="6249">Alarm</String>
        <String Id="6250">Schedule</String>
        <String Id="6251">Remote System</String>
        <String Id="6252">External Input</String>
        <String Id="6253">Local Display</String>
        <String Id="6254">BMS Timeout Period</String>
        <String Id="6255">Timeframe within which the Building Management System (or external monitoring system) must communicate with the system to avoid a timeout.</String>
        <String Id="6256">Operating Efficiency</String>
        <String Id="6257">The ratio of cooling energy provided to the amount of total energy being used.</String>
        <String Id="6258">Fan Speed</String>
        <String Id="6259">Fan speed expressed as a percentage of the maximum rated speed.</String>
        <String Id="6260">Compressor Utilization</String>
        <String Id="6261">Present compressor utilization expressed as a percentage of the maximum rated capacity.</String>
        <String Id="6262">Dehumidifier Utilization</String>
        <String Id="6263">Present dehumidifier utilization expressed as a percentage of the maximum rated capacity.</String>
        <String Id="6264">Reheat Utilization</String>
        <String Id="6265">Present reheating utilization expressed as a percentage of the maximum rated capacity.</String>
        <String Id="6266">Humidifier Utilization</String>
        <String Id="6267">Present humidifier utilization expressed as a percentage of the maximum rated capacity.</String>
        <String Id="6268">Ext Loss of Flow - Event Control</String>
        <String Id="6269">Enable/disable the activation of the [Ext Loss of Flow] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6270">Ext Loss of Flow - Event Type</String>
        <String Id="6271">The event type for the [Ext Loss of Flow] event.</String>
        <String Id="6272">Ext Reheat Lockout - Event Control</String>
        <String Id="6273">Enable/disable the activation of the [Ext Reheat Lockout] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6274">Ext Reheat Lockout - Event Type</String>
        <String Id="6275">The event type for the [Ext Reheat Lockout] event.</String>
        <String Id="6276">Ext Humidifier Lockout - Event Control</String>
        <String Id="6277">Enable/disable the activation of the [Ext Humidifier Lockout] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6278">Ext Humidifier Lockout - Event Type</String>
        <String Id="6279">The event type for the [Ext Humidifier Lockout] event.</String>
        <String Id="6280">Ext Compressor Lockout - Event Control</String>
        <String Id="6281">Enable/disable the activation of the [Ext Compressor Lockout] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6282">Ext Compressor Lockout - Event Type</String>
        <String Id="6283">The event type for the [Ext Compressor Lockout] event.</String>
        <String Id="6284">Ext Over Temperature - Event Control</String>
        <String Id="6285">Enable/disable the activation of the [Ext Over Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6286">Ext Over Temperature - Event Type</String>
        <String Id="6287">The event type for the [Ext Over Temperature] event.</String>
        <String Id="6288">Condenser VFD Issue - Event Control</String>
        <String Id="6289">Enable/disable the activation of the [Condenser VFD Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6290">Condenser VFD Issue - Event Type</String>
        <String Id="6291">The event type for the [Condenser VFD Issue] event.</String>
        <String Id="6292">Condenser TVSS Issue - Event Control</String>
        <String Id="6293">Enable/disable the activation of the [Condenser TVSS Issue] event (Transient Voltage Surge Suppressor). If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6294">Condenser TVSS Issue - Event Type</String>
        <String Id="6295">The event type for the [Condenser TVSS Issue] event (Transient Voltage Surge Suppressor).</String>
        <String Id="6296">Condenser 1 Issue - Event Control</String>
        <String Id="6297">Enable/disable the activation of the [Condenser 1 Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6298">Condenser 1 Issue - Event Type</String>
        <String Id="6299">The event type for the [Condenser 1 Issue] event.</String>
        <String Id="6300">Input Contact 02 - Event Control</String>
        <String Id="6301">Enable/disable the activation of the [Input Contact 02] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6302">Input Contact 02 - Event Type</String>
        <String Id="6303">The event type for the [Input Contact 02] event.</String>
        <String Id="6304">Input Contact 03 - Event Control</String>
        <String Id="6305">Enable/disable the activation of the [Input Contact 03] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6306">Input Contact 03 - Event Type</String>
        <String Id="6307">The event type for the [Input Contact 03] event.</String>
        <String Id="6308">Input Contact 04 - Event Control</String>
        <String Id="6309">Enable/disable the activation of the [Input Contact 04] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6310">Input Contact 04 - Event Type</String>
        <String Id="6311">The event type for the [Input Contact 04] event.</String>
        <String Id="6312">Ext Over Temperature</String>
        <String Id="6313">A temperature has exceeded its threshold, as indicated by an external input signal.</String>
        <String Id="6314">Ext Loss of Flow</String>
        <String Id="6315">Loss of flow is detected, as indicated by an external input signal.</String>
        <String Id="6316">Ext Condenser Pump High Water</String>
        <String Id="6317">High water is detected in the condenser, as indicated by an external input signal.</String>
        <String Id="6318">Ext Standby Glycol Pump On</String>
        <String Id="6319">The standby glycol pump is on, as indicated by an external input signal.</String>
        <String Id="6320">External Fire Detected</String>
        <String Id="6321">Fire detected, as indicated by an external input signal.</String>
        <String Id="6322">Unit On</String>
        <String Id="6323">Unit was turned on.</String>
        <String Id="6324">Unit Off</String>
        <String Id="6325">Unit was turned off.</String>
        <String Id="6326">Unit Standby</String>
        <String Id="6327">Unit was placed in standby mode.</String>
        <String Id="6328">Unit Partial Shutdown</String>
        <String Id="6329">An event has occurred requiring some system components to be shutdown and disabled.</String>
        <String Id="6330">Unit Shutdown</String>
        <String Id="6331">An event has occurred requiring the unit to be shutdown and disabled to prevent damage to the system.</String>
        <String Id="6332">Water Leakage Detector Sensor Issue</String>
        <String Id="6333">The water leakage detector sensor is disconnected or the signal is out of range.</String>
        <String Id="6334">BMS Communications Timeout</String>
        <String Id="6335">Building Management System (or external monitoring system) has not communicated with the system within the expected timeframe.</String>
        <String Id="6336">Maintenance Due</String>
        <String Id="6337">The calculated maintenance date has been reached.</String>
        <String Id="6338">Maintenance Completed</String>
        <String Id="6339">Maintenance has been completed on the unit.</String>
        <String Id="6340">Clogged Air Filter</String>
        <String Id="6341">Air filter is dirty and needs to be (cleaned or) replaced.</String>
        <String Id="6342">RAM Battery Issue</String>
        <String Id="6343">RAM or RAM backup battery is not operating correctly.</String>
        <String Id="6344">Master Unit Communication Lost</String>
        <String Id="6345">Communication with master unit has been lost.</String>
        <String Id="6346">High Power Shutdown</String>
        <String Id="6347">Supply to high power components has been shutdown.</String>
        <String Id="6348">Ext Condenser Pump High Water - Event Control</String>
        <String Id="6349">Enable/disable the activation of the [Ext Condenser Pump High Water] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6350">Ext Condenser Pump High Water - Event Type</String>
        <String Id="6351">The event type for the [Ext Condenser Pump High Water] event.</String>
        <String Id="6352">Dig Scroll Comp 1 Over Temp - Event Control</String>
        <String Id="6353">Enable/disable the activation of the [Dig Scroll Comp 1 Over Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6354">Dig Scroll Comp 1 Over Temp - Event Type</String>
        <String Id="6355">The event type for the [Dig Scroll Comp 1 Over Temp] event.</String>
        <String Id="6356">Dig Scroll Comp 2 Over Temp</String>
        <String Id="6357">Digital scroll compressor 2 shut off because its head temperature has exceeded the upper threshold.</String>
        <String Id="6358">Dig Scroll Comp 2 Over Temp - Event Control</String>
        <String Id="6359">Enable/disable the activation of the [Dig Scroll Comp 2 Over Temp] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6360">Dig Scroll Comp 2 Over Temp - Event Type</String>
        <String Id="6361">The event type for the [Dig Scroll Comp 2 Over Temp] event.</String>
        <String Id="6362">Ext Standby Glycol Pump On - Event Control</String>
        <String Id="6363">Enable/disable the activation of the [Ext Standby Glycol Pump On] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6364">Ext Standby Glycol Pump On - Event Type</String>
        <String Id="6365">The event type for the [Ext Standby Glycol Pump On] event.</String>
        <String Id="6366">Humidifier Issue - Event Control</String>
        <String Id="6367">Enable/disable the activation of the [Humidifier Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6368">Humidifier Issue - Event Type</String>
        <String Id="6369">The event type for the [Humidifier Issue] event.</String>
        <String Id="6370">Master Unit Communication Lost - Event Control</String>
        <String Id="6371">Enable/disable the activation of the [Master Unit Communication Lost] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6372">Master Unit Communication Lost - Event Type</String>
        <String Id="6373">The event type for the [Master Unit Communication Lost] event.</String>
        <String Id="6374">Clogged Air Filter - Event Control</String>
        <String Id="6375">Enable/disable the activation of the [Clogged Air Filter] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6376">Clogged Air Filter - Event Type</String>
        <String Id="6377">The event type for the [Clogged Air Filter] event.</String>
        <String Id="6378">High Return Humidity - Event Control</String>
        <String Id="6379">Enable/disable the activation of the [High Return Humidity] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6380">High Return Humidity - Event Type</String>
        <String Id="6381">The event type for the [High Return Humidity] event.</String>
        <String Id="6382">Low Return Humidity - Event Control</String>
        <String Id="6383">Enable/disable the activation of the [Low Return Humidity] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6384">Low Return Humidity - Event Type</String>
        <String Id="6385">The event type for the [Low Return Humidity] event.</String>
        <String Id="6386">High Power Shutdown - Event Control</String>
        <String Id="6387">Enable/disable the activation of the [High Power Shutdown] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6388">High Power Shutdown - Event Type</String>
        <String Id="6389">The event type for the [High Power Shutdown] event.</String>
        <!-- Machine transferred from FDM 'iCOM_CR.xml' via Fdm2Xml.exe -->
        <String Id="6390">System On/Off Control</String>
        <String Id="6391">Turn system functionality on or off.</String>
        <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
        <String Id="6392">Output Of/Uf</String>
        <String Id="6393">The output frequency has exceeded a specified range for a specified period of time.</String>
        <String Id="6394">MMS Module Alarm Active</String>
        <String Id="6395">Active alarm or fault of any module in a multi-module system</String>
        <!-- Machine transferred from FDM 'iCOM.xml' via Fdm2Xml.exe -->
        <String Id="6396">Compressor Pump Down Issue</String>
        <String Id="6397">Unable to pump down suction-side pressure during compressor shutdown.</String>
        <String Id="6398">Return Air Sensor Issue</String>
        <String Id="6399">The air sensor at the inlet of the unit is disconnected or the signal is out of range.</String>
        <String Id="6400">Compressor High Pressure Transducer Issue</String>
        <String Id="6401">Compressor high pressure transducer is disconnected or the signal is out of range.</String>
        <!-- Machine transferred from FDM 'nxr.xml' via Fdm2Xml.exe -->
        <String Id="6402">Battery Not Qualified</String>
        <String Id="6403">The UPS battery voltage is not qualified. This event will be detected even in the absence of battery disconnect or when it is open.</String>
        <String Id="6404">Battery Terminals Reversed</String>
        <String Id="6405">The measured battery voltage is a negative value due to reverse battery terminal connections.</String>
        <String Id="6406">Battery Converter Failure</String>
        <String Id="6407">Battery converter failure. This is a summary event caused by one or more power sub-modules in a UPS module.</String>
        <String Id="6408">Inverter SCR Open</String>
        <String Id="6409">The system has detected an open across one or more inverter static switch Silicon Controlled Rectifiers.</String>
        <String Id="6410">Load Sharing Fault</String>
        <String Id="6411">Difference between any phase inverter current of unit and the relevant average output current of parallel system is more than a specific percent of nominal current.</String>
        <String Id="6412">DC Bus Abnormal</String>
        <String Id="6413">The system has detected an abnormal DC Bus Voltage.</String>
        <String Id="6414">Mains Input Neutral Lost</String>
        <String Id="6415">Loss of neutral in the input source is detected.</String>
        <String Id="6416">Load Impact Transfer</String>
        <String Id="6417">On bypass as result of load impact.</String>
        <String Id="6418">User Operation Invalid</String>
        <String Id="6419">User attempted an invalid operation.</String>
        <String Id="6420">Power Sub Module Fault</String>
        <String Id="6421">One or more failures detected in power module, inverter or rectifier.</String>
        <String Id="6422">Output Current Crest Factor Phs A</String>
        <String Id="6423">Output current crest factor of Phase A.</String>
        <String Id="6424">Output Current Crest Factor Phs B</String>
        <String Id="6425">Output current crest factor of Phase B.</String>
        <String Id="6426">Output Current Crest Factor Phs C</String>
        <String Id="6427">Output current crest factor of Phase C.</String>
        <!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
        <String Id="6428">Input Source Label</String>
        <String Id="6429">Identification of the input power source.</String>
        <String Id="6430">Output Power Label</String>
        <String Id="6431">Label for output of a multi-output transformer.</String>
        <String Id="6432">Output Neutral Current</String>
        <String Id="6433">The system output RMS current for Neutral phase.</String>
        <String Id="6434">Ground Current</String>
        <String Id="6435">The RMS Current flowing to Ground</String>
        <String Id="6436">Branch Accumulated Energy</String>
        <String Id="6437">Total accumulated energy output, since last energy reset.</String>
        <String Id="6438">Output Power Factor</String>
        <String Id="6439">Total power factor, real power/apparent power for all phases combined</String>
        <String Id="6440">Output Percent Load</String>
        <String Id="6441">The percentage of the system's total rated output current that is flowing from the system.</String>
        <String Id="6442">Output Voltage Phs A THD</String>
        <String Id="6443">The percentage of Total Harmonic Distortion of the voltage for phase A.</String>
        <String Id="6444">Output Voltage Phs B THD</String>
        <String Id="6445">The percentage of Total Harmonic Distortion of the voltage for phase B.</String>
        <String Id="6446">Output Voltage Phs C THD</String>
        <String Id="6447">The percentage of Total Harmonic Distortion of the voltage for phase C.</String>
        <String Id="6448">Output Current Phs A THD</String>
        <String Id="6449">The percentage of Total Harmonic Distortion of the current for phase A.</String>
        <String Id="6450">Output Current Phs B THD</String>
        <String Id="6451">The percentage of Total Harmonic Distortion of the current for phase B.</String>
        <String Id="6452">Output Current Phs C THD</String>
        <String Id="6453">The percentage of Total Harmonic Distortion of the current for phase C.</String>
        <String Id="6454">Output Current Phs A K-Factor</String>
        <String Id="6455">Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics.</String>
        <String Id="6456">Output Current Phs B K-Factor</String>
        <String Id="6457">Output Current Phs C K-Factor</String>
        <String Id="6458">Output Overvoltage</String>
        <String Id="6459">One or more of the output phase voltages has exceeded the limit.</String>
        <String Id="6460">Output Undervoltage</String>
        <String Id="6461">One or more of the output phase voltages has dropped below the limit.</String>
        <String Id="6462">Output Overcurrent</String>
        <String Id="6463">One or more of the phase currents has exceeded the limit.</String>
        <String Id="6464">Neutral Overcurrent</String>
        <String Id="6465">The system's neutral current has exceeded the limit.</String>
        <String Id="6466">Ground Overcurrent</String>
        <String Id="6467">System ground current has exceeded the limit.</String>
        <String Id="6468">Output Voltage THD</String>
        <String Id="6469">The Total Harmonic Distortion of the voltage on one or more of the output phases has exceeded the limit.</String>
        <String Id="6470">Output Frequency Error</String>
        <String Id="6471">The output frequency is outside a specified range.</String>
        <String Id="6472">Transformer Overtemperature</String>
        <String Id="6473">Indicates a unit transformer overtemperature condition.</String>
        <String Id="6474">Panel Label</String>
        <String Id="6475">A configurable label which identifies this panel.</String>
        <String Id="6476">Panel Main Voltage A-B</String>
        <String Id="6477">The RMS voltage between phases A and B at this panel.</String>
        <String Id="6478">Panel Main Voltage B-C</String>
        <String Id="6479">The RMS voltage between phases B and C at this panel.</String>
        <String Id="6480">Panel Main Voltage C-A</String>
        <String Id="6481">The RMS voltage between phases C and A at this panel.</String>
        <String Id="6482">Panel Main Voltage A-N</String>
        <String Id="6483">The RMS voltage between Phase A and Neutral at this panel.</String>
        <String Id="6484">Panel Main Voltage B-N</String>
        <String Id="6485">The RMS voltage between Phase B and Neutral at this panel.</String>
        <String Id="6486">Panel Main Voltage C-N</String>
        <String Id="6487">The RMS voltage between Phase C and Neutral at this panel.</String>
        <String Id="6488">Panel Main Current Phs A</String>
        <String Id="6489">The RMS current for phase A of this panel.</String>
        <String Id="6490">Panel Main Current Phs B</String>
        <String Id="6491">The RMS current for phase B of this panel.</String>
        <String Id="6492">Panel Main Current Phs C</String>
        <String Id="6493">The RMS current for phase C of this panel.</String>
        <String Id="6494">Panel Main Neutral Current</String>
        <String Id="6495">The RMS current for the Neutral phase of this panel.</String>
        <String Id="6496">Panel Main Ground Current</String>
        <String Id="6497">The RMS Ground current for this panel.</String>
        <String Id="6498">Panel Main Output Apparent Power</String>
        <String Id="6499">The total apparent power of all phases in this panel.</String>
        <String Id="6500">Panel Main Output Real Power</String>
        <String Id="6501">The total real power of all phases in this panel.</String>
        <String Id="6502">Panel Main Accumulated Energy</String>
        <String Id="6503">Total accumulated energy output of this panel, since last energy reset. It is the sum of accumulated energy for all phases.</String>
        <String Id="6504">Panel Main Output Power Factor</String>
        <String Id="6505">The power factor, real power/apparent power for all phases combined for this panel.</String>
        <String Id="6506">Panel Main Output Percent Load</String>
        <String Id="6507">The percentage of this panel's rated current capacity flowing through this panel.</String>
        <String Id="6508">Panel Main Voltage Phs A THD</String>
        <String Id="6509">The percentage of Total Harmonic Distortion of the voltage for phase A of this panel.</String>
        <String Id="6510">Panel Main Voltage Phs B THD</String>
        <String Id="6511">The percentage of Total Harmonic Distortion of the voltage for phase B of this panel.</String>
        <String Id="6512">Panel Main Voltage Phs C THD</String>
        <String Id="6513">The percentage of Total Harmonic Distortion of the voltage for phase C of this panel.</String>
        <String Id="6514">Panel Main Current Phs A THD</String>
        <String Id="6515">The percentage of Total Harmonic Distortion of the current for phase A of this panel.</String>
        <String Id="6516">Panel Main Current Phs B THD</String>
        <String Id="6517">The percentage of Total Harmonic Distortion of the current for phase B of this panel.</String>
        <String Id="6518">Panel Main Current Phs C THD</String>
        <String Id="6519">The percentage of Total Harmonic Distortion of the current for phase C of this panel.</String>
        <String Id="6520">Panel Main Current Phs A Crest Factor</String>
        <String Id="6521">The ratio of the peak current amplitude divided by the RMS amplitude for phase A of this panel.</String>
        <String Id="6522">Panel Main Current Phs B Crest Factor</String>
        <String Id="6523">The ratio of the peak current amplitude divided by the RMS amplitude for phase B of this panel</String>
        <String Id="6524">Panel Main Current Phs C Crest Factor</String>
        <String Id="6525">The ratio of the peak current amplitude divided by the RMS amplitude for phase C of this panel</String>
        <String Id="6526">Panel Summary Status</String>
        <String Id="6527">The status for the panel. Detects and annunciates upon occurrence of any branch or panelboard main breaker active event.</String>
        <String Id="6528">Panel Overvoltage</String>
        <String Id="6529">One or more of the phase voltages of this panel has exceeded the limit.</String>
        <String Id="6530">Panel Undervoltage</String>
        <String Id="6531">One or more of the phase voltages of this panel is less than the limit.</String>
        <String Id="6532">Panel Overcurrent</String>
        <String Id="6533">One or more of the phase currents of this panel has exceeded the limit.</String>
        <String Id="6534">Panel Neutral Overcurrent</String>
        <String Id="6535">The Neutral current of this panel has exceeded the limit.</String>
        <String Id="6536">Panel Ground Overcurrent</String>
        <String Id="6537">The Ground current of this panel has exceeded the limit.</String>
        <String Id="6538">Branch Label</String>
        <String Id="6539">A configurable label which identifies this branch circuit.</String>
        <String Id="6540">Branch Current Line 1</String>
        <String Id="6541">The RMS current in Line 1 of this branch.</String>
        <String Id="6542">Branch Current Line 2</String>
        <String Id="6543">The RMS current in Line 2 of this branch.</String>
        <String Id="6544">Branch Current Line 3</String>
        <String Id="6545">The RMS current in Line 3 of this branch.</String>
        <String Id="6546">Branch Output Real Power</String>
        <String Id="6547">The total real power of all phases in this branch.</String>
        <String Id="6548">Total accumulated energy output of this branch, since last energy reset. It is the sum of accumulated energy for all phases.</String>
        <String Id="6549">Branch Output Power Factor</String>
        <String Id="6550">Total power factor, which is real power/apparent power for all phases in this branch combined.</String>
        <String Id="6551">Branch Output Percent Load</String>
        <String Id="6552">The percentage of this branch's total rated current capacity flowing through this branch.</String>
        <String Id="6553">Branch Overcurrent</String>
        <String Id="6554">The current in one or more phases of this branch exceeds the limit.</String>
        <String Id="6555">Branch Undercurrent</String>
        <String Id="6556">The current in one or more phases of this branch is less than the limit.</String>
        <String Id="6557">Subfeed Label</String>
        <String Id="6558">A configurable label which identifies this subfeed circuit.</String>
        <String Id="6559">Subfeed Current Phs A</String>
        <String Id="6560">Subfeed output RMS current for phase A.</String>
        <String Id="6561">Subfeed Current Phs B</String>
        <String Id="6562">Subfeed output RMS current for Phase B.</String>
        <String Id="6563">Subfeed Current Phs C</String>
        <String Id="6564">Subfeed output RMS current for Phase C.</String>
        <String Id="6565">Subfeed Neutral Current</String>
        <String Id="6566">Subfeed RMS current for Neutral.</String>
        <String Id="6567">Subfeed Ground Current</String>
        <String Id="6568">Subfeed RMS current for Ground.</String>
        <String Id="6569">Subfeed Output Apparent Power</String>
        <String Id="6570">Total apparent power output by all phases in this subfeed.</String>
        <String Id="6571">Subfeed Output Real Power</String>
        <String Id="6572">Total real power output by all phases in this subfeed.</String>
        <String Id="6573">Subfeed Accumulated Energy</String>
        <String Id="6574">Total accumulated energy output of this subfeed since last energy reset. It is the sum of accumulated energy for all phases.</String>
        <String Id="6575">Subfeed Power Factor</String>
        <String Id="6576">Total power factor, which is real power/apparent power for all subfeed phases combined.</String>
        <String Id="6577">Subfeed Output Percent Load</String>
        <String Id="6578">The percentage of the subfeeds total rated output current that is flowing in the subfeed.</String>
        <String Id="6579">Subfeed Current Phs A THD</String>
        <String Id="6580">The percentage of Total Harmonic Distortion of the current in phase A of this subfeed.</String>
        <String Id="6581">Subfeed Current Phs B THD</String>
        <String Id="6582">The percentage of Total Harmonic Distortion of the current in phase B of this subfeed.</String>
        <String Id="6583">Subfeed Current Phs C THD</String>
        <String Id="6584">The percentage of Total Harmonic Distortion of the current in phase C of this subfeed.</String>
        <String Id="6585">Subfeed Current Phs A Crest Factor</String>
        <String Id="6586">The ratio of peak current amplitude divided by the RMS amplitude for phase A of this subfeed.</String>
        <String Id="6587">Subfeed Current Phs B Crest Factor</String>
        <String Id="6588">The ratio of peak current amplitude divided by the RMS amplitude for phase B of this subfeed.</String>
        <String Id="6589">Subfeed Current Phs C Crest Factor</String>
        <String Id="6590">The ratio of peak current amplitude divided by the RMS amplitude for phase C of this subfeed.</String>
        <String Id="6591">Subfeed Phase Overcurrent</String>
        <String Id="6592">One or more of the phase currents in this subfeed has exceeded the limit.</String>
        <String Id="6593">Subfeed Neutral Overcurrent</String>
        <String Id="6594">The Neutral current in this subfeed has exceeded the limit.</String>
        <String Id="6595">Subfeed Ground Overcurrent</String>
        <String Id="6596">The Ground current of this subfeed has exceeded the limit.</String>
        <String Id="6597">Event Name</String>
        <String Id="6598">The configurable name for this event.</String>
        <String Id="6599">Event State</String>
        <String Id="6600">The present state of this digital event input.</String>
        <!-- Machine transferred from FDM 'new_PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
        <String Id="6601">Output Current Phs A Crest Factor</String>
        <String Id="6602">The ratio of peak current amplitude divided by the RMS amplitude for phase A.</String>
        <String Id="6603">Output Current Phs B Crest Factor</String>
        <String Id="6604">The ratio of peak current amplitude divided by the RMS amplitude for phase B.</String>
        <String Id="6605">Output Current Phs C Crest Factor</String>
        <String Id="6606">The ratio of peak current amplitude divided by the RMS amplitude for phase C.</String>
        <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
        <String Id="6607">Branch Receptacle Type</String>
        <String Id="6608">The form factor of the receptacles in the module.</String>
        <String Id="6609">unknown</String>
        <String Id="6610">NEMA 5-15R</String>
        <String Id="6611">NEMA 5-20R</String>
        <String Id="6612">NEMA L5-20R</String>
        <String Id="6613">NEMA L5-30R</String>
        <String Id="6614">NEMA L6-20R</String>
        <String Id="6615">NEMA L6-30R</String>
        <String Id="6616">IEC 60320 Sheet F C13</String>
        <String Id="6617">IEC 60320 Sheet J C19</String>
        <String Id="6618">SEV 1011 Type 12 (Swiss)</String>
        <String Id="6619">SEV 1011 Type 23 (Swiss)</String>
        <String Id="6620">BS 1363 Type G (British)</String>
        <String Id="6621">CEE 7 Type F (Schuko)</String>
        <String Id="6622">CEE 7 Type E (French)</String>
        <String Id="6623">Branch Current</String>
        <String Id="6624">Module's total measured line current, which is the total current being supplied to the branch receptacles.</String>
        <String Id="6625">Branch Available Current Until Alarm</String>
        <String Id="6626">The amount of current increase allowed before the over current alarm occurs.</String>
        <String Id="6627">Branch Percent Current Utilization</String>
        <String Id="6628">The percent of BRM current utilization relative to the BRM's current rating.</String>
        <String Id="6629">Low Current Alarm Threshold</String>
        <String Id="6630">If the module current is below this percentage of the full scale rated value, an under current alarm is activated.</String>
        <String Id="6631">Over Current Warning Threshold</String>
        <String Id="6632">If the module current is above this percentage of the full scale rated value, an over current warning is activated.</String>
        <String Id="6633">Over Current Alarm Threshold</String>
        <String Id="6634">If the module current is above this percentage of the full scale rated value, an over current alarm is activated.</String>
        <String Id="6635">Receptacle Type</String>
        <String Id="6636">Receptacle type (form factor).</String>
        <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
        <String Id="6637">Branch Line Source</String>
        <String Id="6638">Branch Receptacle Module source line configuration (for example, L1-N or L1-L2).</String>
        <String Id="6639">unknown</String>
        <String Id="6640">Type L1-N</String>
        <String Id="6641">Type L2-N</String>
        <String Id="6642">Type L3-N</String>
        <String Id="6643">Type L1-L2</String>
        <String Id="6644">Type L2-L3</String>
        <String Id="6645">Type L3-L1</String>
        <!-- Machine transferred from FDM 'iCOM_SC.xml' via Fdm2Xml.exe -->
        <String Id="6646">Compressor Shut Down - Ambient Air Low Temp Limit</String>
        <String Id="6647">When the temperature of ambient air falls below this lower threshold, the compressor will be shut off. Correct condensing pressure cannot be achieved when temperature is too low.</String>
        <String Id="6648">Compressor Not Stopping</String>
        <String Id="6649">Compressor commanded to stop, but continues to run.</String>
        <String Id="6650">Compressor State</String>
        <String Id="6651">Compressor operational state.</String>
        <String Id="6652">Compressor Capacity Control State</String>
        <String Id="6653">Compressor capacity control state. When 'ON', the cooling capacity of the compressor has been reduced.</String>
        <String Id="6654">Compressor Head Pressure</String>
        <String Id="6655">Compressor head pressure.</String>
        <String Id="6656">Compressor Hours</String>
        <String Id="6657">Operating hours for compressor since last reset of this value.</String>
        <String Id="6658">Compressor Hours Threshold</String>
        <String Id="6659">Threshold value used in the [Compressor Hours Exceeded] event.</String>
        <String Id="6660">Compressor Hours Exceeded</String>
        <String Id="6661">[Compressor Hours] has exceeded [Compressor Hours Threshold].</String>
        <String Id="6662">Compressor High Head Pressure</String>
        <String Id="6663">Compressor is shut down due to high head pressure.</String>
        <String Id="6664">Compressor Low Suction Pressure</String>
        <String Id="6665">Compressor is shut down due to low suction pressure.</String>
        <String Id="6666">Compressor Thermal Overload</String>
        <String Id="6667">Compressor is shut down due to thermal overload.</String>
        <String Id="6668">Compressor Low Oil Pressure</String>
        <String Id="6669">Compressor low oil pressure.</String>
        <String Id="6670">Compressor Head Pressure Over Threshold</String>
        <String Id="6671">Compressor head pressure has exceeded an upper threshold.</String>
        <String Id="6672">Compressor Loss of Differential Pressure</String>
        <String Id="6673">Compressor is shut down due to low differential pressure.</String>
        <String Id="6674">Condenser Fan Speed</String>
        <String Id="6675">Condenser fan speed expressed as a percentage of the maximum rated speed.</String>
        <String Id="6676">Condenser Fan Issue</String>
        <String Id="6677">Condenser fan is not operating within its operational parameters.</String>
        <String Id="6678">Low Condenser Refrigerant Pressure</String>
        <String Id="6679">Refrigerant pressure in condenser coil is too low.</String>
        <String Id="6680">Fluid Pressure</String>
        <String Id="6681">Fluid pressure. This is the pressure within a closed water/glycol circuit.</String>
        <String Id="6682">Low Fluid Pressure</String>
        <String Id="6683">[Fluid Pressure] has dropped below a specified threshold.</String>
        <String Id="6684">Fluid Cooling Proportional Band</String>
        <String Id="6685">Temperature control band above [Actual Supply Fluid Temp Set Point]. If [Return Fluid Temperature] is within this band, fluid cooling operations are proportionally controlled.</String>
        <String Id="6686">Actual Supply Fluid Temp Set Point</String>
        <String Id="6687">The actual set point value being used for the desired fluid temperature at the outlet of the unit.</String>
        <String Id="6688">Supply Fluid Temp Set Point 1</String>
        <String Id="6689">Set point 1 of desired fluid temperature at the outlet of the unit.</String>
        <String Id="6690">Supply Fluid Temp Set Point 2</String>
        <String Id="6691">Set point 2 of desired fluid temperature at the outlet of the unit.</String>
        <String Id="6692">Supply Fluid Over Temp Threshold 2</String>
        <String Id="6693">Second threshold value used in the [Supply Fluid Over Temp] event.</String>
        <String Id="6694">Supply Fluid Under Temp Threshold</String>
        <String Id="6695">Threshold value used in the [Supply Fluid Under Temp] event.</String>
        <String Id="6696">Supply Fluid Under Temp Threshold 2</String>
        <String Id="6697">Second threshold value used in the [Supply Fluid Under Temp] event.</String>
        <String Id="6698">Return Fluid Temperature</String>
        <String Id="6699">Fluid temperature measured at the inlet of the unit.</String>
        <String Id="6700">Return Fluid Over Temp Threshold</String>
        <String Id="6701">Threshold value used in the [Return Fluid Over Temp] event.</String>
        <String Id="6702">Return Fluid Over Temp Threshold 2</String>
        <String Id="6703">Second threshold value used in the [Return Fluid Over Temp] event.</String>
        <String Id="6704">Return Fluid Under Temp Threshold</String>
        <String Id="6705">Threshold value used in the [Return Fluid Under Temp] event.</String>
        <String Id="6706">Return Fluid Under Temp Threshold 2</String>
        <String Id="6707">Second threshold value used in the [Return Fluid Under Temp] event.</String>
        <String Id="6708">Return Fluid Over Temp</String>
        <String Id="6709">[Return Fluid Temperature] has exceeded a specified threshold.</String>
        <String Id="6710">Return Fluid Under Temp</String>
        <String Id="6711">[Return Fluid Temperature] has dropped below a specified threshold.</String>
        <String Id="6712">Return Fluid Temp Sensor Issue</String>
        <String Id="6713">The return fluid temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="6714">Teamwork Return Fluid Temp Sensor Issue</String>
        <String Id="6715">The return fluid temperature sensors for all Teamwork units are disconnected or the signals are out of range.</String>
        <String Id="6716">All Pumps Loss of Flow</String>
        <String Id="6717">System is shut down due to loss of flow in all available pumps.</String>
        <String Id="6718">Pump Hours</String>
        <String Id="6719">Operating hours for pump since last reset of this value.</String>
        <String Id="6720">Pump Hours Threshold</String>
        <String Id="6721">Threshold value used in the [Pump Hours Exceeded] event.</String>
        <String Id="6722">Pump Hours Exceeded</String>
        <String Id="6723">[Pump Hours] has exceeded [Pump Hours Threshold].</String>
        <String Id="6724">Free Cooling External Temperature Delta</String>
        <String Id="6725">Minimum temperature delta required between return fluid and external ambient air temperatures in order to enable free cooling.</String>
        <String Id="6726">Free Cooling Status</String>
        <String Id="6727">Free cooling status.</String>
        <String Id="6728">Free Cooling Valve Open Position</String>
        <String Id="6729">Free cooling valve open position.</String>
        <String Id="6730">Free Cooling Valve Hours</String>
        <String Id="6731">Operating hours for free cooling valve since last reset of this value.</String>
        <String Id="6732">Free Cooling Valve Hours Threshold</String>
        <String Id="6733">Threshold value used in the [Free Cooling Valve Hours Exceeded] event.</String>
        <String Id="6734">Free Cooling Valve Hours Exceeded</String>
        <String Id="6735">[Free Cooling Valve Hours] has exceeded [Free Cooling Valve Hours Threshold].</String>
        <String Id="6736">Evaporator Return Fluid Temperature</String>
        <String Id="6737">Fluid temperature measured at the inlet of the evaporator.</String>
        <String Id="6738">Evaporator Inlet Temp Sensor Issue</String>
        <String Id="6739">The evaporator inlet temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="6740">Teamwork Evaporator Inlet Temp Sensor Issue</String>
        <String Id="6741">The evaporator inlet temperature sensors for all Teamwork units are disconnected or the signals are out of range.</String>
        <String Id="6742">Evaporator Fluid Freeze - Auto Reset</String>
        <String Id="6743">Evaporator outlet fluid temperature has dropped below the freeze threshold. Evaporator has been shut down, but will restart when the temperature rises above the threshold.</String>
        <String Id="6744">Evaporator Fluid Freeze - Manual Reset Required</String>
        <String Id="6745">Evaporator outlet fluid temperature has dropped below the freeze threshold. Evaporator has been shut down and requires a manual reset.</String>
        <String Id="6746">Supply Brine Temp Set Point</String>
        <String Id="6747">Desired brine fluid temperature at the outlet of the unit.</String>
        <String Id="6748">Supply Heated Water Temp Set Point</String>
        <String Id="6749">Desired heated water temperature at the outlet of the unit.</String>
        <String Id="6750">Standby Units</String>
        <String Id="6751">The number of standby units.</String>
        <String Id="6752">Subgroup Event Occurred During Communication Loss</String>
        <String Id="6753">While subgroup unit communication was lost, an event occurred on the subgroup unit. Please check subgroup unit event log.</String>
        <String Id="6754">Compressor High Head Pressure - Event Control</String>
        <String Id="6755">Enable/disable the activation of the [Compressor High Head Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6756">Compressor High Head Pressure - Event Type</String>
        <String Id="6757">The event type for the [Compressor High Head Pressure] event.</String>
        <String Id="6758">Compressor Low Suction Pressure - Event Control</String>
        <String Id="6759">Enable/disable the activation of the [Compressor Low Suction Pressure] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6760">Compressor Low Suction Pressure - Event Type</String>
        <String Id="6761">The event type for the [Compressor Low Suction Pressure] event.</String>
        <String Id="6762">Compressor Thermal Overload - Event Control</String>
        <String Id="6763">Enable/disable the activation of the [Compressor Thermal Overload] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6764">Compressor Thermal Overload - Event Type</String>
        <String Id="6765">The event type for the [Compressor Thermal Overload] event.</String>
        <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
        <String Id="6766">Branch Capabilities</String>
        <String Id="6767">Branch Receptacle Module capabilities indicates the measurement and/or control capability.  "Current Measurement Only" and "All Measurements" enumeration values are treated as mutually exclusive values.</String>
        <String Id="6768">None</String>
        <String Id="6769">Current Measurement Only</String>
        <String Id="6770">All Measurements</String>
        <String Id="6771">Control</String>
        <String Id="6772">Receptacle Capabilities</String>
        <String Id="6773">Receptacle capabilities indicates the measurement and/or control capability, etc. Measurement capabilities are defined either as all measurements or only current measurements.</String>
        <!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
        <String Id="6774">Air Temperature Control Type</String>
        <String Id="6775">Type of algorithm used to control the system's output air temperature.</String>
        <String Id="6776">Proportional</String>
        <String Id="6777">Prop+Integral</String>
        <String Id="6778">Intelligent</String>
        <String Id="6779">Air Temperature Proportional Band</String>
        <String Id="6780">Value that is divided evenly to form proportional temperature control bands above and below [Air Temperature Set Point].</String>
        <String Id="6781">Air Temperature Control Integration Time</String>
        <String Id="6782">Time value used when system is under integral air temperature control.</String>
        <String Id="6783">Today's High Air Temperature</String>
        <String Id="6784">The highest external air temperature measured since midnight.</String>
        <String Id="6785">Today's High Air Temperature Time</String>
        <String Id="6786">[Today's High Air Temperature] was measured at this time.</String>
        <String Id="6787">Today's Low Air Temperature</String>
        <String Id="6788">The lowest external air temperature measured since midnight.</String>
        <String Id="6789">Today's Low Air Temperature Time</String>
        <String Id="6790">[Today's Low Air Temperature] was measured at this time.</String>
        <String Id="6791">Supply Air Temperature Set Point</String>
        <String Id="6792">Desired supply air temperature.</String>
        <String Id="6793">Supply Air Temperature Sensor Control</String>
        <String Id="6794">Control mode to be used with the supply air temperature sensor.</String>
        <String Id="6795">Disabled</String>
        <String Id="6796">Limit</String>
        <String Id="6797">Control</String>
        <String Id="6798">Temp Only</String>
        <String Id="6799">Return Air Temperature Set Point</String>
        <String Id="6800">Desired air temperature at the inlet of the unit.</String>
        <String Id="6801">Return Air Under Temp Threshold</String>
        <String Id="6802">Threshold value used in the [Return Air Under Temperature] event.</String>
        <String Id="6803">Return Air Under Temperature</String>
        <String Id="6804">[Return Air Temperature] has dropped below [Return Air Under Temp Threshold].</String>
        <String Id="6805">Ext Air Sensor C Temperature</String>
        <String Id="6806">Air temperature as measured by external air sensor C.</String>
        <String Id="6807">Ext Air Sensor A Over Temp Threshold</String>
        <String Id="6808">Threshold value used in the [External Air Sensor A Over Temperature] event.</String>
        <String Id="6809">Ext Air Sensor A Under Temp Threshold</String>
        <String Id="6810">Threshold value used in the [External Air Sensor A Under Temperature] event.</String>
        <String Id="6811">Return Humidity Set Point</String>
        <String Id="6812">Desired relative humidity at the inlet of the unit.</String>
        <String Id="6813">Humidity Proportional Control Type</String>
        <String Id="6814">Type of algorithm to use for proportional control of output humidity.</String>
        <String Id="6815">Relative</String>
        <String Id="6816">Compensated</String>
        <String Id="6817">Predictive</String>
        <String Id="6818">Humidity Proportional Band</String>
        <String Id="6819">Value that is divided evenly to form proportional humidity control bands above and below [Humidity Set Point].</String>
        <String Id="6820">Humidity Proportional Control Integration Time</String>
        <String Id="6821">Time value used to add an integral term to proportional humidity control. If set to 0, time will not be a factor in the proportional control algorithm.</String>
        <String Id="6822">Today's High Humidity</String>
        <String Id="6823">The highest external humidity measured since midnight.</String>
        <String Id="6824">Today's High Humidity Time</String>
        <String Id="6825">[Today's High Humidity] was measured at this time</String>
        <String Id="6826">Today's Low Humidity</String>
        <String Id="6827">The lowest external humidity measured since midnight.</String>
        <String Id="6828">Today's Low Humidity Time</String>
        <String Id="6829">[Today's Low Humidity] was measured at this time</String>
        <String Id="6830">Ext Air Sensor C Humidity</String>
        <String Id="6831">Relative humidity as measured by external air sensor C.</String>
        <String Id="6832">Ext Air Sensor A High Humidity Threshold</String>
        <String Id="6833">Threshold value used in the [External Air Sensor A High Humidity] event.</String>
        <String Id="6834">Ext Air Sensor A High Humidity</String>
        <String Id="6835">[Ext Air Sensor A Humidity] has exceeded [Ext Air Sensor A High Humidity Threshold].</String>
        <String Id="6836">Ext Air Sensor A Low Humidity Threshold</String>
        <String Id="6837">Threshold value used in the [External Air Sensor A Low Humidity] event.</String>
        <String Id="6838">Ext Air Sensor A Low Humidity</String>
        <String Id="6839">[Ext Air Sensor A Humidity] has dropped below [Ext Air Sensor A Low Humidity Threshold].</String>
        <String Id="6840">Compressor Short Cycle</String>
        <String Id="6841">Compressor short cycle. A short cycle is defined as turning on and off a number of times over a set time period.</String>
        <String Id="6842">Dig Scroll Comp Discharge Temp</String>
        <String Id="6843">Digital scroll compressor discharge temperature.</String>
        <String Id="6844">Dig Scroll Comp Discharge Temp Sensor Issue</String>
        <String Id="6845">Digital scroll compressor discharge temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="6846">Dig Scroll Comp Over Temp</String>
        <String Id="6847">Digital scroll compressor is shut down due to head temperature exceeding an upper threshold.</String>
        <String Id="6848">Free Cooling Internal Temperature Delta</String>
        <String Id="6849">Minimum temperature delta required between supply fluid and internal ambient air temperatures in order to enable free cooling.</String>
        <String Id="6850">Free Cooling Internal Control Mode</String>
        <String Id="6851">Free cooling internal control mode</String>
        <String Id="6852">Disabled</String>
        <String Id="6853">Contact</String>
        <String Id="6854">Value</String>
        <String Id="6855">Free Cooling Fluid Temperature</String>
        <String Id="6856">Free cooling fluid temperature.</String>
        <String Id="6857">Minimum Chilled Water Temp Set Point Enable</String>
        <String Id="6858">Enable/disable the activation of [Minimum Chilled Water Temp Set Point].</String>
        <String Id="6859">Minimum Chilled Water Temp Set Point</String>
        <String Id="6860">Minimum desired chilled water temperature.</String>
        <String Id="6861">Ext Free Cooling Lockout</String>
        <String Id="6862">Free cooling is disabled by an external input signal.</String>
        <String Id="6863">Free Cooling Temp Sensor Issue</String>
        <String Id="6864">The free cooling fluid temperature sensor is disconnected or the signal is out of range.</String>
        <String Id="6865">Hot Water / Hot Gas Valve Hours</String>
        <String Id="6866">Operating hours for hot water / hot gas valve since last reset of this value.</String>
        <String Id="6867">Hot Water / Hot Gas Valve Hours Threshold</String>
        <String Id="6868">Threshold value used in the [Hot Water / Hot Gas Valve Hours Exceeded] event.</String>
        <String Id="6869">Hot Water / Hot Gas Valve Hours Exceeded</String>
        <String Id="6870">[Hot Water / Hot Gas Valve Hours] has exceeded [Hot Water / Hot Gas Valve Hours Threshold].</String>
        <String Id="6871">Electric Reheater Hours</String>
        <String Id="6872">Operating hours for electric reheater since last reset of this value.</String>
        <String Id="6873">Electric Reheater Hours Threshold</String>
        <String Id="6874">Threshold value used in the [Electric Reheater Hours Exceeded] event.</String>
        <String Id="6875">Electric Reheater Hours Exceeded</String>
        <String Id="6876">[Electric Reheater Hours] has exceeded [Electric Reheaters Hours Threshold].</String>
        <String Id="6877">Humidifier Hours</String>
        <String Id="6878">Operating hours for humidifier since last reset of this value.</String>
        <String Id="6879">Humidifier Hours Threshold</String>
        <String Id="6880">Threshold value used in the [Humidifier Hours Exceeded] event.</String>
        <String Id="6881">Dehumidifier Hours</String>
        <String Id="6882">Operating hours for dehumidifier since last reset of this value.</String>
        <String Id="6883">Dehumidifier Hours Threshold</String>
        <String Id="6884">Threshold value used in the [Dehumidifier Hours Exceeded] event.</String>
        <String Id="6885">Fan Control Mode</String>
        <String Id="6886">Fan control mode.</String>
        <String Id="6887">Auto</String>
        <String Id="6888">Manual</String>
        <String Id="6889">Economy</String>
        <String Id="6890">Delta</String>
        <String Id="6891">Fan Hours</String>
        <String Id="6892">Operating hours for fan since last reset of this value.</String>
        <String Id="6893">Fan Hours Threshold</String>
        <String Id="6894">Threshold value used in the [Fan Hours Exceeded] event.</String>
        <String Id="6895">Main Fan Overload</String>
        <String Id="6896">Main fan is shut down due to thermal overload.</String>
        <String Id="6897">Condenser</String>
        <String Id="6898">Condenser is not operating within its operational parameters.</String>
        <String Id="6899">Analog Input Reading</String>
        <String Id="6900">Generic analog input reading (unitless).</String>
        <String Id="6901">Free Cooling Valve Open Position</String>
        <String Id="6902">Free cooling valve open position.</String>
        <String Id="6903">Hot Water / Hot Gas Valve Open Position</String>
        <String Id="6904">Hot water / hot gas valve open position.</String>
        <String Id="6905">Fan State</String>
        <String Id="6906">Fan operational state.</String>
        <String Id="6907">Cooling State</String>
        <String Id="6908">Cooling operational state.</String>
        <String Id="6909">Free Cooling State</String>
        <String Id="6910">Free cooling operational state.</String>
        <String Id="6911">Maintenance Tracking State</String>
        <String Id="6912">Maintenance tracking operational state.</String>
        <String Id="6913">Hot Water / Hot Gas State</String>
        <String Id="6914">Hot water / hot gas operational state.</String>
        <String Id="6915">Electric Reheat State</String>
        <String Id="6916">Electric reheater operational state.</String>
        <String Id="6917">Dehumidifier State</String>
        <String Id="6918">Dehumidifier operational state.</String>
        <String Id="6919">Humidifier State</String>
        <String Id="6920">Humidifier operational state.</String>
        <String Id="6921">Ext Free Cooling Lockout - Event Control</String>
        <String Id="6922">Enable/disable the activation of the [Ext Free Cooling Lockout] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6923">Ext Free Cooling Lockout - Event Type</String>
        <String Id="6924">The event type for the [Ext Free Cooling Lockout] event.</String>
        <String Id="6925">Ext Standby Unit On - Event Control</String>
        <String Id="6926">Enable/disable the activation of the [Ext Standby Unit On] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6927">Ext Standby Unit On - Event Type</String>
        <String Id="6928">The event type for the [Ext Standby Unit On] event.</String>
        <String Id="6929">Ext Loss of Air Blower - Event Control</String>
        <String Id="6930">Enable/disable the activation of the [Ext Loss of Air Blower] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6931">Ext Loss of Air Blower - Event Type</String>
        <String Id="6932">The event type for the [Ext Loss of Air Blower] event.</String>
        <String Id="6933">Compressor Pump Down Issue - Event Control</String>
        <String Id="6934">Enable/disable the activation of the [Compressor Pump Down Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6935">Compressor Pump Down Issue - Event Type</String>
        <String Id="6936">The event type for the [Compressor Pump Down Issue] event.</String>
        <String Id="6937">Compressor Short Cycle - Event Control</String>
        <String Id="6938">Enable/disable the activation of the [Compressor Short Cycle] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6939">Compressor Short Cycle - Event Type</String>
        <String Id="6940">The event type for the [Compressor Short Cycle] event.</String>
        <String Id="6941">Dig Scroll Comp Discharge Over Temp - Event Ctrl</String>
        <String Id="6942">Enable/disable the activation of the [Dig Scroll Comp Discharge Over Temp] event.</String>
        <String Id="6943">Dig Scroll Comp Discharge Over Temp - Event Type</String>
        <String Id="6944">The event type for the [Dig Scroll Comp Discharge Over Temp] event.</String>
        <String Id="6945">Ext Air Sensor A Event Control</String>
        <String Id="6946">Enable/disable the activation of events related to measurements by the external air sensor A.</String>
        <String Id="6947">Return Air Sensor Event Control</String>
        <String Id="6948">Enable/disable the activation of events related to measurements by the return air sensor.</String>
        <String Id="6949">Ext Air Sensor A High Humidity - Event Control</String>
        <String Id="6950">Enable/disable the activation of the [Ext Air Sensor A High Humidity] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6951">Ext Air Sensor A High Humidity - Event Type</String>
        <String Id="6952">The event type for the [Ext Air Sensor A High Humidity] event.</String>
        <String Id="6953">Ext Air Sensor A Low Humidity - Event Control</String>
        <String Id="6954">Enable/disable the activation of the [Ext Air Sensor A Low Humidity] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6955">Ext Air Sensor A Low Humidity - Event Type</String>
        <String Id="6956">The event type for the [Ext Air Sensor A Low Humidity] event.</String>
        <String Id="6957">Return Air Under Temp - Event Control</String>
        <String Id="6958">Enable/disable the activation of the [Return Air Under Temperature] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6959">Return Air Under Temp - Event Type</String>
        <String Id="6960">The event type for the [Return Air Under Temperature] event.</String>
        <String Id="6961">Fan Hours Exceeded - Event Control</String>
        <String Id="6962">Enable/disable the activation of the [Fan Hours Exceeded] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6963">Fan Hours Exceeded - Event Type</String>
        <String Id="6964">The event type for the [Fan Hours Exceeded] event.</String>
        <String Id="6965">Main Fan Overload - Event Control</String>
        <String Id="6966">Enable/disable the activation of the [Main Fan Overload] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6967">Main Fan Overload - Event Type</String>
        <String Id="6968">The event type for the [Main Fan Overload] event.</String>
        <String Id="6969">Condenser Issue - Event Control</String>
        <String Id="6970">Enable/disable the activation of the [Condenser Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="6971">Condenser Issue - Event Type</String>
        <String Id="6972">The event type for the [Condenser Issue] event.</String>
        <String Id="6973">Ext Loss of Air Blower</String>
        <String Id="6974">Loss of air blower is detected, as indicated by an external input signal.</String>
        <String Id="6975">Ext Standby Unit On</String>
        <String Id="6976">Standby unit is on, as indicated by an external input signal.</String>
        <String Id="6977">Digital Output Board Not Detected</String>
        <String Id="6978">Digital output board is required to be connected, but no signal is detected.</String>
        <String Id="6979">Unit Code Missing</String>
        <String Id="6980">Unit code has not been entered and saved.</String>
        <String Id="6981">Unit Communication Lost</String>
        <String Id="6982">Master has lost communication with one or more networked units.</String>
        <!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
        <String Id="6983">Distribution Panel Type</String>
        <String Id="6984">The identifier of the physical layout of the electrical distribution panel.</String>
        <String Id="6985">1 column 30 pole</String>
        <String Id="6986">2 column 42 pole</String>
        <String Id="6987">2 column 54 pole</String>
        <String Id="6988">2 column 72 pole</String>
        <String Id="6989">2 column 84 pole</String>
        <String Id="6990">Breaker position</String>
        <String Id="6991">The position in the panel of the breaker of a branch. Lowest number if multi-phase.</String>
        <!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
        <String Id="6992">Overtemperature Power Off</String>
        <String Id="6993">Power turned off because equipment over temperature limit</String>
        <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
        <String Id="6994">Too Many Sensors</String>
        <String Id="6995">The number of sensors connected to the PDU exceeds the allowable limit</String>
        <String Id="6996">Module Type</String>
        <String Id="6997">Module Type</String>
        <String Id="6998">Rack PDU Card</String>
        <String Id="6999">Auxiliary Sensor</String>
        <String Id="7000">Sensor Serial Number</String>
        <String Id="7001">The sensor's globally unique serial number assigned at the time of manufacture</String>
        <String Id="7002">Temperature Sensor User Assigned Label</String>
        <String Id="7003">The user assigned temperature sensor label</String>
        <String Id="7004">Temperature Sensor Asset Tag 01</String>
        <String Id="7005">User assigned temperature sensor asset tag 01</String>
        <String Id="7006">Temperature Sensor Asset Tag 02</String>
        <String Id="7007">User assigned temperature sensor asset tag 02</String>
        <String Id="7008">Relative Humidity Sensor User Assigned Label</String>
        <String Id="7009">The user assigned relative humidity sensor label</String>
        <String Id="7010">Relative Humidity Sensor Asset Tag 01</String>
        <String Id="7011">User assigned relative humidity sensor asset tag 01</String>
        <String Id="7012">Relative Humidity Sensor Asset Tag 02</String>
        <String Id="7013">User assigned relative humidity sensor asset tag 02</String>
        <!-- Machine transferred from FDM 'pm4_hmi_fdm.xml' via Fdm2Xml.exe -->
        <String Id="7014">Transformer Overtemperature Power Off</String>
        <String Id="7015">Output power shutdown due to high transformer temperature</String>
        <String Id="7016">Transformer temperature has exceeded the limit</String>
        <String Id="7017">Transformer Temperature Sensor Fail</String>
        <String Id="7018">Transformer temperature sensor has failed</String>
        <!-- Machine transferred from FDM 'bdsu.xml' via Fdm2Xml.exe -->
        <String Id="7019">Battery String Alarm Reset or Acknowledge</String>
        <String Id="7020">Initiates a reset/clear or acknowledgement of all alarms on a battery-string and its associated cells.</String>
        <String Id="7021">Low Ambient Temperature Probe Two</String>
        <String Id="7022">The system has detected a low ambient temperature condition on temperature probe 2.</String>
        <String Id="7023">High Ambient Temperature Probe Two</String>
        <String Id="7024">The system has detected a high ambient temperature condition on temperature probe 2.</String>
        <String Id="7025">Thermal Runaway Detected</String>
        <String Id="7026">The system has detected a thermal runaway condition.</String>
        <String Id="7027">Battery String Equalize</String>
        <String Id="7028">The system has detected a battery string equalize condition.</String>
        <String Id="7029">Battery String Offline</String>
        <String Id="7030">The system has detected the battery string is offline.</String>
        <String Id="7031">Battery String Commissioned Status</String>
        <String Id="7032">Current commissioned status of battery string.</String>
        <String Id="7033">Not Commissioned</String>
        <String Id="7034">Commissioned</String>
        <String Id="7035">Discharge Low Cell Voltage</String>
        <String Id="7036">Internal Resistance Value</String>
        <String Id="7037">The measured internal resistance of a cell.</String>
        <String Id="7038">Intercell Resistance Value</String>
        <String Id="7039">The total resistance of the connection between the terminals of two cells that are electrically connected to each other.</String>
        <!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
        <String Id="7040">Infrared Humidifier Flush Rate</String>
        <String Id="7041">A multiple of an internal time constant that determines the flush duration of the infrared humidifier water pan.</String>
        <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
        <String Id="7042">Total kW Hours Saved</String>
        <String Id="7043">Total kW hours saved by ECO Mode or Intelligent Paralleling.</String>
        <String Id="7044">MMS Power Sharing</String>
        <String Id="7045">A module is not sharing power with the other modules in a multi-module system.</String>
        <String Id="7046">Intelligent Parallel Operation State</String>
        <String Id="7047">This setting is used to enable or disable Intelligent Paralleling.</String>
        <String Id="7048">Intelligent Parallel Mode</String>
        <String Id="7049">This setting gives the user the ability to choose between different energy consumption modes while Intelligent Paralleling is active and module is in standby.</String>
        <String Id="7050">Idle (Fast Recovery)</String>
        <String Id="7051">Disconnect (More Efficient)</String>
        <String Id="7052">Off (Most Efficient)</String>
        <String Id="7053">Intelligent Paralleling Shutdown Delay</String>
        <String Id="7054">This is the length of time the conditions for module standby must remain satisfied before the module goes into standby.</String>
        <String Id="7055">Intelligent Parallel Minimum Redundancy</String>
        <String Id="7056">This is the minimum Number of Redundant Modules that the system will allow before bringing one or more modules back to normal operation and terminating Intelligent Paralleling.</String>
        <String Id="7057">Intelligent Parallel Maximum Time in Standby</String>
        <String Id="7058">The maximum time a module can be in standby mode due to Intelligent Paralleling.</String>
        <String Id="7059">Module In Standby - Intelligent Paralleling</String>
        <String Id="7060">Module is placed into standby operation per Intelligent Paralleling.</String>
        <String Id="7061">ECO Mode Operation State</String>
        <String Id="7062">This setting is used to enable or disable ECO Mode.</String>
        <String Id="7063">Continuous Operation - ECO Mode</String>
        <String Id="7064">This setting gives the user the ability to Enable/Disable ECO Mode continuous operation.</String>
        <String Id="7065">ECO Mode Active</String>
        <String Id="7066">Conditions for Activation or Automatic Reactivation have been satisfied.</String>
        <String Id="7067">ECO Mode Suspended</String>
        <String Id="7068">ECO Mode session is suspended.</String>
        <String Id="7069">Excess ECO Suspends</String>
        <String Id="7070">Number of automatic suspensions has exceeded the ECO Mode - Maximum Auto Suspensions setting.</String>
        <String Id="7071">Maximum Auto Suspensions - ECO Mode</String>
        <String Id="7072">This setting sets the maximum number of automatic ECO Mode suspensions in a session.</String>
        <String Id="7073">Restart Delay - ECO Mode</String>
        <String Id="7074">The time delay that the conditions to activate ECO Mode must be satisfied before ECO Mode can be reactivated during an active session.</String>
        <String Id="7075">Schedule Operation State - ECO Mode</String>
        <String Id="7076">This setting gives the user the ability to either enable or disable a schedule entry if the action is Start.</String>
        <String Id="7077">Schedule Action - ECO Mode</String>
        <String Id="7078">This setting gives the user the ability to choose the action of a schedule entry to be either stop or start.</String>
        <String Id="7079">stop</String>
        <String Id="7080">start</String>
        <String Id="7081">Schedule Day of Week - ECO Mode</String>
        <String Id="7082">This setting represents the day of the week when an associated ECO Mode schedule entry action will take effect.</String>
        <String Id="7083">Monday</String>
        <String Id="7084">Tuesday</String>
        <String Id="7085">Wednesday</String>
        <String Id="7086">Thursday</String>
        <String Id="7087">Friday</String>
        <String Id="7088">Saturday</String>
        <String Id="7089">Sunday</String>
        <String Id="7090">Schedule Hour - ECO Mode</String>
        <String Id="7091">This setting represents the hour of the day when an associated schedule entry action will take effect.</String>
        <String Id="7092">Schedule Minute - ECO Mode</String>
        <String Id="7093">This setting represents the minute of the hour when an associated schedule entry action will take effect.</String>
        <String Id="7094">Time Remaining - ECO Mode</String>
        <String Id="7095">Time remaining before current active ECO Mode session stops.</String>
        <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
        <String Id="7096">Auxiliary Sensor Measurement Type</String>
        <String Id="7097">Auxiliary Sensor Measurement Type</String>
        <String Id="7098">Unknown</String>
        <String Id="7099">Temperature</String>
        <String Id="7100">Relative Humidity</String>
        <String Id="7101">Door Closure</String>
        <String Id="7102">Contact Closure</String>
        <String Id="7103">Sensor Measurement Visible</String>
        <String Id="7104">User setting to populate or depopulate reports for detected door or contact closure sensor data objects</String>
        <String Id="7105">hide all measurements</String>
        <String Id="7106">Show position 1 measurement</String>
        <String Id="7107">Show position 2 measurement</String>
        <String Id="7108">Show position 3 measurement</String>
        <String Id="7109">Show position 4 measurement</String>
        <String Id="7110">Show position 5 measurement</String>
        <String Id="7111">Show position 6 measurement</String>
        <String Id="7112">Show position 7 measurement</String>
        <String Id="7113">Show position 8 measurement</String>
        <String Id="7114">Measurement Position</String>
        <String Id="7115">A one-based number indicating the position of this measurement input within a sensor module</String>
        <String Id="7116">Door Closure State</String>
        <String Id="7117">Indicates if the door is closed</String>
        <String Id="7118">Unknown</String>
        <String Id="7119">Open</String>
        <String Id="7120">Closed</String>
        <String Id="7121">Disconnected</String>
        <String Id="7122">Door Open</String>
        <String Id="7123">An open door was detected</String>
        <String Id="7124">Door Sensor Disconnected</String>
        <String Id="7125">Door sensor disconnect detected</String>
        <String Id="7126">Door Closure Sensor User Assigned Label</String>
        <String Id="7127">The user assigned door closure sensor label</String>
        <String Id="7128">Door Closure Sensor Asset Tag 01</String>
        <String Id="7129">User assigned door closure sensor asset tag 01</String>
        <String Id="7130">Door Closure Sensor Asset Tag 02</String>
        <String Id="7131">User assigned door closure sensor asset tag 02</String>
        <String Id="7132">Door Closure State Alarm Config</String>
        <String Id="7133">Door Closure State Alarm Configuration</String>
        <String Id="7134">None</String>
        <String Id="7135">Alarm when open</String>
        <String Id="7136">Alarm when disconnected</String>
        <String Id="7137">Measurement Position</String>
        <String Id="7138">A one-based number indicating the position of this measurement input within a sensor module</String>
        <String Id="7139">Contact Closure State</String>
        <String Id="7140">Indicates the closure of a circuit</String>
        <String Id="7141">Unknown</String>
        <String Id="7142">Open</String>
        <String Id="7143">Closed</String>
        <String Id="7144">Contact Closure Open</String>
        <String Id="7145">An open circuit was detected</String>
        <String Id="7146">Contact Closure Closed</String>
        <String Id="7147">A closed circuit was detected</String>
        <String Id="7148">Contact Closure Sensor User Assigned Label</String>
        <String Id="7149">The user assigned contact closure sensor label</String>
        <String Id="7150">Contact Closure Sensor Asset Tag 01</String>
        <String Id="7151">User assigned contact closure sensor asset tag 01</String>
        <String Id="7152">Contact Closure Sensor Asset Tag 02</String>
        <String Id="7153">User assigned contact closure sensor asset tag 02</String>
        <String Id="7154">Contact Closure State Alarm Config</String>
        <String Id="7155">Contact Closure State Alarm Configuration</String>
        <String Id="7156">None</String>
        <String Id="7157">Alarm when open</String>
        <String Id="7158">Alarm when closed</String>
        <!-- Machine transferred from FDM 'iCOM_XP.xml' via Fdm2Xml.exe -->
        <String Id="7159">Position Label</String>
        <String Id="7160">This is the user assigned label indicating the position of the device.</String>
        <String Id="7161">Communication Status</String>
        <String Id="7162">Communication status of remote device.</String>
        <String Id="7163">Connected</String>
        <String Id="7164">Not Connected</String>
        <String Id="7165">Fan On/Off Control</String>
        <String Id="7166">Turn system fans on or off.</String>
        <String Id="7167">Fan Button Control</String>
        <String Id="7168">Enable or disable the buttons from controlling the state of the fans.</String>
        <String Id="7169">enabled</String>
        <String Id="7170">disabled</String>
        <String Id="7171">Visual ID Control</String>
        <String Id="7172">Visual identification control to display an LED flashing sequence, allowing it to be visually located.</String>
        <String Id="7173">Cooling Capacity</String>
        <String Id="7174">Cooling capacity in use, expressed as a percentage of the maximum rated capacity.</String>
        <String Id="7175">Cooling Capacity</String>
        <String Id="7176">Cooling capacity in use, expressed in kilowatts.</String>
        <String Id="7177">Ext System Condensation Detected</String>
        <String Id="7178">External system condensation detected.</String>
        <String Id="7179">Ext System Condensation Detected - Event Control</String>
        <String Id="7180">Enable/disable the activation of the [Ext System Condensation Detected] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="7181">Ext System Condensation Detected - Event Type</String>
        <String Id="7182">The event type for the [Ext System Condensation Detected] event.</String>
        <String Id="7183">Ext Fan Issue</String>
        <String Id="7184">One or more fans are not operating within their operational parameters.</String>
        <String Id="7185">Ext Fan Issue - Event Control</String>
        <String Id="7186">Enable/disable the activation of the [Ext Fan Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="7187">Ext Fan Issue - Event Type</String>
        <String Id="7188">The event type for the [Ext Fan Issue] event.</String>
        <String Id="7189">Remote Sensor Issue - Event Control</String>
        <String Id="7190">Enable/disable the activation of the [Remote Sensor Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="7191">Remote Sensor Issue - Event Type</String>
        <String Id="7192">The event type for the [Remote Sensor Issue] event.</String>
        <String Id="7193">Ext Remote Shutdown</String>
        <String Id="7194">Unit is shut down by a remote signal.</String>
        <String Id="7195">Ext Remote Shutdown - Event Control</String>
        <String Id="7196">Enable/disable the activation of the [Remote Shutdown] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.</String>
        <String Id="7197">Ext Remote Shutdown - Event Type</String>
        <String Id="7198">The event type for the [Remote Shutdown] event.</String>
        <String Id="7199">Hot Aisle Over Temp Threshold</String>
        <String Id="7200">Upper threshold value used in the [Hot Aisle Temp Out of Range] event.</String>
        <String Id="7201">Hot Aisle Under Temp Threshold</String>
        <String Id="7202">Lower threshold value used in the [Hot Aisle Temp Out of Range] event.</String>
        <String Id="7203">Hot Aisle Temp Out of Range</String>
        <String Id="7204">The air temperature in the Hot aisle is either above [Hot Aisle Over Temp Threshold] or below [Hot Aisle Under Temp Threshold].</String>
        <String Id="7205">Cold Aisle Over Temp Threshold</String>
        <String Id="7206">Upper threshold value used in the [Cold Aisle Temp Out of Range] event.</String>
        <String Id="7207">Cold Aisle Under Temp Threshold</String>
        <String Id="7208">Lower threshold value used in the [Cold Aisle Temp Out of Range] event.</String>
        <String Id="7209">Cold Aisle Temp Out of Range</String>
        <String Id="7210">The air temperature in the cold aisle is either above [Cold Aisle Over Temp Threshold] or below [Cold Aisle Under Temp Threshold].</String>
        <String Id="7211">Fan Group A State</String>
        <String Id="7212">Current operational state of a group of fans.</String>
        <String Id="7213">economy</String>
        <String Id="7214">Fan Group B State</String>
        <String Id="7215">Current operational state of a group of fans.</String>
        <String Id="7216">Fan Economy Mode</String>
        <String Id="7217">Mode in which system secondary fans are to be controlled.</String>
        <String Id="7218">automatic</String>
        <String Id="7219">manual</String>
        <String Id="7220">Remote Shutdown</String>
        <String Id="7221">Unit is shut down by a remote signal.</String>
        <!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
        <String Id="7222">Compressor Capacity Reduced</String>
        <String Id="7223">Compressor capacity has been reduced.</String>
        <String Id="7224">Compressor Low Pressure Transducer Issue</String>
        <String Id="7225">Compressor low pressure transducer is disconnected or the signal is out of range.</String>

    </GlobalStringDefinitions>
    <SpecialDefn Id="4096" Name="unknown">
        <EngineeringDescription>Use this to indicate a general (i.e. non-specific) measurement error.</EngineeringDescription>
        <EngineeringReference/>
        <TextId>4096</TextId>
    </SpecialDefn>
    <SpecialDefn Id="4097" Name="noSupport">
        <EngineeringDescription>Use this to convey a data point is not currently supported and cannot be read (or written).  This point will not become available without a server signal that something significant has occurred such as a reboot, server reset, or session reset.  It is envisioned and expected that the data point will NOT be shown to the end user, via clients.  Note: This is different than special value Unavailable</EngineeringDescription>
        <EngineeringReference/>
        <TextId>4265</TextId>
    </SpecialDefn>
    <SpecialDefn Id="4098" Name="unavailable">
        <EngineeringDescription>Use this to convey that a data point value is not currently applicable (i.e. it has no meaning at this time, or cannot be calculated, etc.).  However, this point may become available at some point in the future without the need of a reboot, server reset, or session reset.  This should be signalled by a COV.  It is envisioned and expected that the data point will be shown to the end user, via clients, in a disabled state.  Note: This is different than special value NoSupport.</EngineeringDescription>
        <EngineeringReference/>
        <TextId>4266</TextId>
    </SpecialDefn>
    <SpecialDefn Id="4099" Name="overflow">
        <EngineeringDescription>Use this to convey a measurement error such as an A/D overflow.</EngineeringDescription>
        <EngineeringReference/>
        <TextId>4267</TextId>
    </SpecialDefn>
    <SpecialDefn Id="4100" Name="underflow">
        <EngineeringDescription>Use this to convey a measurement error such as an A/D underflow.</EngineeringDescription>
        <EngineeringReference/>
        <TextId>4268</TextId>
    </SpecialDefn>
    <EnumStateDefn Id="4096" Name="eventState">
        <EnumState Value="0">4200</EnumState>
        <EnumState Value="1">4201</EnumState>
        <EnumState Value="2">4202</EnumState>
        <EnumState Value="3">4203</EnumState>
        <EnumState Value="4">4204</EnumState>
        <EnumState Value="5">4205</EnumState>
        <EnumState Value="6">4206</EnumState>
        <EnumState Value="7">4207</EnumState>
        <EnumState Value="8">4208</EnumState>
        <EnumState Value="15">4209</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4097" Name="eventPriority">
        <EnumState Value="0">4210</EnumState>
        <EnumState Value="1">4211</EnumState>
        <EnumState Value="3">4212</EnumState>
        <EnumState Value="5">4213</EnumState>
        <EnumState Value="7">4214</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4098" Name="eventSeverity">
        <EnumState Value="0">4215</EnumState>
        <EnumState Value="1">4216</EnumState>
        <EnumState Value="2">4217</EnumState>
        <EnumState Value="3">4218</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4099" Name="leadLag">
        <EnumState Value="1">4160</EnumState>
        <EnumState Value="2">4161</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4100" Name="onOff">
        <EnumState Value="0">4098</EnumState>
        <EnumState Value="1">4097</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4101" Name="trueFalse">
        <EnumState Value="0">4100</EnumState>
        <EnumState Value="1">4099</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4102" Name="enableDisable">
        <EnumState Value="0">4102</EnumState>
        <EnumState Value="1">4101</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4103" Name="groupStatus">
        <EnumState Value="1">4204</EnumState>
        <EnumState Value="2">4205</EnumState>
        <EnumState Value="4">4206</EnumState>
        <EnumState Value="8">4207</EnumState>
        <EnumState Value="16">4208</EnumState>
        <EnumState Value="32">4209</EnumState>
        <EnumState Value="64">4210</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4104" Name="systemStatus">
        <EnumState Value="1">4204</EnumState>
        <EnumState Value="2">4205</EnumState>
        <EnumState Value="8">4207</EnumState>
        <EnumState Value="16">4208</EnumState>
        <EnumState Value="32">4209</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4105" Name="NotInstalled_vs_Installed">
        <EnumState Value="0">4499</EnumState>
        <EnumState Value="1">4500</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4106" Name="RectifierPulseCount">
        <EnumState Value="0">4507</EnumState>
        <EnumState Value="1">4508</EnumState>
        <EnumState Value="2">4509</EnumState>
        <EnumState Value="3">4510</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4107" Name="UpsModuleConfigType">
        <EnumState Value="0">4511</EnumState>
        <EnumState Value="1">4512</EnumState>
        <EnumState Value="2">4513</EnumState>
        <EnumState Value="3">4514</EnumState>
        <EnumState Value="4">4515</EnumState>
        <EnumState Value="5">4516</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4108" Name="MultiPhaseWireCount">
        <EnumState Value="0">4517</EnumState>
        <EnumState Value="1">4518</EnumState>
        <EnumState Value="2">4519</EnumState>
        <EnumState Value="3">4520</EnumState>
        <EnumState Value="4">4521</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4109" Name="UpsStaticSwitchType">
        <EnumState Value="0">4522</EnumState>
        <EnumState Value="1">4523</EnumState>
        <EnumState Value="2">4524</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4110" Name="UpsOutputSource">
        <EnumState Value="0">4525</EnumState>
        <EnumState Value="1">4526</EnumState>
        <EnumState Value="2">4527</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4111" Name="UpsInputSource">
        <EnumState Value="0">4529</EnumState>
        <EnumState Value="1">4530</EnumState>
        <EnumState Value="2">4531</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4112" Name="LoadSource">
        <EnumState Value="0">4635</EnumState>
        <EnumState Value="1">4532</EnumState>
        <EnumState Value="2">4528</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4113" Name="StateFailure">
        <EnumState Value="0">4656</EnumState>
        <EnumState Value="1">4657</EnumState>
        <EnumState Value="2">4658</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4114" Name="RedundantStatus">
        <EnumState Value="0">4659</EnumState>
        <EnumState Value="1">4660</EnumState>
        <EnumState Value="2">4661</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4115" Name="CapacityStatus">
        <EnumState Value="0">4662</EnumState>
        <EnumState Value="1">4663</EnumState>
        <EnumState Value="2">4664</EnumState>
    </EnumStateDefn>
    <!-- Started to add MPX related items -->
    <EnumStateDefn Id="4116" Name="rcpType">
        <EnumState Value="0">4705</EnumState>
        <EnumState Value="1">4706</EnumState>
        <EnumState Value="2">4707</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4117" Name="rcpLineSource">
        <EnumState Value="0">4710</EnumState>
        <EnumState Value="1">4711</EnumState>
        <EnumState Value="2">4712</EnumState>
        <EnumState Value="3">4713</EnumState>
        <EnumState Value="4">4714</EnumState>
        <EnumState Value="5">4715</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4118" Name="rcpCapabilities">
        <EnumState Value="0">4718</EnumState>
        <EnumState Value="1">4719</EnumState>
        <EnumState Value="2">4720</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4119" Name="rcpState">
        <EnumState Value="0">4747</EnumState>
        <EnumState Value="1">4748</EnumState>
        <EnumState Value="2">4749</EnumState>
        <EnumState Value="3">4750</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4120" Name="rcpControl">
        <EnumState Value="0">4757</EnumState>
        <EnumState Value="1">4758</EnumState>
        <EnumState Value="2">4759</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4121" Name="rcpControlLock">
        <EnumState Value="0">4762</EnumState>
        <EnumState Value="1">4763</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4122" Name="pemWiringType">
        <EnumState Value="0">4874</EnumState>
        <EnumState Value="1">4875</EnumState>
        <EnumState Value="2">4876</EnumState>
        <EnumState Value="3">4877</EnumState>
    </EnumStateDefn>
    <EnumStateDefn Id="4123" Name="pduModuleType">
        <EnumState Value="0">4096</EnumState>
        <EnumState Value="1">5074</EnumState>
        <EnumState Value="2">5075</EnumState>
        <EnumState Value="3">5076</EnumState>
        <EnumState Value="4">5077</EnumState>
        <EnumState Value="5">5078</EnumState>
        <EnumState Value="6">5217</EnumState>   <!--  5217 => "Auxiliary Sensor String"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4124" Name="sysFactoryDefaults">
        <EnumState Value="0">5134</EnumState>
        <EnumState Value="1">5133</EnumState>
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'CoreInterfaces.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4125" Name="serverClass">
     <EnumState Value="1">5150</EnumState>   <!--  5150 => "UPS"  -->
     <EnumState Value="2">5151</EnumState>   <!--  5151 => "AIR"  -->
     <EnumState Value="3">5152</EnumState>   <!--  5152 => "PMP"  -->
     <EnumState Value="4">5153</EnumState>   <!--  5153 => "PDU"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4126" Name="SensorType">
     <EnumState Value="0">4096</EnumState>   <!--  4096 => ""  -->
     <EnumState Value="1">5178</EnumState>   <!--  5178 => "Temperature"  -->
     <EnumState Value="2">5179</EnumState>   <!--  5179 => "Relative Humidity"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'icom_xp.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4127" Name="eventType">
     <EnumState Value="0">5238</EnumState>   <!--  5238 => "Message"  -->
     <EnumState Value="1">5239</EnumState>   <!--  5239 => "Warning"  -->
     <EnumState Value="2">5240</EnumState>   <!--  5240 => "Alarm"  -->
     <EnumState Value="3">5478</EnumState>   <!--  5240 => "Failure"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4128" Name="closedOpen">
     <EnumState Value="0">5437</EnumState>   <!--  5437 => "closed"  -->
     <EnumState Value="1">5438</EnumState>   <!--  5438 => "open"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4129" Name="operatingState">
     <EnumState Value="0">5449</EnumState>   <!--  5449 => "off"  -->
     <EnumState Value="1">5450</EnumState>   <!--  5450 => "on"  -->
     <EnumState Value="2">5451</EnumState>   <!--  5451 => "standby"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4130" Name="autoManual">
     <EnumState Value="0">5454</EnumState>   <!--  5454 => "Internal (Auto)"  -->
     <EnumState Value="1">5455</EnumState>   <!--  5455 => "External (Manual)"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4131" Name="resetAck">
     <EnumState Value="2">5476</EnumState>   <!--  5476 => "Reset"  -->
     <EnumState Value="4">5477</EnumState>   <!--  5477 => "Acknowledge"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4132" Name="VoltageQualification">
     <EnumState Value="0">5515</EnumState>   <!--  5515 => "Fail"  -->
     <EnumState Value="1">5516</EnumState>   <!--  5516 => "Marginal Low"  -->
     <EnumState Value="2">5517</EnumState>   <!--  5517 => "Normal"  -->
     <EnumState Value="3">5518</EnumState>   <!--  5518 => "Marginal High"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4133" Name="ConfigurationType">
     <EnumState Value="0">5551</EnumState>   <!--  5551 => "Single Module System 33"  -->
     <EnumState Value="1">5552</EnumState>   <!--  5552 => "Single Module System 34"  -->
     <EnumState Value="2">5553</EnumState>   <!--  5553 => "Single Module System 44"  -->
     <EnumState Value="3">5554</EnumState>   <!--  5554 => "1+1 33"  -->
     <EnumState Value="4">5555</EnumState>   <!--  5555 => "1+1 34"  -->
     <EnumState Value="5">5556</EnumState>   <!--  5556 => "1+1 44"  -->
     <EnumState Value="6">5557</EnumState>   <!--  5557 => "1+N 33"  -->
     <EnumState Value="7">5558</EnumState>   <!--  5558 => "1+N 34"  -->
     <EnumState Value="8">5559</EnumState>   <!--  5559 => "1+N 44"  -->
     <EnumState Value="9">5560</EnumState>   <!--  5560 => "N+1 33"  -->
     <EnumState Value="10">5561</EnumState>   <!--  5561 => "N+1 34"  -->
     <EnumState Value="11">5562</EnumState>   <!--  5562 => "N+1 44"  -->
     <EnumState Value="12">5563</EnumState>   <!--  5563 => "SCC w/Continuous Duty SS 33"  -->
     <EnumState Value="13">5564</EnumState>   <!--  5564 => "SCC w/Continuous Duty SS 44"  -->
     <EnumState Value="14">5565</EnumState>   <!--  5565 => "SCC w/Momentary Duty SS"  -->
     <EnumState Value="15">5566</EnumState>   <!--  5566 => "Main Static Switch"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4134" Name="UpsSystemOutputSource">
     <EnumState Value="0">5569</EnumState>   <!--  5569 => "Off"  -->
     <EnumState Value="1">5570</EnumState>   <!--  5570 => "Normal"  -->
     <EnumState Value="2">5571</EnumState>   <!--  5571 => "Bypass"  -->
     <EnumState Value="3">5572</EnumState>   <!--  5572 => "Maintenance Bypass"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4135" Name="openClose">
     <EnumState Value="0">5597</EnumState>   <!--  5597 => "Open"  -->
     <EnumState Value="1">5598</EnumState>   <!--  5598 => "Close"  -->
     <EnumState Value="2">5599</EnumState>   <!--  5599 => "Not Installed"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4136" Name="SwitchOnOff">
     <EnumState Value="0">5620</EnumState>   <!--  5620 => "Off"  -->
     <EnumState Value="1">5621</EnumState>   <!--  5621 => "On"  -->
     <EnumState Value="2">5622</EnumState>   <!--  5622 => "Not Installed"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4137" Name="eventSummary">
     <EnumState Value="0">5782</EnumState>   <!--  5782 => "None"  -->
     <EnumState Value="1">5783</EnumState>   <!--  5783 => "Alarm"  -->
     <EnumState Value="2">5784</EnumState>   <!--  5784 => "Fault"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4138" Name="commSummary">
     <EnumState Value="0">5787</EnumState>   <!--  5787 => "Failed"  -->
     <EnumState Value="1">5788</EnumState>   <!--  5788 => "Normal"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'RaptrHMI-090325.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4139" Name="OnBattStatus">
     <EnumState Value="1">5820</EnumState>   <!--  5820 => "Unknown"  -->
     <EnumState Value="2">5821</EnumState>   <!--  5821 => "Normal"  -->
     <EnumState Value="3">5822</EnumState>   <!--  5822 => "Low"  -->
     <EnumState Value="4">5823</EnumState>   <!--  5823 => "Depleted"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4140" Name="UpsOutputStatus">
     <EnumState Value="1">5826</EnumState>   <!--  5826 => "Other"  -->
     <EnumState Value="2">5827</EnumState>   <!--  5827 => "Off"  -->
     <EnumState Value="3">5828</EnumState>   <!--  5828 => "Normal"  -->
     <EnumState Value="4">5829</EnumState>   <!--  5829 => "Bypass"  -->
     <EnumState Value="5">5830</EnumState>   <!--  5830 => "Battery"  -->
     <EnumState Value="6">5831</EnumState>   <!--  5831 => "Booster"  -->
     <EnumState Value="7">5832</EnumState>   <!--  5832 => "Reducer"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'BDSU.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4141" Name="progressStatus">
     <EnumState Value="0">5977</EnumState>   <!--  5977 => "Not In Progress"  -->
     <EnumState Value="1">5978</EnumState>   <!--  5978 => "In Progress"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'iCOM_CR.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4142" Name="tempControlSensor">
     <EnumState Value="0">6115</EnumState>   <!--  6115 => "Supply"  -->
     <EnumState Value="1">6116</EnumState>   <!--  6116 => "Remote"  -->
     <EnumState Value="2">6117</EnumState>   <!--  6117 => "Return"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4143" Name="sensorTempCalc">
     <EnumState Value="0">6120</EnumState>   <!--  6120 => "Average"  -->
     <EnumState Value="1">6121</EnumState>   <!--  6121 => "Maximum"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4144" Name="remSnsrFunc">
     <EnumState Value="0">6212</EnumState>   <!--  6212 => "Disable"  -->
     <EnumState Value="1">6213</EnumState>   <!--  6213 => "Reference"  -->
     <EnumState Value="2">6214</EnumState>   <!--  6214 => "Control"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4145" Name="opStateReason">
     <EnumState Value="0">6247</EnumState>   <!--  6247 => "Reason Unknown"  -->
     <EnumState Value="1">6248</EnumState>   <!--  6248 => "Network Display"  -->
     <EnumState Value="2">6249</EnumState>   <!--  6249 => "Alarm"  -->
     <EnumState Value="3">6250</EnumState>   <!--  6250 => "Schedule"  -->
     <EnumState Value="4">6251</EnumState>   <!--  6251 => "Remote System"  -->
     <EnumState Value="5">6252</EnumState>   <!--  6252 => "External Input"  -->
     <EnumState Value="6">6253</EnumState>   <!--  6253 => "Local Display"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4146" Name="rcpTypeExtended">
     <EnumState Value="0">6609</EnumState>   <!--  6609 => "unknown"  -->
     <EnumState Value="1">6610</EnumState>   <!--  6610 => "NEMA 5-15R"  -->
     <EnumState Value="2">6611</EnumState>   <!--  6611 => "NEMA 5-20R"  -->
     <EnumState Value="4">6612</EnumState>   <!--  6612 => "NEMA L5-20R"  -->
     <EnumState Value="8">6613</EnumState>   <!--  6613 => "NEMA L5-30R"  -->
     <EnumState Value="16">6614</EnumState>   <!--  6614 => "NEMA L6-20R"  -->
     <EnumState Value="32">6615</EnumState>   <!--  6615 => "NEMA L6-30R"  -->
     <EnumState Value="64">6616</EnumState>   <!--  6616 => "IEC 60320 Sheet F C13"  -->
     <EnumState Value="128">6617</EnumState>   <!--  6617 => "IEC 60320 Sheet J C19"  -->
     <EnumState Value="256">6618</EnumState>   <!--  6618 => "SEV 1011 Type 12 (Swiss)"  -->
     <EnumState Value="512">6619</EnumState>   <!--  6619 => "SEV 1011 Type 23 (Swiss)"  -->
     <EnumState Value="1024">6620</EnumState>   <!--  6620 => "BS 1363 Type G (British)"  -->
     <EnumState Value="2048">6621</EnumState>   <!--  6621 => "CEE 7 Type F (Schuko)"  -->
     <EnumState Value="4096">6622</EnumState>   <!--  6622 => "CEE 7 Type E (French)"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4147" Name="lineSources">
     <EnumState Value="0">6639</EnumState>   <!--  6639 => "unknown"  -->
     <EnumState Value="1">6640</EnumState>   <!--  6640 => "Type L1-N"  -->
     <EnumState Value="2">6641</EnumState>   <!--  6641 => "Type L2-N"  -->
     <EnumState Value="4">6642</EnumState>   <!--  6642 => "Type L3-N"  -->
     <EnumState Value="8">6643</EnumState>   <!--  6643 => "Type L1-L2"  -->
     <EnumState Value="16">6644</EnumState>   <!--  6644 => "Type L2-L3"  -->
     <EnumState Value="32">6645</EnumState>   <!--  6645 => "Type L3-L1"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'iCOM_SC.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4148" Name="freeCoolStatus">
     <EnumState Value="0">4098</EnumState>   <!--  4098 => "off"  -->
     <EnumState Value="2">4097</EnumState>   <!--  4097 => "on"  -->
     <EnumState Value="3">4265</EnumState>   <!--  4265 => "No Support"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4149" Name="DeviceCapabilitiesExtended">
     <EnumState Value="0">6768</EnumState>   <!--  6768 => "None"  -->
     <EnumState Value="1">6769</EnumState>   <!--  6769 => "Current Measurement Only"  -->
     <EnumState Value="2">6770</EnumState>   <!--  6770 => "All Measurements"  -->
     <EnumState Value="4">6771</EnumState>   <!--  6771 => "Control"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4150" Name="AirTempControlType">
     <EnumState Value="0">6776</EnumState>   <!--  6776 => "Proportional"  -->
     <EnumState Value="1">6777</EnumState>   <!--  6777 => "Prop+Integral"  -->
     <EnumState Value="3">6778</EnumState>   <!--  6778 => "Intelligent"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4151" Name="SuppAirTempSensSupAC">
     <EnumState Value="0">6795</EnumState>   <!--  6795 => "Disabled"  -->
     <EnumState Value="1">6796</EnumState>   <!--  6796 => "Limit"  -->
     <EnumState Value="2">6797</EnumState>   <!--  6797 => "Control"  -->
     <EnumState Value="3">6798</EnumState>   <!--  6798 => "Temp Only"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4152" Name="HumPropContType">
     <EnumState Value="0">6815</EnumState>   <!--  6815 => "Relative"  -->
     <EnumState Value="1">6816</EnumState>   <!--  6816 => "Compensated"  -->
     <EnumState Value="2">6817</EnumState>   <!--  6817 => "Predictive"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4153" Name="FC_InternalControlMode">
     <EnumState Value="0">6852</EnumState>   <!--  6852 => "Disabled"  -->
     <EnumState Value="1">6853</EnumState>   <!--  6853 => "Contact"  -->
     <EnumState Value="2">6854</EnumState>   <!--  6854 => "Value"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4154" Name="FanControlMode">
     <EnumState Value="0">6887</EnumState>   <!--  6887 => "Auto"  -->
     <EnumState Value="1">6888</EnumState>   <!--  6888 => "Manual"  -->
     <EnumState Value="2">6889</EnumState>   <!--  6889 => "Economy"  -->
     <EnumState Value="4">6890</EnumState>   <!--  6890 => "Delta"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4155" Name="DistributionPanelType">
     <EnumState Value="1">6985</EnumState>   <!--  6985 => "1 column 30 pole"  -->
     <EnumState Value="2">6986</EnumState>   <!--  6986 => "2 column 42 pole"  -->
     <EnumState Value="3">6987</EnumState>   <!--  6987 => "2 column 54 pole"  -->
     <EnumState Value="4">6988</EnumState>   <!--  6988 => "2 column 72 pole"  -->
     <EnumState Value="5">6989</EnumState>   <!--  6989 => "2 column 84 pole"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4156" Name="pduModuleTypeExtended">
     <EnumState Value="0">4096</EnumState>
     <EnumState Value="1">5074</EnumState>
     <EnumState Value="2">5075</EnumState>
     <EnumState Value="3">5076</EnumState>
     <EnumState Value="4">5077</EnumState>
     <EnumState Value="5">6998</EnumState>   <!--  6998 => "Rack PDU Card"  -->
     <EnumState Value="6">6999</EnumState>   <!--  6999 => "Auxiliary Sensor"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'bdsu.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4157" Name="CommissionStatus">
     <EnumState Value="0">7033</EnumState>   <!--  7033 => "Not Commissioned"  -->
     <EnumState Value="1">7034</EnumState>   <!--  7034 => "Commissioned"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4158" Name="ipMode">
     <EnumState Value="0">7050</EnumState>   <!--  7050 => "Idle (Fast Recovery)"  -->
     <EnumState Value="1">7051</EnumState>   <!--  7051 => "Disconnect (More Efficient)"  -->
     <EnumState Value="2">7052</EnumState>   <!--  7052 => "Off (Most Efficient)"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4159" Name="stopStart">
     <EnumState Value="0">7079</EnumState>   <!--  7079 => "stop"  -->
     <EnumState Value="1">7080</EnumState>   <!--  7080 => "start"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4160" Name="DayOfWeek">
     <EnumState Value="0">4662</EnumState>
     <EnumState Value="1">7083</EnumState>   <!--  7083 => "Monday"  -->
     <EnumState Value="2">7084</EnumState>   <!--  7084 => "Tuesday"  -->
     <EnumState Value="3">7085</EnumState>   <!--  7085 => "Wednesday"  -->
     <EnumState Value="4">7086</EnumState>   <!--  7086 => "Thursday"  -->
     <EnumState Value="5">7087</EnumState>   <!--  7087 => "Friday"  -->
     <EnumState Value="6">7088</EnumState>   <!--  7088 => "Saturday"  -->
     <EnumState Value="7">7089</EnumState>   <!--  7089 => "Sunday"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4161" Name="SensorTypeExtended">
     <EnumState Value="0">7098</EnumState>   <!--  7098 => "Unknown"  -->
     <EnumState Value="1">7099</EnumState>   <!--  7099 => "Temperature"  -->
     <EnumState Value="2">7100</EnumState>   <!--  7100 => "Relative Humidity"  -->
     <EnumState Value="3">7101</EnumState>   <!--  7101 => "Door Closure"  -->
     <EnumState Value="4">7102</EnumState>   <!--  7102 => "Contact Closure"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4162" Name="MeasurementVisibleConfig">
     <EnumState Value="0">7105</EnumState>   <!--  7105 => "Hide all measurements"  -->
     <EnumState Value="1">7106</EnumState>   <!--  7106 => "Show position 1 measurement"  -->
     <EnumState Value="2">7107</EnumState>   <!--  7107 => "Show position 2 measurement"  -->
     <EnumState Value="4">7108</EnumState>   <!--  7108 => "Show position 3 measurement"  -->
     <EnumState Value="8">7109</EnumState>   <!--  7109 => "Show position 4 measurement"  -->
     <EnumState Value="16">7110</EnumState>   <!--  7110 => "Show position 5 measurement"  -->
     <EnumState Value="32">7111</EnumState>   <!--  7111 => "Show position 6 measurement"  -->
     <EnumState Value="64">7112</EnumState>   <!--  7112 => "Show position 7 measurement"  -->
     <EnumState Value="128">7113</EnumState>   <!--  7113 => "Show position 8 measurement"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4163" Name="DoorState">
     <EnumState Value="0">7118</EnumState>   <!--  7118 => "Unknown"  -->
     <EnumState Value="1">7119</EnumState>   <!--  7119 => "Open"  -->
     <EnumState Value="2">7120</EnumState>   <!--  7120 => "Closed"  -->
     <EnumState Value="3">7121</EnumState>   <!--  7121 => "Disconnected"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4164" Name="DoorAlarmConfig">
     <EnumState Value="0">7134</EnumState>   <!--  7134 => "None"  -->
     <EnumState Value="1">7135</EnumState>   <!--  7135 => "Alarm when open"  -->
     <EnumState Value="2">7136</EnumState>   <!--  7136 => "Alarm when disconnected"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4165" Name="ContactClosureState">
     <EnumState Value="0">7141</EnumState>   <!--  7141 => "Unknown"  -->
     <EnumState Value="1">7142</EnumState>   <!--  7142 => "Open"  -->
     <EnumState Value="2">7143</EnumState>   <!--  7143 => "Closed"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4166" Name="ContactClosureAlarmConfig">
     <EnumState Value="0">7156</EnumState>   <!--  7156 => "None"  -->
     <EnumState Value="1">7157</EnumState>   <!--  7157 => "Alarm when open"  -->
     <EnumState Value="2">7158</EnumState>   <!--  7158 => "Alarm when closed"  -->
    </EnumStateDefn>
    <!-- Machine transferred from FDM 'iCOM_XP.xml' via Fdm2Xml.exe -->
    <EnumStateDefn Id="4167" Name="connectStatus">
     <EnumState Value="0">7163</EnumState>   <!--  7163 => "Connected"  -->
     <EnumState Value="1">7164</EnumState>   <!--  7164 => "Not Connected"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4168" Name="disableEnable">
     <EnumState Value="0">7169</EnumState>   <!--  7169 => "enabled"  -->
     <EnumState Value="1">7170</EnumState>   <!--  7170 => "disabled"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4169" Name="offOnEcon">
     <EnumState Value="0">4098</EnumState>   <!--  4098 => ""  -->
     <EnumState Value="1">4097</EnumState>   <!--  4097 => ""  -->
     <EnumState Value="2">7213</EnumState>   <!--  7213 => "economy"  -->
    </EnumStateDefn>
    <EnumStateDefn Id="4170" Name="economyMode">
     <EnumState Value="0">4102</EnumState>   <!--  4102 => ""  -->
     <EnumState Value="1">7218</EnumState>   <!--  7218 => "automatic"  -->
     <EnumState Value="2">7219</EnumState>   <!--  7219 => "manual"  -->
    </EnumStateDefn>

    <UomDefn Id="4096" Name="milliSeconds" Description="1/1000 of a second." Category="Time">
        <Base>Second</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>4103</TextId>
    </UomDefn>
    <UomDefn Id="4097" Name="seconds" Description="Standard unit of time" Category="Time">
        <Base>Second</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4104</TextId>
    </UomDefn>
    <UomDefn Id="4098" Name="minutes" Description="60 seconds of time" Category="Time">
        <Base>Second</Base>
        <ToBase>gr(0) 60 *</ToBase>
        <FromBase>gr(0) 60 /</FromBase>
        <TextId>4105</TextId>
    </UomDefn>
    <UomDefn Id="4099" Name="hours" Description="60 minutes of time" Category="Time">
        <Base>Second</Base>
        <ToBase>gr(0) 3600 *</ToBase>
        <FromBase>gr(0) 3600 /</FromBase>
        <TextId>4106</TextId>
    </UomDefn>
    <UomDefn Id="4100" Name="voltsAcRms" Description="AC voltage measured using RMS (Root Mean Squared) detector" Category="Potential">
        <Base>VoltRMS</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4108</TextId>
    </UomDefn>
    <UomDefn Id="4101" Name="milliVoltsAcRms" Description="1/1000 of an AC volt using RMS(Root Mean Squared) detector" Category="Potential">
        <Base>VoltRMS</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>4109</TextId>
    </UomDefn>
    <UomDefn Id="4102" Name="voltsDc" Description="Volt DC (Average Voltage)" Category="Potential">
        <Base>VoltDC</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4110</TextId>
    </UomDefn>
    <UomDefn Id="4103" Name="milliVoltsDc" Description="1/1000 of a Volt DC (Average Voltage)" Category="Potential">
        <Base>VoltDC</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>4111</TextId>
    </UomDefn>
    <UomDefn Id="4104" Name="voltsPeak" Description="Maximum instantaneous amplitude in Volts" Category="Potential">
        <Base>VoltPeak</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4112</TextId>
    </UomDefn>
    <UomDefn Id="4105" Name="voltsPeakToPeak" Description="Difference between the maximum and minimum amplitudes" Category="Potential">
        <Base>VoltPeakToPeak</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4113</TextId>
    </UomDefn>
    <UomDefn Id="4106" Name="ampsAcRms" Description="AC current measured using RMS (Root Mean Squared) detector" Category="Current">
        <Base>AmpRMS</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4114</TextId>
    </UomDefn>
    <UomDefn Id="4107" Name="milliAmpsAcRms" Description="1/1000 of an AC ampere using RMS (Root Mean Squared) detector" Category="Current">
        <Base>AmpRMS</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>4115</TextId>
    </UomDefn>
    <UomDefn Id="4108" Name="ampsDc" Description="Amps DC (Average Current)" Category="Current">
        <Base>AmpDC</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4116</TextId>
    </UomDefn>
    <UomDefn Id="4109" Name="milliAmpsDc" Description="1/1000 of an Ampere DC (Average Current)" Category="Current">
        <Base>AmpDC</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>4117</TextId>
    </UomDefn>
    <UomDefn Id="4110" Name="voltAmps" Description="Apparent AC power (Volts * Amps)" Category="Power">
        <Base>VoltAmp</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4118</TextId>
    </UomDefn>
    <UomDefn Id="4111" Name="kiloVoltAmps" Description="Apparent AC power (Volts * Amps) scaled by 1,000" Category="Power">
        <Base>VoltAmp</Base>
        <ToBase>gr(0) 1000 *</ToBase>
        <FromBase>gr(0) 1000 /</FromBase>
        <TextId>4119</TextId>
    </UomDefn>
    <UomDefn Id="4112" Name="VAReactive" Description="Reactive AC power" Category="Power">
        <Base>VoltAmpReactive</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4120</TextId>
    </UomDefn>
    <UomDefn Id="4113" Name="kVAReactive" Description="Reactive AC power scaled by 1,000" Category="Power">
        <Base>VoltAmpReactive</Base>
        <ToBase>gr(0) 1000 *</ToBase>
        <FromBase>gr(0) 1000 /</FromBase>
        <TextId>4121</TextId>
    </UomDefn>
    <UomDefn Id="4114" Name="watts" Description="Real AC power" Category="Power">
        <Base>Watt</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4122</TextId>
    </UomDefn>
    <UomDefn Id="4115" Name="kiloWatts" Description="Real AC power scaled by 1,000" Category="Power">
        <Base>Watt</Base>
        <ToBase>gr(0) 1000 *</ToBase>
        <FromBase>gr(0) 1000 /</FromBase>
        <TextId>4123</TextId>
    </UomDefn>
    <UomDefn Id="4116" Name="wattHours" Description="Real Power * Time" Category="Energy">
        <Base>WattHour</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4124</TextId>
    </UomDefn>
    <UomDefn Id="4117" Name="kiloWattHours" Description="(Real Power * Time) scaled by 1,000" Category="Energy">
        <Base>WattHour</Base>
        <ToBase>gr(0) 1000 *</ToBase>
        <FromBase>gr(0) 1000 /</FromBase>
        <TextId>4125</TextId>
    </UomDefn>
    <UomDefn Id="4118" Name="ampDcHours" Description="DC amps * hours" Category="Capacity">
        <Base>AmpHour</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4126</TextId>
    </UomDefn>
    <UomDefn Id="4119" Name="Hertz" Description="Standard unit for frequency" Category="Frequency">
        <Base>Hertz</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4127</TextId>
    </UomDefn>
    <UomDefn Id="4120" Name="milliHertz" Description="1/1000 of a Hertz" Category="Frequency">
        <Base>Hertz</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>4128</TextId>
    </UomDefn>
    <UomDefn Id="4121" Name="kiloHertz" Description="Hertz scaled by 1,000" Category="Frequency">
        <Base>Hertz</Base>
        <ToBase>gr(0) 1000 *</ToBase>
        <FromBase>gr(0) 1000 /</FromBase>
        <TextId>4129</TextId>
    </UomDefn>
    <UomDefn Id="4122" Name="megaHertz" Description="Hertz scaled by 1,000,000" Category="Frequency">
        <Base>Hertz</Base>
        <ToBase>gr(0) 1000000 *</ToBase>
        <FromBase>gr(0) 1000000 /</FromBase>
        <TextId>4130</TextId>
    </UomDefn>
    <UomDefn Id="4123" Name="gigaHertz" Description="Hertz scaled by 1,000,000,000" Category="Frequency">
        <Base>Hertz</Base>
        <ToBase>gr(0) 1000000000 *</ToBase>
        <FromBase>gr(0) 1000000000 /</FromBase>
        <TextId>4131</TextId>
    </UomDefn>
    <UomDefn Id="4124" Name="percent" Description="Parts per 100" Category="Percent">
        <Base>Percent</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4136</TextId>
    </UomDefn>
    <UomDefn Id="4125" Name="tempC" Description="Temperature in degrees Celsius" Category="Temperature">
        <Base>TemperatureC</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4132</TextId>
    </UomDefn>
    <UomDefn Id="4126" Name="tempCDelta" Description="Incremental temperature used for deadband or tolerance (Celsius)" Category="Temperature">
        <Base>Kelvin</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4134</TextId>
    </UomDefn>
    <UomDefn Id="4127" Name="tempF" Description="Temperature in degrees Fahrenheit" Category="Temperature">
        <Base>TemperatureC</Base>
        <ToBase>gr(0) 32 gr(1) * - 10 * 9 + 18 /</ToBase>
        <FromBase>gr(0) 18 * 320 gr(1) * + 5 + 10 /</FromBase>
        <TextId>4133</TextId>
    </UomDefn>
    <UomDefn Id="4128" Name="tempFDelta" Description="Incremental temperature used for deadband or tolerance" Category="Temperature">
        <Base>Kelvin</Base>
        <ToBase>gr(0) 10 * 9 + 18 /</ToBase>
        <FromBase>gr(0) 18 * 5 + 10 /</FromBase>
        <TextId>4135</TextId>
    </UomDefn>
    <UomDefn Id="4129" Name="psi" Description="Pressure in pounds per square inch" Category="Pressure">
        <Base>Pascal</Base>
        <ToBase>gr(0) 68948 * 10 /</ToBase>
        <FromBase>gr(0) 10 * 68948 /</FromBase>
        <TextId>4137</TextId>
    </UomDefn>
    <UomDefn Id="4130" Name="pascal" Description="Standard unit of pressure" Category="Pressure">
        <Base>Pascal</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4138</TextId>
    </UomDefn>
    <UomDefn Id="4131" Name="psia" Description="Pressure in pounds per square inch absolute" Category="Pressure">
        <Base>Generic</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4141</TextId>
    </UomDefn>
    <UomDefn Id="4132" Name="relativeHumidity" Description="Measure of the amount of water in air divided by the amount of water that the air can hold" Category="Humidity">
        <Base>Generic</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4140</TextId>
    </UomDefn>
    <UomDefn Id="4133" Name="thd" Description="Measurement of the total harmonic distortion" Category="Harmonic Distortion">
        <Base>Generic</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4142</TextId>
    </UomDefn>
    <UomDefn Id="4134" Name="days" Description="24 hours of time" Category="Time">
        <Base>Second</Base>
        <ToBase>gr(0) 86400 *</ToBase>
        <FromBase>gr(0) 86400 /</FromBase>
        <TextId>4198</TextId>
    </UomDefn>
    <UomDefn Id="4135" Name="phase" Description="Angular difference" Category="GeneralMeasurement">
        <Base>Generic</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>4199</TextId>
    </UomDefn>

    <UomDefn Id="4136" Name="microOhm" Description="1 / 1,000,000 of an ohm" Category="Resistance">
        <Base>Ohm</Base>
        <ToBase>gr(0) 1000000 /</ToBase>
        <FromBase>gr(0) 1000000 *</FromBase>
        <TextId>5143</TextId>
    </UomDefn>
    <UomDefn Id="4137" Name="milliOhm" Description="1/1000 of an ohm" Category="Resistance">
        <Base>Ohm</Base>
        <ToBase>gr(0) 1000 /</ToBase>
        <FromBase>gr(0) 1000 *</FromBase>
        <TextId>5144</TextId>
    </UomDefn>
    <UomDefn Id="4138" Name="ohm" Description="Standard unit for electrical resistance" Category="Resistance">
        <Base>Ohm</Base>
        <ToBase>.</ToBase>
        <FromBase>.</FromBase>
        <TextId>5145</TextId>
    </UomDefn>
    <UomDefn Id="4139" Name="kiloOhm" Description="1000 ohm" Category="Resistance">
        <Base>Ohm</Base>
        <ToBase>gr(0) 1000 *</ToBase>
        <FromBase>gr(0) 1000 /</FromBase>
        <TextId>5146</TextId>
    </UomDefn>
    <UomDefn Id="4140" Name="megaOhm" Description="1,000,000 ohm" Category="Resistance">
        <Base>Ohm</Base>
        <ToBase>gr(0) 1000000 *</ToBase>
        <FromBase>gr(0) 1000000 /</FromBase>
        <TextId>5147</TextId>
    </UomDefn>
    <UomDefn Id="4141" Name="bar" Description="Pressure in bar" Category="Pressure">
        <Base>Pascal</Base>
        <ToBase>gr(0) 100000 *</ToBase>
        <FromBase>gr(0) 100000 /</FromBase>
        <TextId>5809</TextId>
    </UomDefn>

    <DataDictEntry>
        <DataId>4096</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpRmsPhsAN</ProgrammaticName>
        <EngineeringDescription>This is the system input RMS voltage between Phase A and Neutral.  The system input is defined as the source of power (utility or mains) for the system.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_ep_inpRmsPhsAN.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

EXAMPLES:

For a single system input 3-phase UPS, this data point is the RMS voltage between Phase A and Neutral of the utility (or mains) that supplies the UPS with power.

Similarly, it is the RMS voltage between Phase A and Neutral of the utility that supplies power to an environmental or other unit.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4145</DescriptionTextId>
        <LabelTextId>4144</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4097</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpRmsPhsAB</ProgrammaticName>
        <EngineeringDescription>This is the system input RMS voltage between Phase A and Phase B.  The system input is defined as the source of power (utility or mains) for the device.

This data definition is intended to be used with devices that only have one system input.  The system input for this data definition may be multi-phased.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_ep_inpRmsPhsAB.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

EXAMPLES:

For a single system input 3-phase UPS, this data point is the RMS voltage between Phase A and Phase B of the utility (or mains) that supplies the UPS with power.

Similarly, it is the RMS voltage between Phase A and Phase B of the utility that supplies power to an environmental or other unit.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4147</DescriptionTextId>
        <LabelTextId>4146</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4098</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpRmsPhsBN</ProgrammaticName>
        <EngineeringDescription>This is the system input RMS voltage between Phase B and Neutral.  The system input is defined as the source of power (utility or mains) for the device.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_ep_inpRmsPhsBN.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

EXAMPLES:

For a single system input 3-phase UPS, this data point is the RMS voltage between Phase B and Neutral of the utility (or mains) that supplies the UPS with power.

Similarly, it is the RMS voltage between Phase B and Neutral of the utility that supplies power to an environmental or other unit.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4149</DescriptionTextId>
        <LabelTextId>4148</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4099</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpRmsPhsBC</ProgrammaticName>
        <EngineeringDescription>This is the system input RMS voltage between Phase B and Phase C.  The system input is defined as the source of power (utility or mains) for the device.

This data definition is intended to be used with devices that only have one system input.  The system input for this data definition must be 3-phase.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_ep_inpRmsPhsBC.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

EXAMPLES:

For a single system input 3-phase UPS, this data point is the RMS voltage between Phase B and Phase C of the utility (or mains) that supplies the UPS with power.

Similarly, it is the RMS voltage between Phase B and Phase C of the utility that supplies power to an environmental or other unit.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4151</DescriptionTextId>
        <LabelTextId>4150</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4100</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpRmsPhsCN</ProgrammaticName>
        <EngineeringDescription>This is the system input RMS voltage between Phase C and Neutral.  The system input is defined as the source of power (utility or mains) for the device.

This data definition is intended to be used with devices that only have one system input.  The system input for this data definition must be 3-phase.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_ep_inpRmsPhsCN.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

EXAMPLES:

For a single system input 3-phase UPS, this data point is the RMS voltage between Phase C and Neutral of the utility (or mains) that supplies the UPS with power.

Similarly, it is the RMS voltage between Phase C and Neutral of the utility that supplies power to an environmental or other unit.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4153</DescriptionTextId>
        <LabelTextId>4152</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4101</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpRmsPhsCA</ProgrammaticName>
        <EngineeringDescription>This is the system input RMS voltage between Phase C and Phase A.  The system input is defined as the source of power (utility or mains) for the device.

This data definition is intended to be used with devices that only have one system input.  The system input for this data definition must be 3-phase.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_ep_inpRmsPhsCA.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

EXAMPLES:

For a single system input 3-phase UPS, this data point is the RMS voltage between Phase C and Phase A of the utility (or mains) that supplies the UPS with power.

Similarly, it is the RMS voltage between Phase C and Phase A of the utility that supplies power to an environmental or other unit.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4155</DescriptionTextId>
        <LabelTextId>4154</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4102</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpNom</ProgrammaticName>
        <EngineeringDescription>The nominal (or rated) system input voltage.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass nominal input voltage see val_byp_ep_nominal.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.   </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4157</DescriptionTextId>
        <LabelTextId>4156</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4103</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_freq_inpNom</ProgrammaticName>
        <EngineeringDescription>The nominal (or rated) system input frequency.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4159</DescriptionTextId>
        <LabelTextId>4158</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4104</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_inpNom</ProgrammaticName>
        <EngineeringDescription>The nominal (or rated) system input current.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4161</DescriptionTextId>
        <LabelTextId>4160</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4105</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_freq_inp</ProgrammaticName>
        <EngineeringDescription>The system input frequency.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For the system bypass input definition see val_byp_freq_inp.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.   </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4163</DescriptionTextId>
        <LabelTextId>4162</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4106</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpMaxPhsAN</ProgrammaticName>
        <EngineeringDescription>The maximum system input voltage measurement for Phase A-N since the last reset.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.       </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4165</DescriptionTextId>
        <LabelTextId>4164</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4107</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpMinPhsAN</ProgrammaticName>
        <EngineeringDescription>The minimum system input voltage measurement for Phase A-N since the last reset.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.       </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4167</DescriptionTextId>
        <LabelTextId>4166</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4108</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpMaxPhsBN</ProgrammaticName>
        <EngineeringDescription>The maximum system input voltage measurement for Phase B-N since the last reset.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.       </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4169</DescriptionTextId>
        <LabelTextId>4168</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4109</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpMinPhsBN</ProgrammaticName>
        <EngineeringDescription>The minimum system input voltage measurement for Phase B-N since the last reset.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.       </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4171</DescriptionTextId>
        <LabelTextId>4170</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4110</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpMaxPhsCN</ProgrammaticName>
        <EngineeringDescription>The maximum system input voltage measurement for Phase C-N since the last reset.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.       </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4173</DescriptionTextId>
        <LabelTextId>4172</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4111</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_inpMinPhsCN</ProgrammaticName>
        <EngineeringDescription>The minimum system input voltage measurement for Phase C-N since the last reset.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.       </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4175</DescriptionTextId>
        <LabelTextId>4174</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4112</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpPhsCnt</ProgrammaticName>
        <EngineeringDescription>The number of phases for the system input (i.e. 1, 2, or 3).  For example, for a 3-phase UPS this value would be 3.  For a single phase UPS, the value would be 1.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4177</DescriptionTextId>
        <LabelTextId>4176</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4113</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_inpRmsPhsA</ProgrammaticName>
        <EngineeringDescription>The system input RMS current for Phase A.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4179</DescriptionTextId>
        <LabelTextId>4178</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4114</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_inpRmsPhsB</ProgrammaticName>
        <EngineeringDescription>The system input RMS current for Phase B.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4181</DescriptionTextId>
        <LabelTextId>4180</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4115</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_inpRmsPhsC</ProgrammaticName>
        <EngineeringDescription>The system input RMS current for Phase C.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4183</DescriptionTextId>
        <LabelTextId>4182</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4116</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpPwrFactPhsA</ProgrammaticName>
        <EngineeringDescription>The system input power factor for Phase A.  Power factor is defined as the ratio of the real power to the apparent power.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4185</DescriptionTextId>
        <LabelTextId>4184</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4117</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpPwrFactPhsB</ProgrammaticName>
        <EngineeringDescription>The system input power factor for Phase B.  Power factor is defined as the ratio of the real power to the apparent power.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4187</DescriptionTextId>
        <LabelTextId>4186</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4118</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpPwrFactPhsC</ProgrammaticName>
        <EngineeringDescription>The system input power factor for Phase C.  Power factor is defined as the ratio of the real power to the apparent power.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4189</DescriptionTextId>
        <LabelTextId>4188</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4119</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpBrownCnt</ProgrammaticName>
        <EngineeringDescription>The number of occurrences, since the last reset, where the system input voltage has fallen below a pre-determined threshold for a specified amount of time.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4191</DescriptionTextId>
        <LabelTextId>4190</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4120</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpBlackCnt</ProgrammaticName>
        <EngineeringDescription>The number of occurrences, since the last reset, where the input was not qualified to provide power to the system.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4193</DescriptionTextId>
        <LabelTextId>4192</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4121</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_inpTransientCnt</ProgrammaticName>
        <EngineeringDescription>The number of occurrences, since the last reset, where the absolute value of the system input voltage deviated from the expected values.  A reset can be initiated via a user initiated action, a power down, or some similar action.

This data definition is intended to be used with devices that only have one system input.  The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.  For system bypass input definitions see @todo.

Do NOT use this data definition if the device has more that one system input.  An example of a device that has more than one system input is the STS2.  For devices with multiple system inputs, see the following data definitions: @todo.

The system input is defined as the source of power (utility or mains) for the device.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4195</DescriptionTextId>
        <LabelTextId>4194</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4122</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_inpNotQualified</ProgrammaticName>
        <EngineeringDescription>The input is not qualified to provide power to the system.  This may be due to system input over-voltage, system input under-voltage, system input frequency out of range, or other similar issues. The system input is defined as the source of power (utility or mains) for the device.

RAPTOR (NXL) SPECIFIC BEHAVIOR: This data definition is intended to be used with devices that only have one system input.
The system input may be single, 2-phase or 3-phase.  A system bypass input is NOT considered to be a second system input.
Do NOT use this data definition if the device has more that one system input.  An example of a device that has more
than one system input is the STS2.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4197</DescriptionTextId>
        <LabelTextId>4196</LabelTextId>
        <EventDefn>
            <DataId>4122</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4123</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_status</ProgrammaticName>
        <EngineeringDescription>The operating status for the system.  The intent of this data definition is to provide a high level status of the system.  The valid states are: Normal Operation, StartUp, Normal with Warning, Normal with Alarm, and Abnormal Operation.

For a more detailed explanation of this data definition, see the Engineering Reference Document.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4201</DescriptionTextId>
        <LabelTextId>4200</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4104</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4124</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_grp_summaryStatus</ProgrammaticName>
        <EngineeringDescription>The summary status of the grouped systems.  The intent of this data definition is to provide a high level status of all the systems currently defined in the group.  The valid states are: Normal Operation, StartUp, Unknown - No System Support for System Status, Normal with Warning, Normal with Alarm, Abnormal Operation and Unknown - Communication Failure.

For a more detailed explanation of this data definition, see the Engineering Reference Document.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4203</DescriptionTextId>
        <LabelTextId>4202</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4103</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4125</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_inpRmsPhsAB</ProgrammaticName>
        <EngineeringDescription>This is the bypass input RMS voltage between Phase A and Phase B.  The bypass input is defined as the source of power (utility or mains) for the system bypass.  The bypass input for this data definition may be multi-phased.

EXAMPLES:

For a single bypass input 3-phase UPS, this data point is the RMS voltage between Phase A and Phase B of the utility (or mains) that supplies the UPS bypass with power.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4212</DescriptionTextId>
        <LabelTextId>4211</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4126</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_inpRmsPhsBC</ProgrammaticName>
        <EngineeringDescription>This is the bypass input RMS voltage between Phase B and Phase C.  The bypass input is defined as the source of power (utility or mains) for the system bypass.  The bypass input for this data definition must be 3-phase.

EXAMPLES:

For a single bypass input 3-phase UPS, this data definition is the RMS voltage between Phase B and Phase C of the utility (or mains) that supplies the UPS bypass with power.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4214</DescriptionTextId>
        <LabelTextId>4213</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4127</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_inpRmsPhsCA</ProgrammaticName>
        <EngineeringDescription>This is the bypass input RMS voltage between Phase C and Phase A.  The bypass input is defined as the source of power (utility or mains) for the system bypass.  The bypass input for this data definition must be 3-phase.

EXAMPLES:

For a single bypass input 3-phase UPS, this data definition is the RMS voltage between Phase C and Phase A of the utility (or mains) that supplies the UPS bypass with power.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4216</DescriptionTextId>
        <LabelTextId>4215</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4128</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_inpRmsPhsAN</ProgrammaticName>
        <EngineeringDescription>This is the bypass input RMS voltage between Phase A and Neutral.  The bypass input is defined as the source of power (utility or mains) for the system bypass.  The bypass input for this data definition may be single, 2-phase or 3-phase.

EXAMPLES:

For a single bypass input 3-phase UPS, this data definition is the RMS voltage between Phase A and Neutral of the utility (or mains) that supplies the UPS bypass with power.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4218</DescriptionTextId>
        <LabelTextId>4217</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4129</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_inpRmsPhsBN</ProgrammaticName>
        <EngineeringDescription>This is the bypass input RMS voltage between Phase B and Neutral.  The bypass input is defined as the source of power (utility or mains) for the system bypass.  The bypass input for this data definition may be single, 2-phase or 3-phase.

EXAMPLES:

For a single bypass input 3-phase UPS, this data definition is the RMS voltage between Phase B and Neutral of the utility (or mains) that supplies the UPS bypass with power.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4220</DescriptionTextId>
        <LabelTextId>4219</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4130</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_inpRmsPhsCN</ProgrammaticName>
        <EngineeringDescription>This is the bypass input RMS voltage between Phase C and Neutral.  The bypass input is defined as the source of power (utility or mains) for the system bypass.  The bypass input for this data definition must be 3-phase.

EXAMPLES:

For a single bypass input 3-phase UPS, this data definition is the RMS voltage between Phase C and Neutral of the utility (or mains) that supplies the UPS bypass with power.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4222</DescriptionTextId>
        <LabelTextId>4221</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4131</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_freq_inp</ProgrammaticName>
        <EngineeringDescription>The bypass input frequency.

This data definition is intended to be used with systems that only have one bypass input.  The bypass input may be single, 2-phase or 3-phase.

The bypass input is defined as the source of power (utility or mains) for the system bypass.   </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4224</DescriptionTextId>
        <LabelTextId>4223</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4132</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_outOverloadPhsA</ProgrammaticName>
        <EngineeringDescription>With the load on bypass static switch, the measured phase A output RMS current has exceeded a specified percentage of the nominal per-phase RMS current rating.

Event clears when measured phase A output has dropped to a specified percentage of nominal RMS current rating.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4226</DescriptionTextId>
        <LabelTextId>4225</LabelTextId>
        <EventDefn>
            <DataId>4132</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4133</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_outOverloadPhsB</ProgrammaticName>
        <EngineeringDescription>With the load on bypass static switch, the measured phase B output RMS current has exceeded a specified percentage of the nominal per-phase RMS current rating.

Event clears when measured phase B output has dropped to a specified percentage of nominal RMS current rating.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4228</DescriptionTextId>
        <LabelTextId>4227</LabelTextId>
        <EventDefn>
            <DataId>4133</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4134</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_outOverloadPhsC</ProgrammaticName>
        <EngineeringDescription>With the load on bypass static switch, the measured phase C output RMS current has exceeded a specified percentage of the nominal per-phase RMS current rating.

Event clears when measured phase C output has dropped to a specified percentage of nominal RMS current rating.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4230</DescriptionTextId>
        <LabelTextId>4229</LabelTextId>
        <EventDefn>
            <DataId>4134</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4135</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_unavail</ProgrammaticName>
        <EngineeringDescription>This summary event is asserted when the bypass is not available. Possible reasons for this might include, but are not limited to the following: Bypass Sync Error, Bypass Line Fail, Bypass Overvoltage, Bypass Undervoltage, Bypass Phase Rotation Error, etc.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4232</DescriptionTextId>
        <LabelTextId>4231</LabelTextId>
        <EventDefn>
            <DataId>4135</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4136</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_pha_syncDiff</ProgrammaticName>
        <EngineeringDescription>The phase angle difference between the inverter output and bypass source.  A positive value means the inverter leads the bypass source.  A negative value means the inverter lags the bypass source.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4234</DescriptionTextId>
        <LabelTextId>4233</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4137</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_autoReXfrPrimed</ProgrammaticName>
        <EngineeringDescription>Presently operating on bypass. An automatic retransfer to inverter operation is possible, once all of the transfer conditions have been satisfied. Some of the conditions required to retransfer to inverter might include, but are not limited to the following: inverter output voltage and frequency are normal, the critical bus is not overloaded, the inverter is synchronized with the bypass, etc.

This event becomes inactive when operation on inverter resumes or if some other event occurs that precludes automatic retransfer to inverter.

Reference 'evt_byp_autoReXfrFailed'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4236</DescriptionTextId>
        <LabelTextId>4235</LabelTextId>
        <EventDefn>
            <DataId>4137</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4138</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_autoReXfrFailed</ProgrammaticName>
        <EngineeringDescription>A recoverable transfer from bypass to inverter did not happen within the specified time interval. Further attempts to retransfer to inverter are inhibited.

Reference 'evt_byp_autoReXfrPrimed'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4238</DescriptionTextId>
        <LabelTextId>4237</LabelTextId>
        <EventDefn>
            <DataId>4138</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4139</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_excessAutoReXfr</ProgrammaticName>
        <EngineeringDescription>Indicates too many transfers from bypass to inverter have occurred in the specified time interval. Automatic retransfer to inverter is inhibited (manual retransfer may still be allowed).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4240</DescriptionTextId>
        <LabelTextId>4239</LabelTextId>
        <EventDefn>
            <DataId>4139</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4140</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_restartInhibitExt</ProgrammaticName>
        <EngineeringDescription>A discrete input signal is set for 'Inhibit Bypass Restart' and that input channel is active. When this event is active, the bypass is not available.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4242</DescriptionTextId>
        <LabelTextId>4241</LabelTextId>
        <EventDefn>
            <DataId>4140</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4141</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_brkrClosed</ProgrammaticName>
        <EngineeringDescription>The bypass breaker is closed.

@todo See Load on Bypass</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4244</DescriptionTextId>
        <LabelTextId>4243</LabelTextId>
        <EventDefn>
            <DataId>4141</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4142</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_sbsOverload</ProgrammaticName>
        <EngineeringDescription>At least one phase of the static bypass switch (SBS) power dissipation limit has been exceeded (RMS current vs time curve). Generally, the UPS will take action to protect the SBS from the overload condition.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4246</DescriptionTextId>
        <LabelTextId>4245</LabelTextId>
        <EventDefn>
            <DataId>4142</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4143</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_sbsUnavail</ProgrammaticName>
        <EngineeringDescription>Summary event based on the detection of a SBS failure. Some of the possible causes include, but are not limited to the following: SBS Phase Open , SBS SCR Shorted, Static Bypass Switch Overload Exceeded, Bypass Power Supply Fail, Static Bypass Switch Fuse Failure, etc</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4248</DescriptionTextId>
        <LabelTextId>4247</LabelTextId>
        <EventDefn>
            <DataId>4143</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4144</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_excessPulseParallel</ProgrammaticName>
        <EngineeringDescription>The system has performed too many pulse parallel operations within the specified time interval.  A pulse parallel operation is a momentary operation of the static bypass switch (SBS) in parallel with the inverter.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4250</DescriptionTextId>
        <LabelTextId>4249</LabelTextId>
        <EventDefn>
            <DataId>4144</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4145</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_autoXfrFailed</ProgrammaticName>
        <EngineeringDescription>An automatic transfer to static bypass failed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4252</DescriptionTextId>
        <LabelTextId>4251</LabelTextId>
        <EventDefn>
            <DataId>4145</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4146</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_inpPhsRotation</ProgrammaticName>
        <EngineeringDescription>The power conductors on the input line are not wired to the UPS in the sequence preferred for the rectifier (A-B-C).

With the input source voltage above minimum threshold, the phase rotation is not A-B-C.

It becomes inactive when the phase rotation is A-B-C with source voltage above minimum threshold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4254</DescriptionTextId>
        <LabelTextId>4253</LabelTextId>
        <EventDefn>
            <DataId>4146</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4147</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_inpCurrentLimit</ProgrammaticName>
        <EngineeringDescription>The RMS input current has reached the input current limit threshold. One or more of the input phases reached the current limit threshold.

It becomes inactive when RMS current returns below a specified percentage of the threshold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4256</DescriptionTextId>
        <LabelTextId>4255</LabelTextId>
        <EventDefn>
            <DataId>4147</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4148</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_dcb_ep_dcBus</ProgrammaticName>
        <EngineeringDescription>The voltage between the positive and negative terminals of the DC bus at the battery input.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4258</DescriptionTextId>
        <LabelTextId>4257</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>13</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4149</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_dcb_ec_dcBus</ProgrammaticName>
        <EngineeringDescription>The current at the battery input terminals. In charging mode, the current will be a positive value. In discharging mode, the current will be a negative value.

If there are multiple battery strings that comprise the system battery, then this current is for the system battery (i.e. it includes all of the batteries in the system).

If a fly wheel is used instead of a battery, then this is the current flowing into or out of the fly wheel source.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4260</DescriptionTextId>
        <LabelTextId>4259</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>14</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4150</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_tm_remaining</ProgrammaticName>
        <EngineeringDescription>The calculated available time on battery.

NOTE: A UPS is expected to provide a battery time remaining value even when not operating on battery. However, if the system is not capable of providing this information, then use the FDM special value to indicate that the value is unavailable.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4262</DescriptionTextId>
        <LabelTextId>4261</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4151</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_tm_discharge</ProgrammaticName>
        <EngineeringDescription>The time on battery operation for this discharge. When not operating on battery, use the FDM special value to indicate that the value is unavailable.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4264</DescriptionTextId>
        <LabelTextId>4263</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4152</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_tm_totalDischarge</ProgrammaticName>
        <EngineeringDescription>The cumulative battery discharge time. This value persists across system boots and reset when the batteries are replaced.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4270</DescriptionTextId>
        <LabelTextId>4269</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4153</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_pct_charge</ProgrammaticName>
        <EngineeringDescription>The percentage of battery charge. If the batteries charge long enough, this value should reach 100%. The parameter is NOT related to the age of the battery, which can effect the ability of the battery to hold as much energy as when it was new. See val_bat_wh_capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4271</DescriptionTextId>
        <LabelTextId>4272</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4154</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_ep_mainDisconnect</ProgrammaticName>
        <EngineeringDescription>The voltage between the most positive and the most negative battery terminals of the common battery disconnect. This disconnect isolates all batteries (or DC sources) from the system.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4273</DescriptionTextId>
        <LabelTextId>4274</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>13</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4155</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_ep_cabinet</ProgrammaticName>
        <EngineeringDescription>The voltage between the most positive and most negative battery terminals of a battery cabinet.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4275</DescriptionTextId>
        <LabelTextId>4276</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>13</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4156</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_temp_cabinet</ProgrammaticName>
        <EngineeringDescription>The battery temperature for a battery cabinet.

Note: This point is not specific with respect to the number of or location of the measurement sensors.

For example: Some units may have a single sensor measuring the ambient temperature inside of the battery cabinet.  Other units may have a sensor on a single cell or a series of sensors on individual cells.  A unit with multiple sensors might report the average the individual temperatures or might report the highest temperature of the individual measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4277</DescriptionTextId>
        <LabelTextId>4278</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>7</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4157</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_tm_sbsOverloadRemain</ProgrammaticName>
        <EngineeringDescription>The calculated time remaining before bypass static switch shutdown due to the present overload condition. If an overload condition does not exist, then a FDM special value should be used to indicate 'unavailable'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4279</DescriptionTextId>
        <LabelTextId>4280</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
   </DataDictEntry>
   <DataDictEntry>
        <DataId>4158</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_ah_consumed</ProgrammaticName>
        <EngineeringDescription>The cumulative battery amp-hours withdrawn over the life of the battery. This value persists across reboots. Typically, this value is reset back to zero when the batteries are replaced.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4281</DescriptionTextId>
        <LabelTextId>4282</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>12</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4159</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_pwr_discharge</ProgrammaticName>
        <EngineeringDescription>Instantaneous battery power while discharging (DC volts times DC amps).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4283</DescriptionTextId>
        <LabelTextId>4284</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4160</DataId>
        <DefnType>TimeDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_tm_commissioned</ProgrammaticName>
        <EngineeringDescription>The date and time when time the battery system was put into service.  This information persists across system reboot events. It is the responsibility of Service to reset this date/time when the batteries are replaced.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4285</DescriptionTextId>
        <LabelTextId>4286</LabelTextId>
        <TimeDefn>
            <DataId>4160</DataId>
            <Epoch_Id>0</Epoch_Id>
        </TimeDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4161</DataId>
        <DefnType>TimeDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_tm_lastDischarge</ProgrammaticName>
        <EngineeringDescription>The date and time of the last battery discharge. Typically this is the time when the discharge starts. This value persists across reboots.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4287</DescriptionTextId>
        <LabelTextId>4288</LabelTextId>
        <TimeDefn>
            <DataId>4161</DataId>
            <Epoch_Id>0</Epoch_Id>
        </TimeDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4162</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_low</ProgrammaticName>
        <EngineeringDescription>The calculated battery time remaining has reached the battery low threshold. This event is NOT active during a battery test or while operating on mains/utility.

It becomes inactive when the calculated battery time remaining is above the low battery threshold, or normal operation on utility/mains resumes. This event may or may not remain active past the end-of-discharge.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4289</DescriptionTextId>
        <LabelTextId>4290</LabelTextId>
        <EventDefn>
            <DataId>4162</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4163</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outOffEoD</ProgrammaticName>
        <EngineeringDescription>"While operating on battery, the output turned off due to battery reaching end-of-discharge.

It becomes inactive when normal operation on utility/mains resumes.

If this event is supported then ""evt_out_off"" should also be supported."</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4291</DescriptionTextId>
        <LabelTextId>4292</LabelTextId>
        <EventDefn>
            <DataId>4163</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4164</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_chargeError</ProgrammaticName>
        <EngineeringDescription>The battery is not charging properly. This could be caused by a number of reasons, including but not limited to: battery charger failure, battery failure, etc.
It becomes inactive when battery charging returns to normal.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4293</DescriptionTextId>
        <LabelTextId>4294</LabelTextId>
        <EventDefn>
            <DataId>4164</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4165</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_chargeReducedExt</ProgrammaticName>
        <EngineeringDescription>Using a reduced battery charging algorithm due to an external signal. For example, this might be active when operating on a generator to minimize the generator's load.
It becomes inactive when normal battery charging is no longer inhibited by the external signal.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4295</DescriptionTextId>
        <LabelTextId>4296</LabelTextId>
        <EventDefn>
            <DataId>4165</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4166</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_capacityLow</ProgrammaticName>
        <EngineeringDescription>The battery capacity is low. There are various possible reasons for this event, including but not limited to: a battery is offline, the battery age has reduced its capabilities, etc.

It becomes inactive when normal battery capacity is restored.

For a system configuration without batteries, this event should not be supported.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4297</DescriptionTextId>
        <LabelTextId>4298</LabelTextId>
        <EventDefn>
            <DataId>4166</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4167</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_out_off</ProgrammaticName>
        <EngineeringDescription>This event is active when the output is off. This should be active irrespective of the reason that the output was turned off.

It becomes inactive when the output is on.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4299</DescriptionTextId>
        <LabelTextId>4300</LabelTextId>
        <EventDefn>
            <DataId>4167</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4168</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_discharging</ProgrammaticName>
        <EngineeringDescription>The battery is discharging. This is active when power is being withdrawn from the battery. NOTE: This is not activated due to a battery test.

It becomes inactive when the batteries are charging.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4301</DescriptionTextId>
        <LabelTextId>4302</LabelTextId>
        <EventDefn>
            <DataId>4168</DataId>
        </EventDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4169</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_tempImbalance</ProgrammaticName>
        <EngineeringDescription>Any two active battery temperatures have a difference greater than the difference threshold. In this context, the term 'active' means that the battery is configured to be part of the system.

It becomes inactive when the battery temperature differences are less than the difference threshold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4303</DescriptionTextId>
        <LabelTextId>4304</LabelTextId>
        <EventDefn>
            <DataId>4169</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4170</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_equalize</ProgrammaticName>
        <EngineeringDescription>The rectifier output voltage is increased to equalize the battery voltage level.

It becomes inactive when the equalize algorithm completes OR battery discharge is required.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4305</DescriptionTextId>
        <LabelTextId>4306</LabelTextId>
        <EventDefn>
            <DataId>4170</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4171</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_manualTest</ProgrammaticName>
        <EngineeringDescription>Manual battery test is in progress. A battery test is in process and will continue until the test completes or terminates due to an external event.

It becomes inactive when the test completes or terminates due to an external event.

See 'evt_bat_autoTest'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4307</DescriptionTextId>
        <LabelTextId>4308</LabelTextId>
        <EventDefn>
            <DataId>4171</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4172</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_autoTest</ProgrammaticName>
        <EngineeringDescription>Automatic battery test is in progress. A battery test is in process and will continue until the test completes or terminates due to an external event.

It becomes inactive when the test completes or terminates due to an external event.

See 'evt_bat_manualTest'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4309</DescriptionTextId>
        <LabelTextId>4310</LabelTextId>
        <EventDefn>
            <DataId>4172</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4173</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_mainDisconnectOpen</ProgrammaticName>
        <EngineeringDescription>Main battery disconnect is open.

It becomes inactive when the main battery disconnect is closed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4311</DescriptionTextId>
        <LabelTextId>4312</LabelTextId>
        <EventDefn>
            <DataId>4173</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4174</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_tempSnsrFail</ProgrammaticName>
        <EngineeringDescription>A battery temperature sensor fault has been detected. This is a summary event based on the detection of at least one or more battery temperature sensors faults.

It becomes inactive when all temperature sensor fault conditions clear.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4313</DescriptionTextId>
        <LabelTextId>4314</LabelTextId>
        <EventDefn>
            <DataId>4174</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4175</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_freqErr</ProgrammaticName>
        <EngineeringDescription>With the bypass input voltage above a minimum threshold, the bypass frequency is outside a specified percentage of nominal.

It becomes inactive when the bypass frequency is inside a specified percentage of nominal.

NOTE: If this event is active, then the inverter is not synchronized with the bypass source. Conversely, if this event is inactive it does not imply the inverter is synchronized with the bypass source.

See 'evt_byp_unavail'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4315</DescriptionTextId>
        <LabelTextId>4316</LabelTextId>
        <EventDefn>
            <DataId>4175</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4176</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr01Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 1 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4317</DescriptionTextId>
        <LabelTextId>4318</LabelTextId>
        <EventDefn>
            <DataId>4176</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4177</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr01OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 1 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4319</DescriptionTextId>
        <LabelTextId>4320</LabelTextId>
        <EventDefn>
            <DataId>4177</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4178</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr01CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 1 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4321</DescriptionTextId>
        <LabelTextId>4322</LabelTextId>
        <EventDefn>
            <DataId>4178</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4179</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr02Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 2 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4323</DescriptionTextId>
        <LabelTextId>4324</LabelTextId>
        <EventDefn>
            <DataId>4179</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4180</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr02OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 2 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4325</DescriptionTextId>
        <LabelTextId>4326</LabelTextId>
        <EventDefn>
            <DataId>4180</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4181</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr02CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 2 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4327</DescriptionTextId>
        <LabelTextId>4328</LabelTextId>
        <EventDefn>
            <DataId>4181</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4182</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr03Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 3 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4329</DescriptionTextId>
        <LabelTextId>4330</LabelTextId>
        <EventDefn>
            <DataId>4182</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4183</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr03OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 3 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4331</DescriptionTextId>
        <LabelTextId>4332</LabelTextId>
        <EventDefn>
            <DataId>4183</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4184</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr03CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 3 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4333</DescriptionTextId>
        <LabelTextId>4334</LabelTextId>
        <EventDefn>
            <DataId>4184</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4185</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr04Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 4 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4335</DescriptionTextId>
        <LabelTextId>4336</LabelTextId>
        <EventDefn>
            <DataId>4185</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4186</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr04OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 4 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4337</DescriptionTextId>
        <LabelTextId>4338</LabelTextId>
        <EventDefn>
            <DataId>4186</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4187</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr04CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 4 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4339</DescriptionTextId>
        <LabelTextId>4340</LabelTextId>
        <EventDefn>
            <DataId>4187</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4188</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr05Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 5 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4341</DescriptionTextId>
        <LabelTextId>4342</LabelTextId>
        <EventDefn>
            <DataId>4188</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4189</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr05OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 5 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4343</DescriptionTextId>
        <LabelTextId>4344</LabelTextId>
        <EventDefn>
            <DataId>4189</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4190</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr05CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 5 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4345</DescriptionTextId>
        <LabelTextId>4346</LabelTextId>
        <EventDefn>
            <DataId>4190</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4191</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr06Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 6 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4347</DescriptionTextId>
        <LabelTextId>4348</LabelTextId>
        <EventDefn>
            <DataId>4191</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4192</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr06OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 6 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4349</DescriptionTextId>
        <LabelTextId>4350</LabelTextId>
        <EventDefn>
            <DataId>4192</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4193</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr06CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 6 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4351</DescriptionTextId>
        <LabelTextId>4352</LabelTextId>
        <EventDefn>
            <DataId>4193</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4194</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr07Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 7 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4353</DescriptionTextId>
        <LabelTextId>4354</LabelTextId>
        <EventDefn>
            <DataId>4194</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4195</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr07OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 7 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4355</DescriptionTextId>
        <LabelTextId>4356</LabelTextId>
        <EventDefn>
            <DataId>4195</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4196</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr07CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 7 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4357</DescriptionTextId>
        <LabelTextId>4358</LabelTextId>
        <EventDefn>
            <DataId>4196</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4197</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr08Open</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 8 is open.

It becomes inactive when breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4359</DescriptionTextId>
        <LabelTextId>4360</LabelTextId>
        <EventDefn>
            <DataId>4197</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4198</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr08OpenFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 8 failed to open.

It becomes inactive when the battery breaker opens.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4361</DescriptionTextId>
        <LabelTextId>4362</LabelTextId>
        <EventDefn>
            <DataId>4198</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4199</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_brkr08CloseFail</ProgrammaticName>
        <EngineeringDescription>Battery circuit breaker 8 failed to close.

It becomes inactive when the battery breaker closes.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4363</DescriptionTextId>
        <LabelTextId>4364</LabelTextId>
        <EventDefn>
            <DataId>4199</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4200</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_chargeInhibit</ProgrammaticName>
        <EngineeringDescription>Battery charging is inhibited due to an external inhibit signal.

It becomes inactive when the external inhibit signal clears, thus allowing normal battery charging.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4365</DescriptionTextId>
        <LabelTextId>4366</LabelTextId>
        <EventDefn>
            <DataId>4200</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4201</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outRmsPhsAB</ProgrammaticName>
        <EngineeringDescription>This is the system output RMS voltage between Phase A and Phase B.  The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4367</DescriptionTextId>
        <LabelTextId>4368</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4202</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outRmsPhsBC</ProgrammaticName>
        <EngineeringDescription>This is the system output RMS voltage between Phase B and Phase C.  The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4369</DescriptionTextId>
        <LabelTextId>4370</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4203</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outRmsPhsCA</ProgrammaticName>
        <EngineeringDescription>This is the system output RMS voltage between Phase C and Phase A.  The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4371</DescriptionTextId>
        <LabelTextId>4372</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4204</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_outRmsPhsA</ProgrammaticName>
        <EngineeringDescription>The system output RMS current for Phase A. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4373</DescriptionTextId>
        <LabelTextId>4374</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4205</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_outRmsPhsB</ProgrammaticName>
        <EngineeringDescription>The system output RMS current for Phase B. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4375</DescriptionTextId>
        <LabelTextId>4376</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4206</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_outRmsPhsC</ProgrammaticName>
        <EngineeringDescription>The system output RMS current for Phase C. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4377</DescriptionTextId>
        <LabelTextId>4378</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4207</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_freq_out</ProgrammaticName>
        <EngineeringDescription>The system output frequency. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4379</DescriptionTextId>
        <LabelTextId>4380</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4208</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pwr_out</ProgrammaticName>
        <EngineeringDescription>The sum total power of all system output phases. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4381</DescriptionTextId>
        <LabelTextId>4382</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4209</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ap_out</ProgrammaticName>
        <EngineeringDescription>The sum total apparent power of all system output phases. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4383</DescriptionTextId>
        <LabelTextId>4384</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4210</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_outPwrFactPhsA</ProgrammaticName>
        <EngineeringDescription>The system output power factor of phase A. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4385</DescriptionTextId>
        <LabelTextId>4386</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4211</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_outPwrFactPhsB</ProgrammaticName>
        <EngineeringDescription>The system output power factor of phase B. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4387</DescriptionTextId>
        <LabelTextId>4388</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4212</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_outPwrFactPhsC</ProgrammaticName>
        <EngineeringDescription>The system output power factor of phase C. The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4389</DescriptionTextId>
        <LabelTextId>4390</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4213</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outEPO</ProgrammaticName>
        <EngineeringDescription>System shutdown due to Emergency Power Off (EPO) or Emergency Module Off (EMO).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4391</DescriptionTextId>
        <LabelTextId>4392</LabelTextId>
        <EventDefn>
            <DataId>4213</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4214</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outREPO</ProgrammaticName>
        <EngineeringDescription>System shutdown due to Remote Emergency Power Off (REPO).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4393</DescriptionTextId>
        <LabelTextId>4394</LabelTextId>
        <EventDefn>
            <DataId>4214</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4215</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outOff</ProgrammaticName>
        <EngineeringDescription>Summary event that indicates that the output is off.  The system output is defined as the critical bus supporting the load.

It becomes inactive when the output is on.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4395</DescriptionTextId>
        <LabelTextId>4396</LabelTextId>
        <EventDefn>
            <DataId>4215</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4216</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_backfeed</ProgrammaticName>
        <EngineeringDescription>The system detected a voltage on the bypass when none was expected.

It becomes inactive when the bypass voltage is as expected.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4397</DescriptionTextId>
        <LabelTextId>4398</LabelTextId>
        <EventDefn>
            <DataId>4216</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4217</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_manXfrInhibited</ProgrammaticName>
        <EngineeringDescription>Manual transfer from inverter to bypass is inhibited - bypass not qualified. Becomes active when operating on inverter and manual transfer to bypass is not permitted.

It becomes inactive when manual transfer to bypass is permitted.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4399</DescriptionTextId>
        <LabelTextId>4400</LabelTextId>
        <EventDefn>
            <DataId>4217</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4218</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_manReXfrInhibited</ProgrammaticName>
        <EngineeringDescription>Manual transfer from bypass to inverter is inhibited. Becomes active when operating on bypass and manual transfer to inverter is not permitted.

It becomes inactive when manual transfer to inverter is permitted.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4401</DescriptionTextId>
        <LabelTextId>4402</LabelTextId>
        <EventDefn>
            <DataId>4218</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4219</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_tempOver</ProgrammaticName>
        <EngineeringDescription>A battery temperature is above a threshold.

It becomes inactive when the battery temperature is below the activation threshold or below a specified percentage of the threshold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4403</DescriptionTextId>
        <LabelTextId>4404</LabelTextId>
        <EventDefn>
            <DataId>4219</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4220</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_monitor01Ext</ProgrammaticName>
        <EngineeringDescription>External battery monitor 1 indicates battery maintenance is required.

It becomes inactive when the external monitor 1 signal clears. </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4405</DescriptionTextId>
        <LabelTextId>4406</LabelTextId>
        <EventDefn>
            <DataId>4220</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4221</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_monitor02Ext</ProgrammaticName>
        <EngineeringDescription>External battery monitor 2 indicates battery maintenance is required.

It becomes inactive when the external monitor 2 signal clears.</EngineeringDescription>
<EngineeringReference/>
        <DescriptionTextId>4407</DescriptionTextId>
        <LabelTextId>4408</LabelTextId>
        <EventDefn>
            <DataId>4221</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4222</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_groundFault</ProgrammaticName>
        <EngineeringDescription>Battery system ground fault amperage exceeds the threshold. The battery system is defined to include all of the batteries in the system.

It becomes inactive when ground fault amperage returns to normal levels.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4409</DescriptionTextId>
        <LabelTextId>4410</LabelTextId>
        <EventDefn>
            <DataId>4222</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4223</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pct_outPwrPhsAN</ProgrammaticName>
        <EngineeringDescription>The system output power on phase A as a percentage of the rated capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4411</DescriptionTextId>
        <LabelTextId>4412</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4224</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pct_outPwrPhsBN</ProgrammaticName>
        <EngineeringDescription>The system output power on phase B as a percentage of the rated capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4413</DescriptionTextId>
        <LabelTextId>4414</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4225</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pct_outPwrPhsCN</ProgrammaticName>
        <EngineeringDescription>The system output power on phase C as a percentage of the rated capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4415</DescriptionTextId>
        <LabelTextId>4416</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4226</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pct_outVaPhsA</ProgrammaticName>
        <EngineeringDescription>The system output apparent power on phase A as a percentage of the rated capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4417</DescriptionTextId>
        <LabelTextId>4418</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4227</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pct_outVaPhsB</ProgrammaticName>
        <EngineeringDescription>The system output apparent power on phase B as a percentage of the rated capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4419</DescriptionTextId>
        <LabelTextId>4420</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4228</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_pct_outVaPhsC</ProgrammaticName>
        <EngineeringDescription>The system output apparent power on phase C as a percentage of the rated capacity.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4421</DescriptionTextId>
        <LabelTextId>4422</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4229</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outEPOLatched</ProgrammaticName>
        <EngineeringDescription>Emergency power off (EPO) was activated causing 'EPO latched' to activate. The critical bus cannot be energized when 'EPO latched' is active.

It becomes inactive due to manual reset.

NOTE: The state of 'EPO latched' persists across a system reboot.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4424</DescriptionTextId>
        <LabelTextId>4423</LabelTextId>
        <EventDefn>
            <DataId>4229</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4230</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outLowPwrFactor</ProgrammaticName>
        <EngineeringDescription>The system output power factor is low, resulting in reduced load capacity.

This event is active when any output phase load current is above a threshold and the output power factor is below a threshold.

It becomes inactive when the power factor increases above a threshold, or the load current decreases below a threshold thus making the power factor measurement inaccurate.

NOTE: The load current threshold differentiates the point where accurate power factor measurements are possible.</EngineeringDescription>
<EngineeringReference/>
        <DescriptionTextId>4426</DescriptionTextId>
        <LabelTextId>4425</LabelTextId>
        <EventDefn>
            <DataId>4230</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4231</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outCurrentLimitHigh</ProgrammaticName>
        <EngineeringDescription>Output current for one or more phases exceeds a threshold, where threshold is based upon system rating.

It becomes inactive when the currents on all phases are below the threshold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4428</DescriptionTextId>
        <LabelTextId>4427</LabelTextId>
        <EventDefn>
            <DataId>4231</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4232</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_inv_tm_overloadRemaing</ProgrammaticName>
        <EngineeringDescription>The calculated time remaining before inverter shutdown. The calculated time of inverter operation remaining for the present overload event. If the inverter is not overloaded, then use the FDM special value to indicate that the value is unavailable.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4430</DescriptionTextId>
        <LabelTextId>4429</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4233</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_failure</ProgrammaticName>
        <EngineeringDescription>Inverter failure - inverter output is off.

This summary event is based on the detection of at least one inverter fault, which may include but is not limited to: inverter overvoltage, inverter undervoltage, inverter phase A fault, inverter phase B fault, inverter phase C fault, inverter DC fuse fail and inverter output fuse fail.

It becomes inactive when all applicable inverter faults clear.</EngineeringDescription>
<EngineeringReference/>
        <DescriptionTextId>4432</DescriptionTextId>
        <LabelTextId>4431</LabelTextId>
        <EventDefn>
            <DataId>4233</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4234</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_overloadPhsA</ProgrammaticName>
        <EngineeringDescription>Inverter is operating with an overload on phase A.

Phase A of the inverter power limit (power draw and/or amperage draw) has been exceeded.

It becomes inactive when phase A of the inverter is no longer overloaded.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4434</DescriptionTextId>
        <LabelTextId>4433</LabelTextId>
        <EventDefn>
            <DataId>4234</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4235</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_overloadPhsB</ProgrammaticName>
        <EngineeringDescription>Inverter is operating with an overload on phase B.

Phase B of the inverter power limit (power draw and/or amperage draw) has been exceeded.

It becomes inactive when phase B of the inverter is no longer overloaded.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4436</DescriptionTextId>
        <LabelTextId>4435</LabelTextId>
        <EventDefn>
            <DataId>4235</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4236</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_overloadPhsC</ProgrammaticName>
        <EngineeringDescription>Inverter is operating with an overload on phase C.

Phase C of the inverter power limit (power draw and/or amperage draw) has been exceeded.

It becomes inactive when phase C of the inverter is no longer overloaded.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4438</DescriptionTextId>
        <LabelTextId>4437</LabelTextId>
        <EventDefn>
            <DataId>4236</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4237</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_restartInhibitExt</ProgrammaticName>
        <EngineeringDescription>Restart of the inverter is inhibited by an external signal.

It becomes inactive when the external signal has been cleared.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4443</DescriptionTextId>
        <LabelTextId>4444</LabelTextId>
        <EventDefn>
            <DataId>4237</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4238</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_outBrkrFailOpen</ProgrammaticName>
        <EngineeringDescription>Inverter output breaker failed to open.

It becomes inactive when the inverter output breaker opens.</EngineeringDescription>
<EngineeringReference/>
        <DescriptionTextId>4440</DescriptionTextId>
        <LabelTextId>4439</LabelTextId>
        <EventDefn>
            <DataId>4238</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4239</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_outBrkrFailClose</ProgrammaticName>
        <EngineeringDescription>Inverter output breaker failed to close.

It becomes inactive when the inverter output breaker closes.</EngineeringDescription>
<EngineeringReference/>
        <DescriptionTextId>4442</DescriptionTextId>
        <LabelTextId>4441</LabelTextId>
        <EventDefn>
            <DataId>4239</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4240</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_modelNumber</ProgrammaticName>
        <EngineeringDescription>System model identifier. This is the marketing model identifier that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4445</DescriptionTextId>
        <LabelTextId>4446</LabelTextId>
        <TextDefn>
            <DataId>4240</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4241</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_mbs_modelNumber</ProgrammaticName>
        <EngineeringDescription>Maintenance bypass model identifier. This is the marketing model identifier that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4447</DescriptionTextId>
        <LabelTextId>4448</LabelTextId>
        <TextDefn>
            <DataId>4241</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4242</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinetModelNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet model identifier. This is the marketing model identifier that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4449</DescriptionTextId>
        <LabelTextId>4450</LabelTextId>
        <TextDefn>
            <DataId>4242</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4243</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_spc_modelNumber</ProgrammaticName>
        <EngineeringDescription>System parallel cabinet model identifier. This is the marketing model identifier that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4451</DescriptionTextId>
        <LabelTextId>4452</LabelTextId>
        <TextDefn>
            <DataId>4243</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4244</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_serialNumber</ProgrammaticName>
        <EngineeringDescription>System serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4453</DescriptionTextId>
        <LabelTextId>4454</LabelTextId>
        <TextDefn>
            <DataId>4244</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4245</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_mbs_serialNumber</ProgrammaticName>
        <EngineeringDescription>Maintenance bypass serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4455</DescriptionTextId>
        <LabelTextId>4456</LabelTextId>
        <TextDefn>
            <DataId>4245</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4246</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_spc_serialNumber</ProgrammaticName>
        <EngineeringDescription>System parallel cabinet serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4457</DescriptionTextId>
        <LabelTextId>4458</LabelTextId>
        <TextDefn>
            <DataId>4246</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4247</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_siteIdentifier</ProgrammaticName>
        <EngineeringDescription>Site identifier. This field is used to uniquely identify a site location (typically a end user building) within some domain; also see 'str_sys_siteEquipmentTagNumber.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4459</DescriptionTextId>
        <LabelTextId>4460</LabelTextId>
        <TextDefn>
            <DataId>4247</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4248</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_siteEquipmentTagNumber</ProgrammaticName>
        <EngineeringDescription>Site equipment tag number. This field is used to uniquely identify a piece of equipment at an end user's site; also see 'str_sys_siteIdentifier'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4461</DescriptionTextId>
        <LabelTextId>4462</LabelTextId>
        <TextDefn>
            <DataId>4248</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4249</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet01serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 1 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4463</DescriptionTextId>
        <LabelTextId>4464</LabelTextId>
        <TextDefn>
            <DataId>4249</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4250</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet02serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 2 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4465</DescriptionTextId>
        <LabelTextId>4466</LabelTextId>
        <TextDefn>
            <DataId>4250</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4251</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet03serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 3 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4467</DescriptionTextId>
        <LabelTextId>4468</LabelTextId>
        <TextDefn>
            <DataId>4251</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4252</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet04serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 4 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4469</DescriptionTextId>
        <LabelTextId>4470</LabelTextId>
        <TextDefn>
            <DataId>4252</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4253</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet05serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 5 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4471</DescriptionTextId>
        <LabelTextId>4472</LabelTextId>
        <TextDefn>
            <DataId>4253</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4254</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet06serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 6 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4473</DescriptionTextId>
        <LabelTextId>4474</LabelTextId>
        <TextDefn>
            <DataId>4254</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4255</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet07serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 7 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4475</DescriptionTextId>
        <LabelTextId>4476</LabelTextId>
        <TextDefn>
            <DataId>4255</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4256</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_bat_cabinet08serialNumber</ProgrammaticName>
        <EngineeringDescription>Battery cabinet 8 serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4477</DescriptionTextId>
        <LabelTextId>4478</LabelTextId>
        <TextDefn>
            <DataId>4256</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4257</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rct_cfgPulseCount</ProgrammaticName>
        <EngineeringDescription>Rectifier pulse count per waveform cycle.


Common rectifiers use 6 or 12 pulse converters. Less common are 18 and 24 pulse inputs. The higher the pulse count, the less ripple on the resulting DC supply and reduced harmonics introduced into the source.        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4595</DescriptionTextId>
        <LabelTextId>4596</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4106</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4258</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rct_cfgInpFilterPassive</ProgrammaticName>
        <EngineeringDescription>Rectifier input passive filter (installed or not installed)</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4597</DescriptionTextId>
        <LabelTextId>4598</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4105</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4259</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_byp_ep_nominal</ProgrammaticName>
        <EngineeringDescription>Bypass nominal (or rated) voltage.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4483</DescriptionTextId>
        <LabelTextId>4484</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4260</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outNom</ProgrammaticName>
        <EngineeringDescription>The nominal (or rated) system output voltage.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4485</DescriptionTextId>
        <LabelTextId>4486</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4261</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_freq_outNom</ProgrammaticName>
        <EngineeringDescription>The nominal (or rated) system output frequency.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4487</DescriptionTextId>
        <LabelTextId>4488</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4262</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_na_leadAcidCellCount</ProgrammaticName>
        <EngineeringDescription>Battery cell count - lead acid. The number of cells that comprise the lead acid battery string.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4489</DescriptionTextId>
        <LabelTextId>4490</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4263</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_bat_na_niCadCellCount</ProgrammaticName>
        <EngineeringDescription>Battery cell count - nickel cadmium. The number of cells that comprise the nickel cadmium battery string.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4491</DescriptionTextId>
        <LabelTextId>4492</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4264</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_va_outRated</ProgrammaticName>
        <EngineeringDescription>Output apparent power rating. The maximum rated VA for the system; this value is based upon the model type and is typically limited by the wiring, breakers, power devices, etc.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4493</DescriptionTextId>
        <LabelTextId>4494</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4265</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_w_outRated</ProgrammaticName>
        <EngineeringDescription>Output real power rating. The maximum rated watts for the system; this value is based upon the model type and is typically limited by the wiring, breakers, power devices, etc.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4495</DescriptionTextId>
        <LabelTextId>4496</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4266</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_inp_cfgIsolationTransformer</ProgrammaticName>
        <EngineeringDescription>Input isolation transformer. Indicates if the transformer is installed or not.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4497</DescriptionTextId>
        <LabelTextId>4498</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4105</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4267</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ec_outRating</ProgrammaticName>
        <EngineeringDescription>System output maximum amperage rating. The maximum rated amperage for the system; this value is based upon the model type and is typically limited by the wiring, breakers, power devices, etc.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4501</DescriptionTextId>
        <LabelTextId>4502</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4268</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_upsModuleCount</ProgrammaticName>
        <EngineeringDescription>Number of UPS modules in the system. In a single module system, this value is one.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4503</DescriptionTextId>
        <LabelTextId>4504</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4269</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_na_upsModuleRdntCnt</ProgrammaticName>
        <EngineeringDescription>Number of redundant UPS modules in the system. In a single module system, the value is zero.


This value is dependent upon the present load and the number of modules (i.e. the value may change during normal operation based upon a load change). This value represents the number of extra modules above the minimum needed to support the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4505</DescriptionTextId>
        <LabelTextId>4506</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4270</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact01</ProgrammaticName>
        <EngineeringDescription>The external input contact 1. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4533</DescriptionTextId>
        <LabelTextId>4534</LabelTextId>
        <EventDefn>
            <DataId>4270</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4271</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact02</ProgrammaticName>
        <EngineeringDescription>The external input contact 2. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4535</DescriptionTextId>
        <LabelTextId>4536</LabelTextId>
        <EventDefn>
            <DataId>4271</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4272</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact03</ProgrammaticName>
        <EngineeringDescription>The external input contact 3. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4537</DescriptionTextId>
        <LabelTextId>4538</LabelTextId>
        <EventDefn>
            <DataId>4272</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4273</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact04</ProgrammaticName>
        <EngineeringDescription>The external input contact 4. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4539</DescriptionTextId>
        <LabelTextId>4540</LabelTextId>
        <EventDefn>
            <DataId>4273</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4274</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact05</ProgrammaticName>
        <EngineeringDescription>The external input contact 5. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4541</DescriptionTextId>
        <LabelTextId>4542</LabelTextId>
        <EventDefn>
            <DataId>4274</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4275</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact06</ProgrammaticName>
        <EngineeringDescription>The external input contact 6. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4543</DescriptionTextId>
        <LabelTextId>4544</LabelTextId>
        <EventDefn>
            <DataId>4275</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4276</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact07</ProgrammaticName>
        <EngineeringDescription>The external input contact 7. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4545</DescriptionTextId>
        <LabelTextId>4546</LabelTextId>
        <EventDefn>
            <DataId>4276</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4277</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact08</ProgrammaticName>
        <EngineeringDescription>The external input contact 8. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4547</DescriptionTextId>
        <LabelTextId>4548</LabelTextId>
        <EventDefn>
            <DataId>4277</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4278</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact09</ProgrammaticName>
        <EngineeringDescription>The external input contact 9. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4549</DescriptionTextId>
        <LabelTextId>4550</LabelTextId>
        <EventDefn>
            <DataId>4278</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4279</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact10</ProgrammaticName>
        <EngineeringDescription>The external input contact 10. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4551</DescriptionTextId>
        <LabelTextId>4552</LabelTextId>
        <EventDefn>
            <DataId>4279</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4280</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact11</ProgrammaticName>
        <EngineeringDescription>The external input contact 11. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4553</DescriptionTextId>
        <LabelTextId>4554</LabelTextId>
        <EventDefn>
            <DataId>4280</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4281</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact12</ProgrammaticName>
        <EngineeringDescription>The external input contact 12. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4555</DescriptionTextId>
        <LabelTextId>4556</LabelTextId>
        <EventDefn>
            <DataId>4281</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4282</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact13</ProgrammaticName>
        <EngineeringDescription>The external input contact 13. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4557</DescriptionTextId>
        <LabelTextId>4558</LabelTextId>
        <EventDefn>
            <DataId>4282</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4283</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact14</ProgrammaticName>
        <EngineeringDescription>The external input contact 14. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4559</DescriptionTextId>
        <LabelTextId>4560</LabelTextId>
        <EventDefn>
            <DataId>4283</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4284</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact15</ProgrammaticName>
        <EngineeringDescription>The external input contact 15. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4561</DescriptionTextId>
        <LabelTextId>4562</LabelTextId>
        <EventDefn>
            <DataId>4284</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4285</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_ext_inpContact16</ProgrammaticName>
        <EngineeringDescription>The external input contact 16. It is either active or inactive.


It becomes inactive when the external signal is not active.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4563</DescriptionTextId>
        <LabelTextId>4564</LabelTextId>
        <EventDefn>
            <DataId>4285</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4286</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_userOutAmpOverPhsA</ProgrammaticName>
        <EngineeringDescription>The phase A load has exceeded the user amperage threshold. This does not necessarily mean that the unit is overloaded.


It becomes inactive when load is below the thresold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4565</DescriptionTextId>
        <LabelTextId>4566</LabelTextId>
        <EventDefn>
            <DataId>4286</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4287</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_userOutAmpOverPhsB</ProgrammaticName>
        <EngineeringDescription>The phase B load has exceeded the user amperage threshold. This does not necessarily mean that the unit is overloaded.


It becomes inactive when load is below the thresold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4567</DescriptionTextId>
        <LabelTextId>4568</LabelTextId>
        <EventDefn>
            <DataId>4287</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4288</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_userOutAmpOverPhsC</ProgrammaticName>
        <EngineeringDescription>The phase C load has exceeded the user amperage threshold. This does not necessarily mean that the unit is overloaded.


It becomes inactive when load is below the thresold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4569</DescriptionTextId>
        <LabelTextId>4570</LabelTextId>
        <EventDefn>
            <DataId>4288</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4289</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_xfrInhibitExt</ProgrammaticName>
        <EngineeringDescription>Transfer of critical bus source to inverter is inhibited by an external signal.


It becomes inactive when the external signal has been cleared.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4571</DescriptionTextId>
        <LabelTextId>4572</LabelTextId>
        <EventDefn>
            <DataId>4289</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4290</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_shutdownOverload</ProgrammaticName>
        <EngineeringDescription>The inverter has shutdown due to a sustained overload.


This event does not indicate if the load has been dropped or if the load has been transfered to bypass.


At least one phase of the inverter power dissipation limit has been exceeded (Power or RMS current vs time curve). Generally, the UPS will take action to protect the inverter from the overload condition.


It becomes inactive when transfer to inverter is permitted or if system is restarted.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4573</DescriptionTextId>
        <LabelTextId>4574</LabelTextId>
        <EventDefn>
            <DataId>4290</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4291</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_temp_inletAir</ProgrammaticName>
        <EngineeringDescription>The temperature of the inlet air.


This is measured using a sensor that is mounted near the air inlet and approximately measures the external air temperature. The air inlet provides most of the air used to dissipate execess heat in the system.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4575</DescriptionTextId>
        <LabelTextId>4576</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>7</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4292</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_tm_operating</ProgrammaticName>
        <EngineeringDescription>The cumulative operation time of the unit. This value persists across a reboot event (i.e. total operation time as opposed to system up time).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4577</DescriptionTextId>
        <LabelTextId>4578</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4293</DataId>
        <DefnType>TimeDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_tm_dateTime</ProgrammaticName>
        <EngineeringDescription>The system date and time (generally based on a real-time clock).
        NOTE: This is generally the local time. It is not Coordinated Universal Time (UTC) unless the local time zone is GMT.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4579</DescriptionTextId>
        <LabelTextId>4580</LabelTextId>
        <TimeDefn>
            <DataId>4293</DataId>
            <Epoch_Id>0</Epoch_Id>
        </TimeDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4294</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_inletAirOverTemp</ProgrammaticName>
        <EngineeringDescription>The inlet air exceeds the maximum temperature threshold.


It becomes inactive when the temperature drops below the threshold.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4581</DescriptionTextId>
        <LabelTextId>4582</LabelTextId>
        <EventDefn>
            <DataId>4294</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4295</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rct_failure</ProgrammaticName>
        <EngineeringDescription>Rectifier failure - rectifier is off.



Summary event based on the detection of one or more rectifier faults. The possible faults include, but are not limited to the following: Battery Overcharge, DC Overvoltage Steady State, DC Overvoltage Transient, DC Undervoltage Steady State, Rectifier Delta/Wye Current Imbalance, Delta Rectifier Fuse Fail, Wye Rectifier Fuse Fail, Rectifier Sync Loss, Input Current Imbalance, Input Filter Fuse Failure, etc.


It becomes inactive when all rectifier faults have cleared.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4583</DescriptionTextId>
        <LabelTextId>4584</LabelTextId>
        <EventDefn>
            <DataId>4295</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4296</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rct_inhibitExt</ProgrammaticName>
        <EngineeringDescription>The operation of the rectifier is inhibited by an external signal.



It becomes inactive when the external signal has been cleared.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4585</DescriptionTextId>
        <LabelTextId>4586</LabelTextId>
        <EventDefn>
            <DataId>4296</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4297</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_loadOnInverter</ProgrammaticName>
        <EngineeringDescription>The output power is supplied by the inverter.


It becomes inactive when not on inverter.

NOTE: It is highly recommended that support for 'st_sys_outputSource' or 'st_load_source' be included if this event is supported.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4587</DescriptionTextId>
        <LabelTextId>4588</LabelTextId>
        <EventDefn>
            <DataId>4297</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4298</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_loadOnBypass</ProgrammaticName>
        <EngineeringDescription>The output power is supplied by the bypass.


It becomes inactive when not on bypass.

NOTE: It is highly recommended that support for 'st_sys_outputSource' or 'st_load_source' be included if this event is supported.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4589</DescriptionTextId>
        <LabelTextId>4590</LabelTextId>
        <EventDefn>
            <DataId>4298</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4299</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_loadOnMaintBypass</ProgrammaticName>
        <EngineeringDescription>The output power is supplied by the maintenance bypass.

It becomes inactive when not on maintenance bypass.

NOTE: It is highly recommended that support for 'st_sys_outputSource' or 'st_load_source' be included if this event is supported.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4591</DescriptionTextId>
        <LabelTextId>4592</LabelTextId>
        <EventDefn>
            <DataId>4299</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4300</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_internalCommFailure</ProgrammaticName>
        <EngineeringDescription>The control has detected a communication failure of a component on the internal communication bus. Summary event that indicates that there is an internal communication failure.

It becomes inactive when all internal communication problems clear.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4593</DescriptionTextId>
        <LabelTextId>4594</LabelTextId>
        <EventDefn>
            <DataId>4300</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4301</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rct_cfgInpFilterPassiveSwitch</ProgrammaticName>
        <EngineeringDescription>Rectifier input passive filter swtich configuration (installed or not installed).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4599</DescriptionTextId>
        <LabelTextId>4600</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4105</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4302</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rct_cfgInpFilterActive</ProgrammaticName>
        <EngineeringDescription>Rectifier input active filter configuration (installed or not installed).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4601</DescriptionTextId>
        <LabelTextId>4602</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4105</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4303</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_cfgUpsModuleType</ProgrammaticName>
        <EngineeringDescription>UPS module type.
SMS -- Single Module System (i.e. standalone UPS)

1 + 1 -- Redundant system for capacity (the two modules do NOT share the load)

1 + N -- Distributed multi-module system. Each module contains a bypass and can operate to share the load among the modules. Uses a System Parelleling Cabinet to tie the outputs together.

N + 1 -- A multi-module system with one bypass for the system (i.e. System Control Cabinet).

SCC -- System Control Cabinet used in a N+1 system to provide a single bypass for the system.

MSS -- Main Static Switch</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4603</DescriptionTextId>
        <LabelTextId>4604</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4107</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4304</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_cfgBypWire</ProgrammaticName>
        <EngineeringDescription>Bypass input wire configuration. It represents the number of phases and the presence or absence of a neutral. Example: four wire, which represents 3 phases plus neutral.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4605</DescriptionTextId>
        <LabelTextId>4606</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4108</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4305</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_cfgOutWire</ProgrammaticName>
        <EngineeringDescription>Output wire configuration. It represents the number of phases and the presence or absence of a neutral. Example: four wire, which represents 3 phases plus neutral.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4607</DescriptionTextId>
        <LabelTextId>4608</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4108</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4306</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_cfgStaticSwitchType</ProgrammaticName>
        <EngineeringDescription>Static switch type configuration (N/A, continous duty, or momentary duty)</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4609</DescriptionTextId>
        <LabelTextId>4610</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4109</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4307</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_ups_outputSource</ProgrammaticName>
        <EngineeringDescription>The UPS's output power source (inverter, bypass, or none).

        NOTE: It is possible that the load still has power from the Maintenance Bypass, see 'st_load_source'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4611</DescriptionTextId>
        <LabelTextId>4612</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4110</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4308</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_dcb_groundFaultPos</ProgrammaticName>
        <EngineeringDescription>A ground fault has been detected on the positive DC bus link.



Becomes inactive when the positive link ground fault clears.

Also see 'evt_bat_groundFault' and 'evt_dcb_groundFaultNeg'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4613</DescriptionTextId>
        <LabelTextId>4614</LabelTextId>
        <EventDefn>
            <DataId>4308</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4309</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_dcb_groundFaultNeg</ProgrammaticName>
        <EngineeringDescription>A ground fault has been detected on the negative DC bus link.

Becomes inactive when the negative link ground fault clears.

Also see 'evt_bat_groundFault' and 'evt_dcb_groundFaultPos'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4615</DescriptionTextId>
        <LabelTextId>4616</LabelTextId>
        <EventDefn>
            <DataId>4309</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4310</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_overTemperature</ProgrammaticName>
        <EngineeringDescription>Equipment over temperature.

Summary event based on the detection of at least one temperature exeeding a threshold. The temperatures may include but are not limited to the following:

Outlet Air Over Temperature,

Rectifier Heatsink Over Temperature,

Inverter Heatsink Over Temperature,

Static Bypass Switch Heatsink Over Temperature,

SSS Heatsink Over Temperature

Becomes inactive when all temperatures return to normal operating range.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4617</DescriptionTextId>
        <LabelTextId>4618</LabelTextId>
        <EventDefn>
            <DataId>4310</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4311</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_fanFailure</ProgrammaticName>
        <EngineeringDescription>System fan failure - one or more fans have failed.

NOTE: This is a failure of one or more fans that are cooling the system internal components, as opposed to an environmental unit's blower failure.

Becomes inactive when all fan failures are corrected.

        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4619</DescriptionTextId>
        <LabelTextId>4620</LabelTextId>
        <EventDefn>
            <DataId>4311</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4312</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Rejected</EntryStatus>
        <ProgrammaticName>evt_sys_fanMultipleFailure</ProgrammaticName>
        <EngineeringDescription>@todo Available for new definition</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4621</DescriptionTextId>
        <LabelTextId>4622</LabelTextId>
        <EventDefn>
            <DataId>4312</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4313</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_passwordChanged</ProgrammaticName>
        <EngineeringDescription>The password changed.

This is intended to be a notification, see DataEvent16 in 'Velocity FDM Specification.doc'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4623</DescriptionTextId>
        <LabelTextId>4624</LabelTextId>
        <EventDefn>
            <DataId>4313</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4314</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_powerSupplyFailure</ProgrammaticName>
        <EngineeringDescription>Power supply failure.

This is a summary event based on the detection of at least one power supply failure. The failure may be due to one or more, but are not limited to the following faults:

Input Power Supply Fault

Bypass Power Supply Fault

DC Power Supply Fault

Output Power Supply Fault

EPO Power Supply Fault

Option Power Supply Fault

etc.

Becomes inactive when all of the faults are corrected.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4625</DescriptionTextId>
        <LabelTextId>4626</LabelTextId>
        <EventDefn>
            <DataId>4314</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4315</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_inpOnGenerator</ProgrammaticName>
        <EngineeringDescription>A generator is supplying the power to the system.

Becomes inactive when the generator is not supplying the system power.

Also see 'st_sys_inpSource'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4627</DescriptionTextId>
        <LabelTextId>4628</LabelTextId>
        <EventDefn>
            <DataId>4315</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4316</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_autoRestartInProgress</ProgrammaticName>
        <EngineeringDescription>Auto restart is in progress.

Becomes inactive when auto restart completes or fails.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4629</DescriptionTextId>
        <LabelTextId>4630</LabelTextId>
        <EventDefn>
            <DataId>4316</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4317</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_autoRestartInhibitExt</ProgrammaticName>
        <EngineeringDescription>Auto restart inhibited due to an external signal.

Becomes inactive when the external signal clears.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4631</DescriptionTextId>
        <LabelTextId>4632</LabelTextId>
        <EventDefn>
            <DataId>4317</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4318</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_inpSource</ProgrammaticName>
        <EngineeringDescription>The system input power source (none, utility, generator).

Also see 'evt_sys_inpOnGenerator'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4633</DescriptionTextId>
        <LabelTextId>4634</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4111</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4319</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_load_source</ProgrammaticName>
        <EngineeringDescription>The load power source (UPS, Maintenance Bypass, Load Off).

        Also see 'st_ups_outputSource'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4637</DescriptionTextId>
        <LabelTextId>4636</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4112</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4320</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_manXfr</ProgrammaticName>
        <EngineeringDescription>User initiated manual transfer to bypass.

This is intended to be a notification, see DataEvent16 in 'Velocity FDM Specification.doc'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4638</DescriptionTextId>
        <LabelTextId>4639</LabelTextId>
        <EventDefn>
            <DataId>4320</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4321</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_manReXfr</ProgrammaticName>
        <EngineeringDescription>User initiated manual transfer to inverter.

This is intended to be a notification, see DataEvent16 in 'Velocity FDM Specification.doc'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4640</DescriptionTextId>
        <LabelTextId>4641</LabelTextId>
        <EventDefn>
            <DataId>4321</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4322</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_testPassed</ProgrammaticName>
        <EngineeringDescription>Battery test passed.

This is intended to be a notification, see DataEvent16 in 'Velocity FDM Specification.doc'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4642</DescriptionTextId>
        <LabelTextId>4643</LabelTextId>
        <EventDefn>
            <DataId>4322</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4323</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_testFailed</ProgrammaticName>
        <EngineeringDescription>Battery test failed.

This is intended to be a notification, see DataEvent16 in 'Velocity FDM Specification.doc'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4644</DescriptionTextId>
        <LabelTextId>4645</LabelTextId>
        <EventDefn>
            <DataId>4323</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4324</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_testManualStop</ProgrammaticName>
        <EngineeringDescription>@todo user initiated or automatic? The battery test was manually stopped prior to completion.

This is intended to be a notification, see DataEvent16 in 'Velocity FDM Specification.doc'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4646</DescriptionTextId>
        <LabelTextId>4647</LabelTextId>
        <EventDefn>
            <DataId>4324</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4325</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_backfeedBrkrOpen</ProgrammaticName>
        <EngineeringDescription>The backfeed breaker is in the open position.

It becomes inactive when the bypass backfeed breaker is closed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4648</DescriptionTextId>
        <LabelTextId>4649</LabelTextId>
        <EventDefn>
            <DataId>4325</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4326</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_fanStatus</ProgrammaticName>
        <EngineeringDescription>System fan status (unknown, normal, failure). This is set to 'failure' if one or more fans have failed.

NOTE: This is the status of the fans that are cooling the system internal components, as opposed to an environmental unit's blower failure.

Also see: 'st_sys_fanRedundant' and 'st_sys_fanCapacity'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4650</DescriptionTextId>
        <LabelTextId>4651</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4113</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4327</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_fanRedundant</ProgrammaticName>
        <EngineeringDescription>System fan redundant status (unknown, redundancy available, or loss of redundancy)

NOTE: This is the status of the fans that are cooling the system internal components, as opposed to an environmental unit's blower failure.

Also see: 'st_sys_fanStatus' and 'st_sys_fanCapacity'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4652</DescriptionTextId>
        <LabelTextId>4653</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4114</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4328</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_sys_fanCapacity</ProgrammaticName>
        <EngineeringDescription>System fan capacity status (unknown, adequate, or inadequate)

NOTE: This is the status of the fans that are cooling the system internal components, as opposed to an environmental unit's blower failure.

Also see: 'st_sys_fanStatus', and 'st_sys_fanRedundant'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4654</DescriptionTextId>
        <LabelTextId>4655</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4115</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4329</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_name</ProgrammaticName>
        <EngineeringDescription>End user assigned name for the system. The name allows users to easily recognize the system.</EngineeringDescription>
        <EngineeringReference>SNMP:MIB II sysName, SNMP:UPS RFC-1628 upsIdentName</EngineeringReference>
        <DescriptionTextId>4666</DescriptionTextId>
        <LabelTextId>4665</LabelTextId>
        <TextDefn>
            <DataId>4329</DataId>
        </TextDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4330</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_description</ProgrammaticName>
        <EngineeringDescription>End user assigned description for the system.

Free form description of the system.</EngineeringDescription>
        <EngineeringReference>SNMP:MIB II:sysDescr</EngineeringReference>
        <DescriptionTextId>4668</DescriptionTextId>
        <LabelTextId>4667</LabelTextId>
        <TextDefn>
            <DataId>4330</DataId>
        </TextDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4331</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_location</ProgrammaticName>
        <EngineeringDescription>End user assigned location of the system</EngineeringDescription>
        <EngineeringReference>SNMP:MIB II:sysLocation</EngineeringReference>
        <DescriptionTextId>4670</DescriptionTextId>
        <LabelTextId>4669</LabelTextId>
        <TextDefn>
            <DataId>4331</DataId>
        </TextDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4332</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_contact</ProgrammaticName>
        <EngineeringDescription>End user assigned contact information for the system.

Person or organization to contact in case of problems with the system.</EngineeringDescription>
        <EngineeringReference>SNMP:MIB II:sysContact</EngineeringReference>
        <DescriptionTextId>4672</DescriptionTextId>
        <LabelTextId>4671</LabelTextId>
        <TextDefn>
            <DataId>4332</DataId>
        </TextDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4333</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_manufacturer</ProgrammaticName>
        <EngineeringDescription>Manufacturer of the system.</EngineeringDescription>
        <EngineeringReference>SNMP:lgpAgentIdentManufacturer, SNMP:lgpAgentDeviceManufacturer</EngineeringReference>
        <DescriptionTextId>4674</DescriptionTextId>
        <LabelTextId>4673</LabelTextId>
        <TextDefn>
            <DataId>4333</DataId>
        </TextDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4334</DataId>
        <DefnType>TimeDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_tm_manufacturerDate</ProgrammaticName>
        <EngineeringDescription>Manufacturing date of the system.</EngineeringDescription>
        <EngineeringReference>SNMP:lgpAgentDeviceManufactureDate</EngineeringReference>
        <DescriptionTextId>4676</DescriptionTextId>
        <LabelTextId>4675</LabelTextId>
        <TimeDefn>
            <DataId>4334</DataId>
            <Epoch_Id>0</Epoch_Id>
        </TimeDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4335</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_firmwareVersion</ProgrammaticName>
        <EngineeringDescription>Firmware version identifier.</EngineeringDescription>
        <EngineeringReference>SNMP:lgpAgentIdentFirmwareVersion, SNMP:lgpAgentDeviceFirmwareVersion</EngineeringReference>
        <DescriptionTextId>4678</DescriptionTextId>
        <LabelTextId>4677</LabelTextId>
        <TextDefn>
            <DataId>4335</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4336</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_stk_na_vel485outBufPeak</ProgrammaticName>
        <EngineeringDescription>MS/TP 485 stack output buffer high water mark, in number of messages.

This is calculated based on the buffer that has the largest number of messages in it.  The four buffers are: Normal, Urgent, Critical Equipment, and Life Safety.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4679</DescriptionTextId>
        <LabelTextId>4680</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4337</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_stk_na_vel485outBufSize</ProgrammaticName>
        <EngineeringDescription>MS/TP 485 stack output buffer size in number of messages.

This is the size of each of the four output buffers. The four buffers are: Normal, Urgent, Critical Equipment, and Life Safety.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4689</DescriptionTextId>
        <LabelTextId>4690</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4338</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_stk_na_vel485HeaderCrcErrors</ProgrammaticName>
        <EngineeringDescription>The total number of header CRC errors for all MS/TP 485 stacks in the system since boot.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4681</DescriptionTextId>
        <LabelTextId>4682</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4339</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_stk_na_vel485DataCrcErrors</ProgrammaticName>
        <EngineeringDescription>The total number of data CRC errors for all MS/TP 485 stacks in the system since boot.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4683</DescriptionTextId>
        <LabelTextId>4684</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4340</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_stk_na_velAuthenFailure</ProgrammaticName>
        <EngineeringDescription>The number of messages rejected by Velocity due to authentication failures.  This is the total for all Velocity stacks in the system since boot.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4685</DescriptionTextId>
        <LabelTextId>4686</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4341</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_stk_velAuthenFailure</ProgrammaticName>
        <EngineeringDescription>Notification of a message rejected by Velocity due to an authentication failure.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4687</DescriptionTextId>
        <LabelTextId>4688</LabelTextId>
        <EventDefn>
            <DataId>4341</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4342</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_stk_na_velRtrCacheMissCnt</ProgrammaticName>
        <EngineeringDescription>The number of router cache lookups that resulted in a miss.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4691</DescriptionTextId>
        <LabelTextId>4692</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4343</DataId>
        <DefnType>IPAddressDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_netAddress</ProgrammaticName>
        <EngineeringDescription>Network address.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4693</DescriptionTextId>
        <LabelTextId>4694</LabelTextId>
        <IPAddressDefn>
            <DataId>4343</DataId>
        </IPAddressDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4344</DataId>
        <DefnType>IPAddressDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_netGateway</ProgrammaticName>
        <EngineeringDescription>Network gateway address.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4695</DescriptionTextId>
        <LabelTextId>4696</LabelTextId>
        <IPAddressDefn>
            <DataId>4344</DataId>
        </IPAddressDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4345</DataId>
        <DefnType>IPAddressDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_netMask</ProgrammaticName>
        <EngineeringDescription>Network mask.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4697</DescriptionTextId>
        <LabelTextId>4698</LabelTextId>
        <IPAddressDefn>
            <DataId>4345</DataId>
        </IPAddressDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4346</DataId>
        <DefnType>IPAddressDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_netDNS1</ProgrammaticName>
        <EngineeringDescription>Network domain name server (DNS)
        #1.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4699</DescriptionTextId>
        <LabelTextId>4700</LabelTextId>
        <IPAddressDefn>
            <DataId>4346</DataId>
        </IPAddressDefn>
    </DataDictEntry>
    <DataDictEntry>
        <DataId>4347</DataId>
        <DefnType>IPAddressDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_sys_netDNS2</ProgrammaticName>
        <EngineeringDescription>Network domain name server (DNS)
        #2.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4701</DescriptionTextId>
        <LabelTextId>4702</LabelTextId>
        <IPAddressDefn>
            <DataId>4347</DataId>
        </IPAddressDefn>
    </DataDictEntry>

    <!-- Started to add MPX related items -->
    <DataDictEntry>
        <DataId>4348</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rcp_labelSysAssign</ProgrammaticName>
        <EngineeringDescription>This is the label assigned to the receptacle at runtime by the system. The value is independent of any user assigned label or asset tag.

The exact format of this label is system dependent and is subject to change; it should not be used for programmatic parsing/deconstruction.

MPX SPECIFIC: The system assigned label that is of the form "RCP: x-y-z", where 'x' is the one-based index of the PDU, 'y' is the one-based Branch Receptacle Module Identifier and 'z' is the one-based index of the receptacle within the BRM.
The value of the 'x' and 'y' fields are determined by the value of 'val_aps_id' and 'val_rem_id' fields from the associated PDU and BRM reports, respectively.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4703</DescriptionTextId>
        <LabelTextId>4704</LabelTextId>
        <TextDefn>
            <DataId>4348</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4349</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rcp_type</ProgrammaticName>
        <EngineeringDescription>Receptacle Type (form factor and amperage rating)

For example, this includes but is not limited to the following receptacle types:
- 20 Amp (NEMA 5-20R)
- 10 Amp (IEC C13 sheet F)
- 16 Amp (IEC C19 sheet J)</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4708</DescriptionTextId>
        <LabelTextId>4709</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4116</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4350</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rcp_lineSource</ProgrammaticName>
        <EngineeringDescription>Receptacle Wiring. This is the receptacle power source line configuration (for example, L1-to-N or L1-to-L2).

This is used to indicate the lines (L1, L2, L3, N) from which the Branch Receptacle Module is being powered.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4716</DescriptionTextId>
        <LabelTextId>4717</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4117</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4351</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rcp_capabilities</ProgrammaticName>
        <EngineeringDescription>Receptacle Capabilites indicates the monitoring and/or control capability, etc. These capabilities are associated with the receptacle.

This is intended to be used with a single receptacle. Reference 'st_rem_capabilities' for Branch Branch Receptacle Module (BRM) capabilities.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4721</DescriptionTextId>
        <LabelTextId>4722</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4118</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4352</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_ep_outRms</ProgrammaticName>
        <EngineeringDescription>Voltage (RMS) measured at the receptacle.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4723</DescriptionTextId>
        <LabelTextId>4724</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4353</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_ec_outRms</ProgrammaticName>
        <EngineeringDescription>Current (RMS) being delivered to the load attached to the receptacle.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4725</DescriptionTextId>
        <LabelTextId>4726</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4354</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pwr_out</ProgrammaticName>
        <EngineeringDescription>Power (watts) measured at the receptacle.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4727</DescriptionTextId>
        <LabelTextId>4728</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4355</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_ap_out</ProgrammaticName>
        <EngineeringDescription>Apparent Power (volt-amps) measured at the receptacle.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4729</DescriptionTextId>
        <LabelTextId>4730</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4356</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pf</ProgrammaticName>
        <EngineeringDescription>Receptacle Power Factor, which is the ratio of real power to apparent power (i.e. ratio of watts to volts-amps).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4731</DescriptionTextId>
        <LabelTextId>4732</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4357</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_freq</ProgrammaticName>
        <EngineeringDescription>The line frequency measured at the receptacle.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4733</DescriptionTextId>
        <LabelTextId>4734</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4358</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_enrg_accumulated</ProgrammaticName>
        <EngineeringDescription>Total accumulated energy, measured at the receptacle, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset. Writing a non-zero value is invalid and shall result in a write error and the total energy value remains unchanged.

The energy is typically measured in watt-hours or killowatt-hours. If the energy has not been reset and has not wrapped, then this is the total energy since installation.

This value persists across boot events.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4735</DescriptionTextId>
        <LabelTextId>4736</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>10</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4359</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rcp_labelUsrAssign</ProgrammaticName>
        <EngineeringDescription>Receptacle Label - End user assigned label that is not required to be unique within a system.


MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a receptacle within a cluster of PDUs.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4739</DescriptionTextId>
        <LabelTextId>4740</LabelTextId>
        <TextDefn>
            <DataId>4359</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4360</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rcp_ec_over</ProgrammaticName>
        <EngineeringDescription>The system has detected a receptacle over current condition.  The current has exceeded a pre-determined threshold for the receptacle load current by a defined amplitude and amount of time.

The severity of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the recptacle current is less than "the over current threshold minus the hysteresis" OR if the receptacle is uninstalled.

MPX product: The event is either a WARNING or an ALARM, depending upon the severity of the over current condition. The thresold value is configurable by the user.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4741</DescriptionTextId>
        <LabelTextId>4742</LabelTextId>
        <EventDefn>
            <DataId>4360</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4361</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rcp_ec_under</ProgrammaticName>
        <EngineeringDescription>The system has detected a receptacle under current condition.  The current is less than pre-determined threshold for the receptacle load current by a defined amplitude and amount of time.

The severity of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the receptacle current exceeds "the threshold plus hysteresis" OR if the receptacle is uninstalled.

MPX product: The event is an ALARM. The threshold value is configurable by the user via 'val_rcp_ec_thrshldUnderAlarm' or 'val_rcp_pct_ecThrshldUnderAlarm'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4743</DescriptionTextId>
        <LabelTextId>4744</LabelTextId>
        <EventDefn>
            <DataId>4361</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4362</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rcp_pwrState</ProgrammaticName>
        <EngineeringDescription>Receptacle Power State - indicates the availability of power to the receptacle.

The power states have the following meanings:

ON - The receptacle power is ON.

OFF - The receptacle power is OFF.

POWER ON DELAY - The receptacle is temporarily OFF. Once the receptacle's "power on delay" has expired, the receptacle shall transition to the ON state.

REBOOT DELAY - The receptacle is temporarily OFF and, after a short delay, shall transition to the ON state.

UNKNOWN - Unable to determine the present state of the receptacle. This might occur shortly after a boot event, where the system has not yet had a chance to fully discover the system's configuration. Once the system is up and running in a steady state condition, this value would only occur if there is a system communication issue.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4745</DescriptionTextId>
        <LabelTextId>4746</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4119</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4363</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rcp_assetTag01</ProgrammaticName>
        <EngineeringDescription>User assigned receptacle asset tag - User assigned label to identify a receptacle, or possibly a set of receptacles.

Asset tag values are not required to be unique.

MPX Product: Only 7-bit ASCII characters are supported.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4751</DescriptionTextId>
        <LabelTextId>4752</LabelTextId>
        <TextDefn>
            <DataId>4363</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4364</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rcp_assetTag02</ProgrammaticName>
        <EngineeringDescription>User assigned receptacle asset tag - User assigned label to identify a receptacle, or possibly a set of receptacles.

Asset tag values are not required to be unique.

MPX Product: Only 7-bit ASCII characters are supported.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4753</DescriptionTextId>
        <LabelTextId>4754</LabelTextId>
        <TextDefn>
            <DataId>4364</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4365</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rcp_control</ProgrammaticName>
        <EngineeringDescription>Receptacle Power Control (OFF, ON or CYCLE) is used to modify the power state of a receptacle. The values that may be written are:

- OFF -- The receptacle shall be set to the OFF state and shall remain in that state (i.e. power is removed from the receptacle).

- ON -- The receptacle shall be set to the ON state and shall remain in that state (i.e. power is applied to the receptacle).

- CYCLE -- If and only if the receptacle is ON, the power is removed from the receptacle and then, after a product-dependent delay, it is re-applied and shall remain in the ON state. In other words, the state changes from ON to OFF and back to ON.

If the receptacle is OFF and a CYCLE power request is made, then the receptacle state does not change (i.e. it remains OFF). Writing CYCLE to receptacle that is OFF shall result in a write error status, and the state of the receptacle power shall remain unchanged.


NOTE: If a receptacle supports the concept of a lock attribute, then the receptacle must be UNLOCKED for this write operation to have any impact; reference 'st_rcp_lockState'. If a receptacle is LOCKED when an attempt to change the power state occurs, it shall result in a write error and the value of the power state shall not change.
NOTE: The ON and OFF request persists, where as the CYCLE request does not persist.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4755</DescriptionTextId>
        <LabelTextId>4756</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4120</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4366</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rcp_controlLock</ProgrammaticName>
        <EngineeringDescription>The receptacle control lock state. User control of the receptacle power state is inhibited while LOCKED.

If it is LOCKED and the user attempts to change the receptacle power state (via 'st_rcp_control'), the request shall be rejected.

To change the receptacle power state for a receptacle that is LOCKED, the following is required:
- Set the receptacle to the UNLOCKED state
- Modify the receptacle power state via 'st_rcp_control'.
- OPTIONALLY, set the receptacle back to the LOCKED state.

Reference 'st_rcp_control', which is used to alter the power state of a receptacle.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4760</DescriptionTextId>
        <LabelTextId>4761</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4121</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4367</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_ec_thrshldUnderAlarm</ProgrammaticName>
        <EngineeringDescription>If the receptacle current is below this threshold, an alarm is activated; see 'evt_rcp_ec_under'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE: The hysteresis level is product dependent (it may be fixed or programmable):
- MPX Product: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4764</DescriptionTextId>
        <LabelTextId>4765</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4369</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_ec_thrshldOverWarn</ProgrammaticName>
        <EngineeringDescription>If the receptacle current is above this threshold, a warning is activated; see 'evt_rcp_ec_over'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE: The hysteresis level is product dependent (it may be fixed or programmable):
- MPX Product: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4766</DescriptionTextId>
        <LabelTextId>4767</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4370</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_ec_thrshldOverAlarm</ProgrammaticName>
        <EngineeringDescription>If the receptacle current is above this threshold, an alarm is activated; see 'evt_rcp_ec_over'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE: The hysteresis level is product dependent (it may be fixed or programmable):
- MPX Product: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4768</DescriptionTextId>
        <LabelTextId>4769</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4371</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pwrOnDelay</ProgrammaticName>
        <EngineeringDescription>Receptacle power on delay after a boot event - this parameter is used at power up or at a reboot event for receptacles that are configured to be in the ON state.

Such receptacles will be turned on AFTER delaying this configured amount of time. A value of zero implies that there is no delay (i.e. the receptacle is turned as soon as possible).

EXAMPLE: If a receptacle is configured to be ON and has 10 second power on delay, then the receptacle will be turned on roughly 10 seconds after a reboot. The delay value is ONLY used if the receptacle is configured to the ON state.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4770</DescriptionTextId>
        <LabelTextId>4771</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>1</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4372</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_labelSysAssign</ProgrammaticName>
        <EngineeringDescription>This is the label assigned to the Branch Receptacle Module at runtime by the system. The value is independent of any user assigned label or asset tag.

The exact format of this label is system dependent and is subject to change; it should not be used for programmatic parsing-deconstruction.

MPX SPECIFIC: The system assigned label that is of the form "BRM: x-y", where 'x' is the one-based index of the PDU, 'y' is the one-based Branch Receptacle Module Identifier(BRM).The value of the 'x' and 'y' fields are determined by the value of 'val_aps_id' and 'val_rem_id' fields from the associated PDU and BRM reports, respectively. The value assigned to this field may change as modules are installed or removed.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4772</DescriptionTextId>
        <LabelTextId>4773</LabelTextId>
        <TextDefn>
            <DataId>4372</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4373</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_model</ProgrammaticName>
        <EngineeringDescription>The Branch Receptacle Module (BRM) model designation.

NOTE: This name is not intended for programitic usage (i.e. a client should not program its behavior based upon the value of this object).</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4774</DescriptionTextId>
        <LabelTextId>4775</LabelTextId>
        <TextDefn>
            <DataId>4373</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4374</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rem_rcpType</ProgrammaticName>
        <EngineeringDescription>The form factor and amperage rating of the receptacles in the module.

For example, this includes but is not limited to the following types:
- 20 Amp (NEMA 5-20R)
- 10 Amp (IEC C13 sheet F)
- 16 Amp (IEC C19 sheet J)
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4776</DescriptionTextId>
        <LabelTextId>4777</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4116</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4375</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rem_capabilities</ProgrammaticName>
        <EngineeringDescription>Branch Receptacle Module capabilites indicates the measurement and/or control capability, etc. This applies to the Branch Receptacle Module and its associated receptacles.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4778</DescriptionTextId>
        <LabelTextId>4779</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4118</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4376</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_rem_lineSource</ProgrammaticName>
        <EngineeringDescription>This is the Branch Receptacle Module power source line configuration (for example, L1-to-N or L1-to-L2).

This is used to indicate the lines (L1, L2, L3, N) from which the Branch Receptacle Module and its associated receptacles are being powered.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4780</DescriptionTextId>
        <LabelTextId>4781</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4117</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4377</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_rcpCnt</ProgrammaticName>
        <EngineeringDescription>The number of receptacles in this module.

MPX SPECIFIC: There are somewhere between 2 and 6 receptacles per module.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4782</DescriptionTextId>
        <LabelTextId>4783</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4378</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ep_rated</ProgrammaticName>
        <EngineeringDescription>Rated Line Voltage for the module and its associated receptacles (i.e. This is the nominal line voltage that is available to the connected load; it is NOT the measured voltage.)

If this is a single phase module, the reading is for line-to-neutral, otherwise the reading is line-to-line.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4784</DescriptionTextId>
        <LabelTextId>4785</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4379</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_rated</ProgrammaticName>
        <EngineeringDescription>This is the rated input line current for the module.


MPX Specific: If the total module input current exceeds this rated value, for a specified time, the module's circuit breaker shall open.

NOTE: The rated line current for the module's receptacles may be less than this value, depending upon the specific model.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4786</DescriptionTextId>
        <LabelTextId>4787</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4380</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_freq_rated</ProgrammaticName>
        <EngineeringDescription>Rated line frequency for the module and its associated receptacles (i.e. This is the expected line frequency; it is NOT the measured frequency; it is either 50 Hz or 60 Hz.)</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4788</DescriptionTextId>
        <LabelTextId>4789</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4381</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_enrg_accumulated</ProgrammaticName>
        <EngineeringDescription>Total accumulated energy, measured at the module input, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset. Writing a non-zero value is invalid and shall result in a write error and the total energy value remains unchanged.

The energy is typically measured in watt-hours or killowatt-hours. If the energy has not been reset and has not wrapped, then this is the total energy since installation.

This value persists across boot events.

NOTE: Resetting this value does not reset the values for the individual receptacles.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4790</DescriptionTextId>
        <LabelTextId>4791</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>10</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4382</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_inpCurrentImbal</ProgrammaticName>
        <EngineeringDescription>System Input Currents are Imbalanced. The input currents are imbalanced and have reached the level to indicate a failure in the input circuit.

Becomes inactive when the difference between any single input phase current and relative to the other input phase currents has returned to normal.
RAPTOR SPECIFIC: It is expected that service is required to resolve the current imbalance failure.
</EngineeringDescription>
        <EngineeringReference>See 'Raptor_ERS_Events.doc', Event ID 8</EngineeringReference>
        <DescriptionTextId>4792</DescriptionTextId>
        <LabelTextId>4793</LabelTextId>
        <EventDefn>
            <DataId>4382</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4383</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_byp_remoteOffExt</ProgrammaticName>
        <EngineeringDescription>Bypass static switch is off due to the state of an external signal. The event becomes inactive when the external signal is not active.

        RAPTOR SPECIFIC: The remote bypass static switch off input channel has an external contact in the true condition.

        This is an LEU/LAP option only. LNA does not plan to use Remote Off Bypass Static Switch signal, as such, the LNA units shall not assert this event.

        With the Remote On/Off Operation (136789) setting "Enabled" and Remote Off - Bypass Static Switch (143302) event active, the bypass static switch
        shall be inhibited from operating.

        When the Remote Off - Bypass Static Switch (143302) event is inactive, the bypass static switch shall start automatic restart operation if all the
        conditions for operation are acceptable.
</EngineeringDescription>
        <EngineeringReference>See 'Raptor_ERS_Events.doc', Event ID 281</EngineeringReference>
        <DescriptionTextId>4794</DescriptionTextId>
        <LabelTextId>4795</LabelTextId>
        <EventDefn>
            <DataId>4383</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4384</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bat_disconnectEoD</ProgrammaticName>
        <EngineeringDescription>Battery disconnect due to end-of-discharge. This notification is annunciated when a battery end-of-discharge occurs. There is
        no clearing action for this specialized event type called a NOTIFICATION (i.e. this is a stateless event).

        NOTE: See the event 'evt_sys_outOffEoD'; evt_sys_outOffEoD is the preferred event for a UPS and should be used to indicate that the output power was dropped due
        to a low battery condition. However, for systems that can reach an EoD condition, and still maintain output power beyond this event, then the use of
        this event is appropriate. For example, for a dual power source UPS, it is possible that the mains are lost while the bypass power source is still available.
        For such a case, it is possible for the system to transfer to bypass after the EoD and maintain the system output power.
</EngineeringDescription>
        <EngineeringReference>See 'Raptor_ERS_Events.doc', Event ID 32</EngineeringReference>
        <DescriptionTextId>4796</DescriptionTextId>
        <LabelTextId>4797</LabelTextId>
        <EventDefn>
            <DataId>4384</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4385</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outRmsPhsAN</ProgrammaticName>
        <EngineeringDescription>This is the system output RMS voltage between Phase A and Neutral.  The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4798</DescriptionTextId>
        <LabelTextId>4799</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4386</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outRmsPhsBN</ProgrammaticName>
        <EngineeringDescription>This is the system output RMS voltage between Phase B and Neutral.  The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4800</DescriptionTextId>
        <LabelTextId>4801</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4387</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_sys_ep_outRmsPhsCN</ProgrammaticName>
        <EngineeringDescription>This is the system output RMS voltage between Phase C and Neutral.  The system output is defined as the critical bus supporting the load.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4802</DescriptionTextId>
        <LabelTextId>4803</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4389</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_outFault</ProgrammaticName>
        <EngineeringDescription>Summary event based on the detection of one or more output faults. An output fault includes, but is not limited to: Output Overvoltage, Output Undervoltage, Output Over/Under Frequency, etc.

Becomes inactive when all causal faults clear.
</EngineeringDescription>
        <EngineeringReference>See 'Raptor_ERS_Events.doc', Event ID 62</EngineeringReference>
        <DescriptionTextId>4804</DescriptionTextId>
        <LabelTextId>4805</LabelTextId>
        <EventDefn>
            <DataId>4389</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4390</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_offExt</ProgrammaticName>
        <EngineeringDescription>Inverter is off (operation is inhibited) due to external signal state. The event remains active until the external signal is deasserted.

RAPTOR SPECIFIC: This is an LEU/LAP option only. LNA does not plan to use this signal and shall not assert this event.

With the Remote On/Off Operation (136789) setting "Enabled" and when Remote Off - Inverter (142376) event active, the
inverter shall be inhibited from operating. If the load is connected to the inverter the load shall be transfered to
bypass if conditions for transfer are acceptable. If conditions for transfer are not acceptable the load shall be deenergized.

When the Remote Off - Inverter (142376) event is inactive, the inverter shall start operation if all the conditions for
operation are acceptable. If the load is connected to the bypass source through the bypass static switch an automatic
retransfer of the load to the inverter shall occur. If the bypass static switch is deenergized, the inverter shall
connected to the load at full voltage.
</EngineeringDescription>
        <EngineeringReference>See 'Raptor_ERS_Events.doc', Event ID 280</EngineeringReference>
        <DescriptionTextId>4806</DescriptionTextId>
        <LabelTextId>4807</LabelTextId>
        <EventDefn>
            <DataId>4390</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4391</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_inv_ssSCRShort</ProgrammaticName>
        <EngineeringDescription>The system has detected a short across one or more inverter static switch Silicon Controlled Rectifiers. Once asserted, the system
        requires service to clear the event.</EngineeringDescription>
        <EngineeringReference>See 'Raptor_ERS_Events.doc', Event ID 314</EngineeringReference>
        <DescriptionTextId>4808</DescriptionTextId>
        <LabelTextId>4809</LabelTextId>
        <EventDefn>
            <DataId>4391</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4392</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_tempSensorError</ProgrammaticName>
        <EngineeringDescription>One or more temperature sensors cannot provide a valid temperature reading (i.e. sensor failure, wiring failure, sense circuit failure, etc).
The event clears when all temperature sensors can provide valid readings. NOTE: This is not an indication of an equipment operating temperature problem.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4810</DescriptionTextId>
        <LabelTextId>4811</LabelTextId>
        <EventDefn>
            <DataId>4392</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4393</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_aps_labelSysAssign</ProgrammaticName>
        <EngineeringDescription>This is the label assigned to the Power Distribution Unit at runtime by the system.  The value is independent of any user assigned label or asset tag.

The exact format of this label is system dependent and is subject to change; it should not be used for programmatic parsing/deconstruction.

MPX SPECIFIC: The system assigned label that is of the form "PDU: x", where 'x' is the one-based index of the PDU. The value of the 'x is determined by the value of 'val_aps_posRel'. The value assigned to this field may change as modules are installed or removed.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4812</DescriptionTextId>
        <LabelTextId>4813</LabelTextId>
        <TextDefn>
            <DataId>4393</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4394</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_serialNumber</ProgrammaticName>
        <EngineeringDescription>The BRM's globally unique serial number assigned at the time of manufacture.

This is the serial number that is meant for display purposes / human consumption.

Do not use this field (i.e. desconstruct the contents) for determining programmatic behavior or components fields. The format of this can vary.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4814</DescriptionTextId>
        <LabelTextId>4815</LabelTextId>
        <TextDefn>
            <DataId>4394</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4395</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_aps_posRel</ProgrammaticName>
        <EngineeringDescription>This is a one-based value that indicates the strip's relative position within the rack.

MPX SPECIFIC: A value of 1 is assigned to the PDU that is connected to the external Ethernet connection. Progressively higher integers are assigned to the PDUs that are further away from the external connection. The value assigned to this field may change as the Ethernet connections are changed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4816</DescriptionTextId>
        <LabelTextId>4817</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4396</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_posRel</ProgrammaticName>
        <EngineeringDescription>This is a one-based value that indicates the modules relative position within the strip.

MPX SPECIFIC: A value of 1 is assigned to the module that is closest to the Power Entry Module (PEM). Progressively higher integers are assigned to the modules as they get further from the PEM. The value assigned to this field may change as modules are installed or removed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4818</DescriptionTextId>
        <LabelTextId>4819</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4397</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pos</ProgrammaticName>
        <EngineeringDescription>A one-based number indicating the position of this receptacle within a module.

MPX SPECIFIC: This number will match the receptacle labels on the physical Branch Receptacle Module (BRM). Once assigned, this value is fixed and does not change.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4820</DescriptionTextId>
        <LabelTextId>4821</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4398</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_snAps</ProgrammaticName>
        <EngineeringDescription>The Branch Receptacle Module is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N).

    MPX SPECIFIC: This acts as a key to associate a BRM with the PDU, see 'str_aps_serialNumber'.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4822</DescriptionTextId>
        <LabelTextId>4823</LabelTextId>
        <TextDefn>
            <DataId>4398</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4399</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rcp_snRem</ProgrammaticName>
        <EngineeringDescription>The receptacle is installed in the Branch Receptacle Module identified by this Serial Number (S/N). In other words, this field contains the serial number of the BRM that contains the receptacle.

    MPX SPECIFIC: This acts as a key to associate a receptacle with the BRM. See 'str_rem_serialNumber'.
        </EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4824</DescriptionTextId>
        <LabelTextId>4825</LabelTextId>
        <TextDefn>
            <DataId>4399</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4400</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_firmwareVersion</ProgrammaticName>
        <EngineeringDescription>Module firmware version identifier. The format of this is product specific.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4826</DescriptionTextId>
        <LabelTextId>4827</LabelTextId>
        <TextDefn>
            <DataId>4400</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4401</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ep_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-neutral voltage. Note: Use 'val_rem_ep_LL' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4828</DescriptionTextId>
        <LabelTextId>4829</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4402</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral current.  Note: Use 'val_rem_ec_LL' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4830</DescriptionTextId>
        <LabelTextId>4831</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4403</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pwr_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral real power.   Note: Use 'val_rem_pwr_LL' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4832</DescriptionTextId>
        <LabelTextId>4833</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4404</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ap_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral apparent power.   Note: Use 'val_rem_ap_LL' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4834</DescriptionTextId>
        <LabelTextId>4835</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4405</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pf_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral power factor.   Note: Use 'val_rem_pf_LL' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4836</DescriptionTextId>
        <LabelTextId>4837</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4406</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_ec_overLN</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_rem_ec_thrshldOverWarnLN', 'val_rem_ec_thrshldOverAlarmLN', 'val_rem_pct_ecThrshldOverWarnLN' and 'val_rem_pct_ecThrshldOverAlarmLN'.

Note: Use 'evt_rem_ec_overLL' for line-to-line over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4838</DescriptionTextId>
        <LabelTextId>4839</LabelTextId>
        <EventDefn>
            <DataId>4406</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4407</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_ec_underLN</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_rem_ec_thrshldUnderAlarmLN' or 'val_rem_pct_ecThrshldUnderAlarmLN'.

Note: Use 'evt_rem_ec_underLL' for line-to-line over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4840</DescriptionTextId>
        <LabelTextId>4841</LabelTextId>
        <EventDefn>
            <DataId>4407</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4408</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_thrshldUnderAlarmLN</ProgrammaticName>
        <EngineeringDescription>If the module current is below this threshold, an under current alarm is activated; see 'evt_rem_ec_underLN'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_ec_thrshldUnderAlarmLL' or 'val_rem_pct_ecThrshldUnderAlarmLL' for line-to-line under current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4842</DescriptionTextId>
        <LabelTextId>4843</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4409</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_thrshldOverWarnLN</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current warning is activated; see 'evt_rem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_ec_thrshldOverWarnLL' or 'val_rem_pct_ecThrshldOverWarnLL' for line-to-line over current warning threshold.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4844</DescriptionTextId>
        <LabelTextId>4845</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4410</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_thrshldOverAlarmLN</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current alarm is activated; see 'evt_rem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_ec_thrshldOverAlarmLL' or 'val_rem_pct_ecThrshldOverAlarmLL' for line-to-line over current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4846</DescriptionTextId>
        <LabelTextId>4847</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4411</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ep_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line voltage. Note: Use 'val_rem_ep_LN' for line-to-neutral measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4848</DescriptionTextId>
        <LabelTextId>4849</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4412</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line current.  Note: Use 'val_rem_ec_LN' for line-to-neutral measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4850</DescriptionTextId>
        <LabelTextId>4851</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4413</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pwr_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line real power.  Note: Use 'val_rem_pwr_LN' for line-to-neutral measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4852</DescriptionTextId>
        <LabelTextId>4853</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4414</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ap_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line apparent power.   Note: Use 'val_rem_ap_LN' for line-to-neutral measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4854</DescriptionTextId>
        <LabelTextId>4855</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4415</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pf_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line power factor.   Note: Use 'val_rem_pf_LN' for line-to-neutral measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4856</DescriptionTextId>
        <LabelTextId>4857</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4416</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_ec_overLL</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type of this event (Warning, Alarm, etc) is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_rem_ec_thrshldOverWarnLL', 'val_rem_ec_thrshldOverAlarmLL', 'val_rem_pct_ecThrshldOverWarnLL' and 'val_rem_pct_ecThrshldOverAlarmLL'.

Note: Use 'evt_rem_ec_overLN' for line-to-neutral over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4838</DescriptionTextId>
        <LabelTextId>4839</LabelTextId>
        <EventDefn>
            <DataId>4416</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4417</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_ec_underLL</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type of this event (Warning, Alarm, etc) is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_rem_ec_thrshldUnderAlarmLL' or 'val_rem_pct_ecThrshldUnderAlarmLL'.

Note: Use 'evt_rem_ec_underLN' for line-to-neutral over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4840</DescriptionTextId>
        <LabelTextId>4841</LabelTextId>
        <EventDefn>
            <DataId>4417</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4418</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_thrshldUnderAlarmLL</ProgrammaticName>
        <EngineeringDescription>If the module current is below this threshold, an under current alarm is activated; see 'evt_rem_ec_underLL'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_ec_thrshldUnderAlarmLN' or 'val_rem_pct_ecThrshldUnderAlarmLN' for line-to-neutral under current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4862</DescriptionTextId>
        <LabelTextId>4863</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4419</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_thrshldOverWarnLL</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current warning is activated; see 'evt_rem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_ec_thrshldOverWarnLN' or 'val_rem_pct_ecThrshldOverWarnLN' for line-to-neutral over current warning threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4864</DescriptionTextId>
        <LabelTextId>4865</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4420</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_ec_thrshldOverAlarmLL</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current alarm is activated; see 'evt_rem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_ec_thrshldOverAlarmLN' or 'val_rem_pct_ecThrshldOverAlarmLN' for line-to-neutral over current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4866</DescriptionTextId>
        <LabelTextId>4867</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4421</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_failure</ProgrammaticName>
        <EngineeringDescription>One or more conditions indicate a Branch Receptacle Module failure, service is required. This event clears
        when the module is serviced to correct the causal conditions or when the module is removed/replaced.

MPX SPECIFIC: When asserted this indicates that a hardware failure exists in the BRM. It may
be asserted due to a number of conditions.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4868</DescriptionTextId>
        <LabelTextId>4869</LabelTextId>
        <EventDefn>
            <DataId>4421</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4422</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_pem_labelSysAssign</ProgrammaticName>
        <EngineeringDescription>This is the label assigned to the Power Entry Module at runtime by the system. The value is independent of any user assigned label or asset tag.

The exact format of this label is system dependent and is subject to change; it should not be used for programmatic parsing-deconstruction.

MPX SPECIFIC: The system assigned label that is of the form "PEM: x-1", where 'x' is the one-based index of the PDU. The value of the 'x is determined by the value of 'val_aps_id'. The value assigned to this field may change as modules are installed or removed. The fixed value of '1' is due to the fact that there is one and only one PEM per PDU.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4870</DescriptionTextId>
        <LabelTextId>4871</LabelTextId>
        <TextDefn>
            <DataId>4422</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4423</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_pem_model</ProgrammaticName>
        <EngineeringDescription>The Power Entry Module model designation.

NOTE: This name is not intended for programmatic usage (i.e. a client should not program its behavior based upon the value of this object).</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4872</DescriptionTextId>
        <LabelTextId>4873</LabelTextId>
        <TextDefn>
            <DataId>4423</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4424</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_pem_wiringType</ProgrammaticName>
        <EngineeringDescription>PDU Input wiring type. This is the PDU input wiring type which includes:
        (a) 1-Phase / 3-Wire (L1, N, PE),
        (b) 2-Phase / 3-Wire (L1, L2, PE)
        (c) 3-Phase / 4-Wire (L1, L2, L3, PE)
        (d) 3-Phase / 5-Wire (L1, L2, L3, N, PE)
        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4878</DescriptionTextId>
        <LabelTextId>4879</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4122</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4425</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_inputRated</ProgrammaticName>
        <EngineeringDescription>Rated Input Line Voltage for the module (i.e. this is the nominal line input voltage; it is NOT the measured voltage).

The value is defined to be the rated line voltage (either line-to-neutral or line-to-line depending upon module type).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4880</DescriptionTextId>
        <LabelTextId>4881</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4426</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_inputRated</ProgrammaticName>
        <EngineeringDescription>This is the rated input line current for the module (it is NOT the measured current).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4882</DescriptionTextId>
        <LabelTextId>4883</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4427</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_freq_rated</ProgrammaticName>
        <EngineeringDescription>Rated input line frequency for the module (i.e. This is the expected line frequency; it is NOT the measured frequency; it is typically 50 Hz or 60 Hz).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4884</DescriptionTextId>
        <LabelTextId>4885</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>9</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4428</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_enrg_accumulated</ProgrammaticName>
        <EngineeringDescription>Total accumulated energy, measured at the module input, since the last energy reset. Writing a value of 0 (zero) to this causes the accumulated energy to be reset. Writing a non-zero value is invalid and shall result in a write error and the total energy value remains unchanged.

The energy is typically measured in watt-hours or killowatt-hours. If the energy has not been reset and has not wrapped, then this is the total energy since installation.

This value persists across boot events.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4886</DescriptionTextId>
        <LabelTextId>4887</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>10</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4429</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_pem_serialNumber</ProgrammaticName>
        <EngineeringDescription>The PEM's globally unique serial number assigned at the time of manufacture.

This is the serial number that is meant for display purposes / human consumption.

Do not use this field (i.e. desconstruct the contents) for determining programmatic behavior or components fields. The format of this can vary.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4888</DescriptionTextId>
        <LabelTextId>4889</LabelTextId>
        <TextDefn>
            <DataId>4429</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4430</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_pem_firmwareVersion</ProgrammaticName>
        <EngineeringDescription>Module firmware version identifier. The format of this is product specific.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>4890</DescriptionTextId>
        <LabelTextId>4891</LabelTextId>
        <TextDefn>
            <DataId>4430</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4431</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-neutral voltage. Note: Use 'val_pem_ep_*' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4892</DescriptionTextId>
        <LabelTextId>4893</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4432</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral current.  Note: Use 'val_pem_ec_*' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4894</DescriptionTextId>
        <LabelTextId>4895</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4433</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pwr_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral real power.   Note: Use 'val_pem_pwr_*' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4896</DescriptionTextId>
        <LabelTextId>4897</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4434</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ap_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral apparent power.   Note: Use 'val_pem_ap_*' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4898</DescriptionTextId>
        <LabelTextId>4899</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4435</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pf_LN</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-neutral power factor.   Note: Use 'val_pem_pf_*' for line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4900</DescriptionTextId>
        <LabelTextId>4901</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4436</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_overLN</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_pem_ec_thrshldOverWarnLN', 'val_pem_ec_thrshldOverAlarmLN', 'val_pem_pct_ecThrshldOverWarnLN' and 'val_pem_pct_ecThrshldOverAlarmLN'.

Note: Use 'evt_pem_ec_over*' for line-to-line over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4902</DescriptionTextId>
        <LabelTextId>4903</LabelTextId>
        <EventDefn>
            <DataId>4436</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4437</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_underLN</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_pem_ec_thrshldUnderAlarmLN' or 'val_pem_pct_ecThrshldUnderAlarmLN'.

Note: Use 'evt_pem_ec_under*' for line-to-line over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4904</DescriptionTextId>
        <LabelTextId>4905</LabelTextId>
        <EventDefn>
            <DataId>4437</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4438</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_intrnlTempRise</ProgrammaticName>
        <EngineeringDescription>
Excessive temperature rise internal to the system (i.e. difference between the output versus input temperature is too large). The difference between the outlet temperature and inlet temperature exceeds a specified maximum temperature.

Becomes inactive when the the temperature rise falls to normal levels.

RAPTOR SPECIFIC: The temperature rise exceeds 30 degrees C.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4906</DescriptionTextId>
        <LabelTextId>4907</LabelTextId>
        <EventDefn>
            <DataId>4438</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4439</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_autoRestartFailed</ProgrammaticName>
        <EngineeringDescription>With Auto Restart Initiated active, the conditions for automatic restart have failed.

Raptor Specific - See Conditions to Terminate Auto Restart (152647). No automatic recovery. This is a latched event. User must press alarm reset manually to clear this event.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4908</DescriptionTextId>
        <LabelTextId>4909</LabelTextId>
        <EventDefn>
            <DataId>4439</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4440</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_fuseFailure</ProgrammaticName>
        <EngineeringDescription>A summary event indicating one or more fuse failures. This is set when a fuse failure occurs, which may include
        but not limited to: rectifier fuse, input filter fuse, output fuse, inverter fuse, output filter fuse, bypass fuse, etc.

        Becomes inactive when all causal faults have cleared.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4910</DescriptionTextId>
        <LabelTextId>4911</LabelTextId>
        <EventDefn>
            <DataId>4440</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4441</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_controllerError</ProgrammaticName>
        <EngineeringDescription>System controller internal error. Summary event based on the detection of one or more controller faults.

Becomes inactive when all causal faults have cleared.

RAPTOR SPECIFIC:  least one of the following faults: DSP Communications Failure (148636), Control DSP Failure (148609)
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4912</DescriptionTextId>
        <LabelTextId>4913</LabelTextId>
        <EventDefn>
            <DataId>4441</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4442</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_sys_breakerOpenFail</ProgrammaticName>
        <EngineeringDescription>One or more breakers in the system failed to open. Summary event based on the detection of one or more breakers that failed to open. The
breakers in question include, but are not limited to: system output breaker, input breaker, battery cabinet breaker, inverter breaker, etc.

Becomes inactive when all causal faults have cleared.

RAPTOR SPECIFIC:  Backfeed Breaker Open Fail (138061)
System Output Breaker Open Fail (138063)
Rectifier Input Breaker (CB1) Open Fail (138981)
Bypass Breaker (CB3) Open Fail (127643)
Module Battery Disconnect Open Fail (144724)
Battery CB 1 Open Fail (138976)
Battery CB 2 Open Fail (138977)
Battery CB 3 Open Fail (138978)
Battery CB 4 Open Fail (138979)
Battery CB 5 Open Fail (138980)
Inverter Output Breaker (CB2) Open Fail (138060).

</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4914</DescriptionTextId>
        <LabelTextId>4915</LabelTextId>
        <EventDefn>
            <DataId>4442</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4443</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured input voltage. Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4916</DescriptionTextId>
        <LabelTextId>4917</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4444</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured total input current.  Note: Use 'val_pem_ec_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4918</DescriptionTextId>
        <LabelTextId>4919</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4445</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pwr_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured total input line-to-line real power.   Note: Use 'val_pem_pwr_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4920</DescriptionTextId>
        <LabelTextId>4921</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4446</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ap_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured total input apparent power.   Note: Use 'val_pem_ap_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4922</DescriptionTextId>
        <LabelTextId>4923</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4447</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pf_LL</ProgrammaticName>
        <EngineeringDescription>Module's measured total input power factor.   Note: Use 'val_pem_pf_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4924</DescriptionTextId>
        <LabelTextId>4925</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4448</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_overLL</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_pem_ec_thrshldOverWarnLL', 'val_pem_ec_thrshldOverAlarmLL', 'val_pem_pct_ecThrshldOverWarnLL' and 'val_pem_pct_ecThrshldOverAlarmLL'.

Note: See 'evt_pem_ec_over*' for other line over current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4926</DescriptionTextId>
        <LabelTextId>4927</LabelTextId>
        <EventDefn>
            <DataId>4448</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4449</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_underLL</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_pem_ec_thrshldUnderAlarmLL' or 'val_pem_pct_ecThrshldUnderAlarmLL'.

Note: See 'evt_pem_ec_under*' for other line over current events.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4928</DescriptionTextId>
        <LabelTextId>4929</LabelTextId>
        <EventDefn>
            <DataId>4449</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4450</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_L1L2</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line voltage (L1-L2). Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4930</DescriptionTextId>
        <LabelTextId>4931</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4451</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_L2L3</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line voltage (L2-L3). Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4932</DescriptionTextId>
        <LabelTextId>4933</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4452</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_L3L1</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-line voltage (L3-L1). Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4934</DescriptionTextId>
        <LabelTextId>4935</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4453</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_L1N</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-neutral voltage (L1-N). Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4936</DescriptionTextId>
        <LabelTextId>4937</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4454</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_L2N</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-neutral voltage (L2-N). Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4938</DescriptionTextId>
        <LabelTextId>4939</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4455</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ep_L3N</ProgrammaticName>
        <EngineeringDescription>Module's measured input line-to-neutral voltage (L3-N). Note: Use 'val_pem_ep_*' for other line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4940</DescriptionTextId>
        <LabelTextId>4941</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>2</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4456</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_L1</ProgrammaticName>
        <EngineeringDescription>Module's measured input line 1 current.  Note: Use 'val_pem_ec_*' for other line and line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4942</DescriptionTextId>
        <LabelTextId>4943</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4457</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_L2</ProgrammaticName>
        <EngineeringDescription>Module's measured input line 2 current.  Note: Use 'val_pem_ec_*' for other line and line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4944</DescriptionTextId>
        <LabelTextId>4945</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4458</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_L3</ProgrammaticName>
        <EngineeringDescription>Module's measured input line 3 current.  Note: Use 'val_pem_ec_*' for other line and line-to-line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4946</DescriptionTextId>
        <LabelTextId>4947</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4459</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pwr_L1</ProgrammaticName>
        <EngineeringDescription>Module's measured total line 1 input real power.   Note: Use 'val_pem_pwr_*' for line power measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4948</DescriptionTextId>
        <LabelTextId>4949</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4460</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pwr_L2</ProgrammaticName>
        <EngineeringDescription>Module's measured total line 2 input real power.   Note: Use 'val_pem_pwr_*' for line power measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4950</DescriptionTextId>
        <LabelTextId>4951</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4461</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pwr_L3</ProgrammaticName>
        <EngineeringDescription>Module's measured total line 3 input real power.   Note: Use 'val_pem_pwr_*' for line power measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4952</DescriptionTextId>
        <LabelTextId>4953</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4462</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ap_L1</ProgrammaticName>
        <EngineeringDescription>Module's measured total input apparent power line 1.   Note: Use 'val_pem_ap_*' for line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4954</DescriptionTextId>
        <LabelTextId>4955</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4463</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ap_L2</ProgrammaticName>
        <EngineeringDescription>Module's measured total input apparent power line 2.   Note: Use 'val_pem_ap_*' for line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4956</DescriptionTextId>
        <LabelTextId>4957</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4464</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ap_L3</ProgrammaticName>
        <EngineeringDescription>Module's measured total input apparent power line 3.   Note: Use 'val_pem_ap_*' for line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4958</DescriptionTextId>
        <LabelTextId>4959</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>4</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4465</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pf_L1</ProgrammaticName>
        <EngineeringDescription>Module's measured total input power factor line 1.   Note: Use 'val_pem_pf_*' for line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4960</DescriptionTextId>
        <LabelTextId>4961</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4466</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pf_L2</ProgrammaticName>
        <EngineeringDescription>Module's measured total input power factor line 2.   Note: Use 'val_pem_pf_*' for line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4962</DescriptionTextId>
        <LabelTextId>4963</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4467</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pf_L3</ProgrammaticName>
        <EngineeringDescription>Module's measured total input power factor line 3.   Note: Use 'val_pem_pf_*' for line measurements.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4964</DescriptionTextId>
        <LabelTextId>4965</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4468</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_overL1</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition on line 1.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_pem_ec_thrshldOverWarnL1', 'val_pem_ec_thrshldOverAlarmL1', 'val_pem_pct_ecThrshldOverWarnL1' and 'val_pem_pct_ecThrshldOverAlarmL1'.

Note: Use 'evt_pem_ec_over*' for line over current events.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4966</DescriptionTextId>
        <LabelTextId>4967</LabelTextId>
        <EventDefn>
            <DataId>4468</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4469</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_overL2</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition on line 2.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_pem_ec_thrshldOverWarnL2', 'val_pem_ec_thrshldOverAlarmL2', 'val_pem_pct_ecThrshldOverWarnL2' and 'val_pem_pct_ecThrshldOverAlarmL2'.

Note: Use 'evt_pem_ec_over*' for line over current events.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4968</DescriptionTextId>
        <LabelTextId>4969</LabelTextId>
        <EventDefn>
            <DataId>4469</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4470</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_overL3</ProgrammaticName>
        <EngineeringDescription>The system has detected a module over current condition on line 3.  The current has exceeded a pre-determined threshold for the input current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current is less than "the over current threshold minus the hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the amount of the over current. The threshold value is configurable by the user via 'val_pem_ec_thrshldOverWarnL3', 'val_pem_ec_thrshldOverAlarmL3', 'val_pem_pct_ecThrshldOverWarnL3' and 'val_pem_pct_ecThrshldOverAlarmL3'.

Note: Use 'evt_pem_ec_over*' for line over current events.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4970</DescriptionTextId>
        <LabelTextId>4971</LabelTextId>
        <EventDefn>
            <DataId>4470</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4471</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_underL1</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition on line 1.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_pem_ec_thrshldUnderAlarmL1', or 'val_pem_pct_ecThrshldUnderAlarmL1'.

Note: Use 'evt_pem_ec_under*' for line under current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4972</DescriptionTextId>
        <LabelTextId>4973</LabelTextId>
        <EventDefn>
            <DataId>4471</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4472</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_underL2</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition on line 2.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_pem_ec_thrshldUnderAlarmL2', or 'val_pem_pct_ecThrshldUnderAlarmL2'.

Note: Use 'evt_pem_ec_under*' for line under current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4974</DescriptionTextId>
        <LabelTextId>4975</LabelTextId>
        <EventDefn>
            <DataId>4472</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4473</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_underL3</ProgrammaticName>
        <EngineeringDescription>The system has detected a module under current condition on line 3.  The current is less than a pre-determined threshold for the load current by a defined amplitude and amount of time.

The type (Warning, Alarm, etc) of this event is product dependent.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears when the module current exceeds "the threshold plus hysteresis" OR if the module is uninstalled.

MPX SPECIFIC: The event is an alarm.  The threshold value is configurable by the user via 'val_pem_ec_thrshldUnderAlarmL3' or 'val_pem_pct_ecThrshldUnderAlarmL3'.

Note: Use 'evt_pem_ec_under*' for line under current event.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4976</DescriptionTextId>
        <LabelTextId>4977</LabelTextId>
        <EventDefn>
            <DataId>4473</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4474</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldUnderAlarmLN</ProgrammaticName>
        <EngineeringDescription>If the module current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underLN'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' and 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4978</DescriptionTextId>
        <LabelTextId>4979</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4475</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverWarnLN</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4980</DescriptionTextId>
        <LabelTextId>4981</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4476</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverAlarmLN</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4982</DescriptionTextId>
        <LabelTextId>4983</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4477</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldUnderAlarmLL</ProgrammaticName>
        <EngineeringDescription>If the module current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underLL'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' or 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4984</DescriptionTextId>
        <LabelTextId>4985</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4478</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverWarnLL</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4986</DescriptionTextId>
        <LabelTextId>4987</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4479</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverAlarmLL</ProgrammaticName>
        <EngineeringDescription>If the module current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4988</DescriptionTextId>
        <LabelTextId>4989</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4480</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldUnderAlarmL1</ProgrammaticName>
        <EngineeringDescription>If the module's line 1 current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underL1'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' or 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4990</DescriptionTextId>
        <LabelTextId>4991</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4481</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldUnderAlarmL2</ProgrammaticName>
        <EngineeringDescription>If the module's line 2 current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underL2'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' or 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4992</DescriptionTextId>
        <LabelTextId>4993</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4482</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldUnderAlarmL3</ProgrammaticName>
        <EngineeringDescription>If the module's line 3 current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underL3'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' and 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4994</DescriptionTextId>
        <LabelTextId>4995</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4483</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverWarnL1</ProgrammaticName>
        <EngineeringDescription>If the module's line 1 current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overL1'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4996</DescriptionTextId>
        <LabelTextId>4997</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4484</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverWarnL2</ProgrammaticName>
        <EngineeringDescription>If the module's line 2 current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overL2'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>4998</DescriptionTextId>
        <LabelTextId>4999</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4485</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverWarnL3</ProgrammaticName>
        <EngineeringDescription>If the module's line 3 current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overL3'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5000</DescriptionTextId>
        <LabelTextId>5001</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4486</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverAlarmL1</ProgrammaticName>
        <EngineeringDescription>If the module's line 1 current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overL1'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5002</DescriptionTextId>
        <LabelTextId>5003</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4487</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverAlarmL2</ProgrammaticName>
        <EngineeringDescription>If the module's line 2 current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overL2'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5004</DescriptionTextId>
        <LabelTextId>5005</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4488</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_ec_thrshldOverAlarmL3</ProgrammaticName>
        <EngineeringDescription>If the module's line 3 current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overL3'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5006</DescriptionTextId>
        <LabelTextId>5007</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>3</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4489</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_aps_labelUsrAssign</ProgrammaticName>
        <EngineeringDescription>The user assigned PDU label. End user assigned label that is not required to be unique within a system.


MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a strip within a cluster of strips.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5008</DescriptionTextId>
        <LabelTextId>5009</LabelTextId>
        <TextDefn>
            <DataId>4489</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4490</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_aps_assetTag01</ProgrammaticName>
        <EngineeringDescription>User assigned PDU asset tag - User assigned label to identify a PDU, or possibly a set of PDUs.

Asset tag values are not required to be unique.

MPX Product: Only 7-bit ASCII characters are supported.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5010</DescriptionTextId>
        <LabelTextId>5011</LabelTextId>
        <TextDefn>
            <DataId>4490</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4491</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_aps_assetTag02</ProgrammaticName>
        <EngineeringDescription>User assigned PDU asset tag - User assigned label to identify a PDU, or possibly a set of PDUs.

Asset tag values are not required to be unique.

MPX Product: Only 7-bit ASCII characters are supported.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5012</DescriptionTextId>
        <LabelTextId>5013</LabelTextId>
        <TextDefn>
            <DataId>4491</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4492</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rcp_pwrStateChngOn</ProgrammaticName>
        <EngineeringDescription>The receptacle power state changed to the ON state. This is a specialized event, called a Notification, and has no clearing action.
        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5014</DescriptionTextId>
        <LabelTextId>5015</LabelTextId>
        <EventDefn>
            <DataId>4492</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4493</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rcp_pwrStateChngOff</ProgrammaticName>
        <EngineeringDescription>The receptacle power state changed to the OFF state. This is a specialized event, called a Notification, and has no clearing action.
        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5016</DescriptionTextId>
        <LabelTextId>5017</LabelTextId>
        <EventDefn>
            <DataId>4493</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4494</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_breakerOpen</ProgrammaticName>
        <EngineeringDescription>The Branch Receptacle Module's input breaker is open. The event clears when the breaker is closed.

        MPX SPECIFIC: The event also clears if the module is removed from the system.
        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5018</DescriptionTextId>
        <LabelTextId>5019</LabelTextId>
        <EventDefn>
            <DataId>4494</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4495</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_aps_configChng</ProgrammaticName>
        <EngineeringDescription>Device Configuration Change - One or more user/administrator configurable persistent values changed.

This is a specialized event, called a Notification. There is no clearing action for this event.

MPX SPECIFIC: The configuration item(s) in question could be associated with any or all of the PDU modules.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5020</DescriptionTextId>
        <LabelTextId>5021</LabelTextId>
        <EventDefn>
            <DataId>4495</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4496</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bdm_removed</ProgrammaticName>
        <EngineeringDescription>The basic display module that was previously present is no longer installed (or is no longer communicating as expected).

This is a specialized event called a NOTIFICATION. There is no clearing action.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5022</DescriptionTextId>
        <LabelTextId>5023</LabelTextId>
        <EventDefn>
            <DataId>4496</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4497</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_bdm_discovered</ProgrammaticName>
        <EngineeringDescription>Basic Display module discovered.

The event clears when the user acknowledges this event or if the module is removed.

MPX Specific: This event is not asserted when a BDM is discoverd at power-up.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5024</DescriptionTextId>
        <LabelTextId>5025</LabelTextId>
        <EventDefn>
            <DataId>4497</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4498</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_aps_serialNumber</ProgrammaticName>
        <EngineeringDescription>The PDU's globally unique serial number assigned at the time of manufacture.

This is the serial number that is meant for display purposes / human consumption.

Do not use this field (i.e. desconstruct the contents) for determining programmatic behavior or components fields. The format of this can vary.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5026</DescriptionTextId>
        <LabelTextId>5027</LabelTextId>
        <TextDefn>
            <DataId>4498</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4499</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_pem_snAps</ProgrammaticName>
        <EngineeringDescription>The Power Module is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N).

    MPX SPECIFIC: This acts as a key to associate a PEM with the PDU, see 'str_aps_serialNumber'.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5028</DescriptionTextId>
        <LabelTextId>5029</LabelTextId>
        <TextDefn>
            <DataId>4499</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4500</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_over</ProgrammaticName>
        <EngineeringDescription>The system has detected a power module over current condition.  The current has exceeded a pre-determined threshold for the power module current by a defined amplitude and amount of time.

The severity of this event is defined by the product.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears once the power module current is less than "the over current threshold minus the hysteresis".

MPX Specific: The event is either a WARNING or an ALARM, depending upon the severity of the over current condition. The thresold values are configurable by the user. See 'val_pem_ec_thrshldOverWarn*', 'val_pem_ec_thrshldOverAlarm*', 'val_pem_pct_ecThrshldOverWarn*' and 'val_pem_pct_ecThrshldOverAlarm*' for the threshold controls.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5030</DescriptionTextId>
        <LabelTextId>5031</LabelTextId>
        <EventDefn>
            <DataId>4500</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4501</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_ec_under</ProgrammaticName>
        <EngineeringDescription>The system has detected a power module under current condition.  The current is less than pre-determined threshold for the power module load current by a defined amplitude and amount of time.

The severity of this event is defined by the product.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears once the power module current exceeds "the threshold plus hysteresis".

MPX Specific: The event is an ALARM. The threshold value is configurable by the user. Reference threshold 'val_pem_ec_thrshldUnderAlarm*' and 'val_pem_pct_ecThrshldUnderAlarm*'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5032</DescriptionTextId>
        <LabelTextId>5033</LabelTextId>
        <EventDefn>
            <DataId>4501</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4502</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_failure</ProgrammaticName>
        <EngineeringDescription>One or more conditions indicate a power module failure, service is required.

This event clears when the module is serviced to correct the causal conditions or when the module is removed/replaced.

MPX SPECIFIC: When asserted this indicates that a hardware failure exists in the PEM. It may be asserted due to a number of conditions.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5034</DescriptionTextId>
        <LabelTextId>5035</LabelTextId>
        <EventDefn>
            <DataId>4502</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4503</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_pem_failureComm</ProgrammaticName>
        <EngineeringDescription>Internal communications failure with the Power Module.

This event automatically clears with the communications issue is resolved. Typcially this will require service to fix the issue.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5036</DescriptionTextId>
        <LabelTextId>5037</LabelTextId>
        <EventDefn>
            <DataId>4503</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4504</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_removed</ProgrammaticName>
        <EngineeringDescription>The Branch Receptacle Module that was previously present is no longer installed (or is no longer communicating as expected).

This event clears when the user acknowledges this event OR when the module is replaced (the S/N of the replaced module matches).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5038</DescriptionTextId>
        <LabelTextId>5039</LabelTextId>
        <EventDefn>
            <DataId>4504</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4505</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_discovered</ProgrammaticName>
        <EngineeringDescription>Receptacle module discovered

The event clears when the user acknowledges this event or if the module is removed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5040</DescriptionTextId>
        <LabelTextId>5041</LabelTextId>
        <EventDefn>
            <DataId>4505</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4506</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_ec_over</ProgrammaticName>
        <EngineeringDescription>The system has detected a Branch Receptacle Module over current condition.  The current has exceeded a pre-determined threshold for the Branch Receptacle Module current by a defined amplitude and amount of time.

The severity of this event is defined by the product.

The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or user configured value).

The event clears once the recptacle moudule current is less than "the over current threshold minus the hysteresis" OR if the receptacle is uninstalled.

MPX product: The event is either a WARNING or an ALARM, depending upon the severity of the over current condition. The thresold value is configurable by the user.

The threshold value is configurable by the user via 'val_rem_ec_thrshldOverWarnLN', 'val_rem_ec_thrshldOverAlarmLN', 'val_rem_pct_ecThrshldOverWarnLN' and 'val_rem_pct_ecThrshldOverAlarmLN'.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5042</DescriptionTextId>
        <LabelTextId>5043</LabelTextId>
        <EventDefn>
            <DataId>4506</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4507</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rem_ec_under</ProgrammaticName>
        <EngineeringDescription>The system has detected a Branch Receptacle Module under current condition.  The current is less than pre-determined threshold for the Branch Receptacle Module load current by a defined amplitude and amount of time.

The severity of this event is defined by the product.

The threshold value setting is product dependent (i.e. it may be a fixed value or user configured value).

The event clears once the Branch Receptacle Module current exceeds "the threshold plus hysteresis" OR if the receptacle is uninstalled.

MPX product: The event is an ALARM. The thresold value is configurable by the user.

The threshold value is configurable by the user via 'val_rem_ec_thrshldUnderAlarmLN' or 'val_rem_pct_ecThrshldUnderAlarmLN'</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5044</DescriptionTextId>
        <LabelTextId>5045</LabelTextId>
        <EventDefn>
            <DataId>4507</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4508</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rcp_loadRemoved</ProgrammaticName>
        <EngineeringDescription>The receptacle's load stopped drawing power. This notification is asserted when the receptacle power is ON and the associated load was previously drawing power and is no longer drawing power. This event is not asserted as a result of turning the receptacle power OFF.

This is a specialized event called a NOTIFICATION, there is no associated clearing action.

MPX Specific: The power threshold used to distinguish between a load being present versus not present is fixed; the value is automatically determined by the BRM's firmware.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5046</DescriptionTextId>
        <LabelTextId>5047</LabelTextId>
        <EventDefn>
            <DataId>4508</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4509</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_rcp_loadAdded</ProgrammaticName>
        <EngineeringDescription>The receptacle's load started to draw power. This notification is asserted when the receptacle power is ON and the associated load was not previously drawing power and is now drawing power. This event is not asserted as a result of turning the receptacle power ON.

This is a specialized event called a NOTIFICATION, there is no associated clearing action.

MPX Specific: The power threshold used to distinguish between a load being present versus not present is fixed; the value is automatically determined by the BRM's firmware.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5048</DescriptionTextId>
        <LabelTextId>5049</LabelTextId>
        <EventDefn>
            <DataId>4509</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4510</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_id</ProgrammaticName>
        <EngineeringDescription>A runtime assigned receptacle identification number. The value assigned is product specific.

MPX SPECIFIC: At run-time the system assigns a non-persistant one-based index to the receptacles. The assigned number is unique for the receptaces within a BRM.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5050</DescriptionTextId>
        <LabelTextId>5051</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4511</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_id</ProgrammaticName>
        <EngineeringDescription>A runtime assigned Branch Receptacle Module identification number. The value assigned is product specific.

MPX SPECIFIC: At run-time the system assigns a non-persistant one-based index to the Branch Receptacle Module. The assigned number is unique for the receptace module within an PDU.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5052</DescriptionTextId>
        <LabelTextId>5053</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4512</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_id</ProgrammaticName>
        <EngineeringDescription>A runtime assigned power module identification number. The value assigned is product specific.

MPX SPECIFIC: At run-time the system assigns a non-persistant one-based index to the power module. The assigned number is unique for the power module within an PDU.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5054</DescriptionTextId>
        <LabelTextId>5055</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4513</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_aps_id</ProgrammaticName>
        <EngineeringDescription>A runtime assigned advanced power strip identification number. The value assigned is product specific.

MPX SPECIFIC: At run-time the system assigns a non-persistant one-based index to the advanced power strip module. The assigned number is unique for the advanced power strip within a rack.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5056</DescriptionTextId>
        <LabelTextId>5057</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>0</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4514</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pwr_total</ProgrammaticName>
        <EngineeringDescription>PDU's Total Input Power (sum of power for all phases).</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5058</DescriptionTextId>
        <LabelTextId>5059</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>6</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4515</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_enrg_accumulatedL1</ProgrammaticName>
        <EngineeringDescription>Total accumulated energy, measured at the module input line 1, since the last energy reset.
Writing a value of 0 (zero) to this causes the accumulated energy to be reset for line 1.

The energy is typically measured in watt-hours or killowatt-hours.
If the energy has not been reset and has not wrapped, then this is the total line 1 energy since installation.

This value persists across boot events.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5060</DescriptionTextId>
        <LabelTextId>5061</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>10</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4516</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_enrg_accumulatedL2</ProgrammaticName>
        <EngineeringDescription>Total accumulated energy, measured at the module input line 2, since the last energy reset.
Writing a value of 0 (zero) to this causes the accumulated energy to be reset for line 2.

The energy is typically measured in watt-hours or killowatt-hours.
If the energy has not been reset and has not wrapped, then this is the total line 2 energy since installation.

This value persists across boot events.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5062</DescriptionTextId>
        <LabelTextId>5063</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>10</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4517</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_enrg_accumulatedL3</ProgrammaticName>
        <EngineeringDescription>Total accumulated energy, measured at the module input line 3, since the last energy reset.
Writing a value of 0 (zero) to this causes the accumulated energy to be reset for line 3.

The energy is typically measured in watt-hours or killowatt-hours.
If the energy has not been reset and has not wrapped, then this is the total line 3 energy since installation.

This value persists across boot events.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5064</DescriptionTextId>
        <LabelTextId>5065</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>10</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4518</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_labelUsrAssign</ProgrammaticName>
        <EngineeringDescription>The user assigned Branch Receptacle Module label. End user assigned label that is not required to be unique within a system.


MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a strip within a cluster of strips.
</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5066</DescriptionTextId>
        <LabelTextId>5067</LabelTextId>
        <TextDefn>
            <DataId>4518</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4519</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_assetTag01</ProgrammaticName>
        <EngineeringDescription>User assigned Branch Receptacle Module asset tag - User assigned label to identify a BRM, or possibly a set of BRMs.

Asset tag values are not required to be unique.

MPX Product: Only 7-bit ASCII characters are supported.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5068</DescriptionTextId>
        <LabelTextId>5069</LabelTextId>
        <TextDefn>
            <DataId>4519</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4520</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_rem_assetTag02</ProgrammaticName>
        <EngineeringDescription>User assigned Branch Receptacle Module asset tag - User assigned label to identify a BRM, or possibly a set of BRMs.

Asset tag values are not required to be unique.

MPX Product: Only 7-bit ASCII characters are supported.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5070</DescriptionTextId>
        <LabelTextId>5071</LabelTextId>
        <TextDefn>
            <DataId>4520</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4521</DataId>
        <DefnType>TextDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>str_mod_serialNumber</ProgrammaticName>
        <EngineeringDescription>Module serial number. This is the serial number that is meant for display purposes / human consumption.

Do not use this field for determining programmatic behavior.

MPX SPECIFIC: This value is used to identify a module that has been added to or removed from the system.</EngineeringDescription>
        <EngineeringReference></EngineeringReference>
        <DescriptionTextId>5072</DescriptionTextId>
        <LabelTextId>5073</LabelTextId>
        <TextDefn>
            <DataId>4521</DataId>
        </TextDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4522</DataId>
        <DefnType>MultiStateDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>st_pdu_moduleType</ProgrammaticName>
        <EngineeringDescription>PDU module type (BRM, BDM, PEM, CM, PRC, etc)
        </EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5083</DescriptionTextId>
        <LabelTextId>5084</LabelTextId>
        <MultiStateDefn>
            <EnumStateDefn_Id>4123</EnumStateDefn_Id>
        </MultiStateDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4523</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_mod_removed</ProgrammaticName>
        <EngineeringDescription>Module removed from the system.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5079</DescriptionTextId>
        <LabelTextId>5080</LabelTextId>
        <EventDefn>
            <DataId>4523</DataId>
        </EventDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4524</DataId>
        <DefnType>EventDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>evt_mod_added</ProgrammaticName>
        <EngineeringDescription>Module added to the system.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5081</DescriptionTextId>
        <LabelTextId>5082</LabelTextId>
        <EventDefn>
            <DataId>4524</DataId>
        </EventDefn>
    </DataDictEntry>


    <DataDictEntry>
        <DataId>4525</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pct_ecThrshldUnderAlarm</ProgrammaticName>
        <EngineeringDescription>If the receptacle current is below this percentage of the full scale rated value, an alarm is activated; see 'evt_rcp_ec_under'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE: The hysteresis level is product dependent (it may be fixed or programmable):
- MPX Product: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5085</DescriptionTextId>
        <LabelTextId>5086</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4526</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pct_ecThrshldOverWarn</ProgrammaticName>
        <EngineeringDescription>If the receptacle current is above this percentage of the full scale rated value, a warning is activated; see 'evt_rcp_ec_over'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE: The hysteresis level is product dependent (it may be fixed or programmable):
- MPX Product: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5087</DescriptionTextId>
        <LabelTextId>5088</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4527</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rcp_pct_ecThrshldOverAlarm</ProgrammaticName>
        <EngineeringDescription>If the receptacle current is above this percentage of the full scale rated value, an alarm is activated; see 'evt_rcp_ec_over'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE: The hysteresis level is product dependent (it may be fixed or programmable):
- MPX Product: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5089</DescriptionTextId>
        <LabelTextId>5090</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4528</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pct_ecThrshldUnderAlarmLN</ProgrammaticName>
        <EngineeringDescription>If the module current is below this percentage of the full scale rated value, an under current alarm is activated; see 'evt_rem_ec_underLN'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldUnderAlarmLL' for line-to-line under current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5091</DescriptionTextId>
        <LabelTextId>5092</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4529</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pct_ecThrshldOverWarnLN</ProgrammaticName>
        <EngineeringDescription>If the module current is above this percentage of the full scale rated value, an over current warning is activated; see 'evt_rem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldOverWarnLL' for line-to-line over current warning threshold.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5093</DescriptionTextId>
        <LabelTextId>5094</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4530</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pct_ecThrshldOverAlarmLN</ProgrammaticName>
        <EngineeringDescription>If the module current is above this percentage of the full scale rated value, an over current alarm is activated; see 'evt_rem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldOverAlarmLL' for line-to-line over current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5095</DescriptionTextId>
        <LabelTextId>5096</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4531</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pct_ecThrshldUnderAlarmLL</ProgrammaticName>
        <EngineeringDescription>If the module current is below this percentage of the full scale rated value, an under current alarm is activated; see 'evt_rem_ec_underLL'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldUnderAlarmLN' for line-to-neutral under current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5097</DescriptionTextId>
        <LabelTextId>5098</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4532</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pct_ecThrshldOverWarnLL</ProgrammaticName>
        <EngineeringDescription>If the module current is above this percentage of the full scale rated value, an over current warning is activated; see 'evt_rem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldOverWarnLN' for line-to-neutral over current warning threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5099</DescriptionTextId>
        <LabelTextId>5100</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4533</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_rem_pct_ecThrshldOverAlarmLL</ProgrammaticName>
        <EngineeringDescription>If the module current is above this percentage of the full scale rated value, an over current alarm is activated; see 'evt_rem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldOverAlarmLN' for line-to-neutral over current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5101</DescriptionTextId>
        <LabelTextId>5102</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4534</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldUnderAlarmL1</ProgrammaticName>
        <EngineeringDescription>If the module's line 1 current is below this percentage of the full scale rated value, an under current alarm is activated; see 'evt_pem_ec_underL1'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5103</DescriptionTextId>
        <LabelTextId>5104</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4535</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldUnderAlarmL2</ProgrammaticName>
        <EngineeringDescription>If the module's line 2 current is below this percentage of the full scale rated value, an under current alarm is activated; see 'evt_pem_ec_underL2'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5105</DescriptionTextId>
        <LabelTextId>5106</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4536</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldUnderAlarmL3</ProgrammaticName>
        <EngineeringDescription>If the module's line 3 current is below this percentage of the full scale rated value, an under current alarm is activated; see 'evt_pem_ec_underL3'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5107</DescriptionTextId>
        <LabelTextId>5108</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4537</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldOverWarnL1</ProgrammaticName>
        <EngineeringDescription>If the module's line 1 current is above this percentage of the full scale rated value, an over current warning is activated; see 'evt_pem_ec_overL1'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5109</DescriptionTextId>
        <LabelTextId>5110</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4538</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldOverWarnL2</ProgrammaticName>
        <EngineeringDescription>If the module's line 2 current is above this percentage of the full scale rated value, an over current warning is activated; see 'evt_pem_ec_overL2'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5111</DescriptionTextId>
        <LabelTextId>5112</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4539</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldOverWarnL3</ProgrammaticName>
        <EngineeringDescription>If the module's line 3 current is above this percentage of the full scale rated value, an over current warning is activated; see 'evt_pem_ec_overL3'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5113</DescriptionTextId>
        <LabelTextId>5114</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4540</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldOverAlarmL1</ProgrammaticName>
        <EngineeringDescription>If the module's line 1 current is above this percentage of the full scale rated value, an over current alarm is activated; see 'evt_pem_ec_overL1'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5115</DescriptionTextId>
        <LabelTextId>5116</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4541</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldOverAlarmL2</ProgrammaticName>
        <EngineeringDescription>If the module's line 2 current is above this percentage of the full scale rated value, an over current alarm is activated; see 'evt_pem_ec_overL2'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5117</DescriptionTextId>
        <LabelTextId>5118</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>

    <DataDictEntry>
        <DataId>4542</DataId>
        <DefnType>NumericDefn</DefnType>
        <EntryStatus>Released</EntryStatus>
        <ProgrammaticName>val_pem_pct_ecThrshldOverAlarmL3</ProgrammaticName>
        <EngineeringDescription>If the module's line 3 current is above this percentage of the full scale rated value, an over current alarm is activated; see 'evt_pem_ec_overL3'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
        <EngineeringReference/>
        <DescriptionTextId>5119</DescriptionTextId>
        <LabelTextId>5120</LabelTextId>
        <NumericDefn>
            <MeasureBaseId>11</MeasureBaseId>
        </NumericDefn>
    </DataDictEntry>


<!--
-->

<DataDictEntry>
    <DataId>4543</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_pct_ecThrshldUnderAlarmLN</ProgrammaticName>
    <EngineeringDescription>If the module current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underLN'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' and 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5121</DescriptionTextId>
    <LabelTextId>5122</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4544</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_pct_ecThrshldOverWarnLN</ProgrammaticName>
    <EngineeringDescription>If the module current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5123</DescriptionTextId>
    <LabelTextId>5124</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4545</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_pct_ecThrshldOverAlarmLN</ProgrammaticName>
    <EngineeringDescription>If the module current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overLN'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5125</DescriptionTextId>
    <LabelTextId>5126</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4546</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_pct_ecThrshldUnderAlarmLL</ProgrammaticName>
    <EngineeringDescription>If the module current is below this threshold, an under current alarm is activated; see 'evt_pem_ec_underLL'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldUnderAlarmL*' or 'val_pem_pct_ecThrshldUnderAlarmL*' for line configuration under current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5127</DescriptionTextId>
    <LabelTextId>5128</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4547</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_pct_ecThrshldOverWarnLL</ProgrammaticName>
    <EngineeringDescription>If the module current is above this threshold, an over current warning is activated; see 'evt_pem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverWarnL*' or 'val_pem_pct_ecThrshldOverWarnL*' for line configuration over current warning thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5129</DescriptionTextId>
    <LabelTextId>5130</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4548</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_pct_ecThrshldOverAlarmLL</ProgrammaticName>
    <EngineeringDescription>If the module current is above this threshold, an over current alarm is activated; see 'evt_pem_ec_overLL'.

Once activated, the event remains active until the current is below the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_pem_ec_thrshldOverAlarmL*' or 'val_pem_pct_ecThrshldOverAlarmL*' for line configuration over current alarm thresholds.

MPX SPECIFIC: The hysteresis level is fixed.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5131</DescriptionTextId>
    <LabelTextId>5132</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4549</DataId>
    <DefnType>MultiStateDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>st_sys_resetToFctryDflts</ProgrammaticName>
    <EngineeringDescription>Reset system to factory default settings.

MPX Specific:  This includes setting all accumulated energy values back to 0 KW-Hrs.
    </EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5135</DescriptionTextId>
    <LabelTextId>5136</LabelTextId>
    <MultiStateDefn>
        <EnumStateDefn_Id>4124</EnumStateDefn_Id>
    </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4550</DataId>
    <DefnType>EventDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>evt_sys_frmwrUpdtRqrd</ProgrammaticName>
    <EngineeringDescription>Module compatibility error requires a system firmware update to resolve.

The event clears when the causal event clears (typically as a result of performing a firmware update
or possibly replacing a system component with one that contains compatible firmware).

MPX Specific: This is asserted when one or more modules (BRM, BDM or PEM) is detected with firmware that is not compatible with the CM firmware.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5137</DescriptionTextId>
    <LabelTextId>5138</LabelTextId>
    <EventDefn>
        <DataId>4550</DataId>
    </EventDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4551</DataId>
    <DefnType>EventDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>evt_sys_testEvent</ProgrammaticName>
    <EngineeringDescription>A generic test event designed to evaluate system handling of events.
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5139</DescriptionTextId>
    <LabelTextId>5140</LabelTextId>
    <EventDefn>
        <DataId>4551</DataId>
    </EventDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4552</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_sys_na_deviceCnt</ProgrammaticName>
    <EngineeringDescription>Defines the number of devices contained in the system.
MPX Specific: This is the number of physical strips in the system (i.e. the number PDUs in the system).
</EngineeringDescription>
    <EngineeringReference/>
    <DescriptionTextId>5141</DescriptionTextId>
    <LabelTextId>5142</LabelTextId>
    <NumericDefn>
        <MeasureBaseId>0</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'CoreInterfaces.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4553</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_serverClass</ProgrammaticName>
 <EngineeringDescription>The general classification for this device.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5149</DescriptionTextId>   <!--  5149 => "The general classification for this system"  -->
 <LabelTextId>5148</LabelTextId>   <!--  5148 => "Server Class"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4125</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4554</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecAvailThrshldAlarm_LN</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_pem_pct_ecThrshldOverAlarmLN for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5154</LabelTextId>   <!--  5154 => "PDU Available Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4555</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecUtlztnThrshldAlarm_LN</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_pem_pct_ecThrshldOverAlarmLN for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5156</LabelTextId>   <!--  5156 => "PDU Percent Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4556</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecAvailThrshldAlarm_LL</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_pem_pct_ecThrshldOverAlarmLL for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5154</LabelTextId>   <!--  5154 => "PDU Available Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4557</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecUtlztnThrshldAlarm_LL</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_pem_pct_ecThrshldOverAlarmLL for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5156</LabelTextId>   <!--  5156 => "PDU Percent Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4558</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecAvailThrshldAlarm_L1</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_pem_pct_ecThrshldOverAlarmL1 for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5162</LabelTextId>   <!--  5162 => "PDU Available L1 Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4559</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecAvailThrshldAlarm_L2</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_pem_pct_ecThrshldOverAlarmL2 for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5163</LabelTextId>   <!--  5163 => "PDU Available L2 Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4560</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecAvailThrshldAlarm_L3</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_pem_pct_ecThrshldOverAlarmL3 for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5164</LabelTextId>   <!--  5164 => "PDU Available L3 Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4561</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecUtlztnThrshldAlarm_L1</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_pem_pct_ecThrshldOverAlarmL1 for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5165</LabelTextId>   <!--  5165 => "PDU Percent L1 Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4562</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecUtlztnThrshldAlarm_L2</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_pem_pct_ecThrshldOverAlarmL2 for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5166</LabelTextId>   <!--  5166 => "PDU Percent L2 Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4563</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pem_ecUtlztnThrshldAlarm_L3</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_pem_pct_ecThrshldOverAlarmL3 for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5167</LabelTextId>   <!--  5167 => "PDU Percent L3 Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4564</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ecAvailThrshldAlarm_LN</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_rem_pct_ecThrshldOverAlarmLN for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5158</LabelTextId>   <!--  5158 => "Branch Available Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4565</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ecUtlztnThrshldAlarm_LN</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_rem_pct_ecThrshldOverAlarmLN for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5159</LabelTextId>   <!--  5159 => "Branch Percent Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4566</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ecAvailThrshldAlarm_LL</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_rem_pct_ecThrshldOverAlarmLL for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5158</LabelTextId>   <!--  5158 => "Branch Available Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4567</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ecUtlztnThrshldAlarm_LL</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_rem_pct_ecThrshldOverAlarmLL for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5159</LabelTextId>   <!--  5159 => "Branch Percent Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4568</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rcp_ecAvailThrshldAlarm</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_rcp_pct_ecThrshldOverAlarm for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5155</DescriptionTextId>   <!--  5155 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>5160</LabelTextId>   <!--  5160 => "Receptacle Available Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4569</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rcp_ecUtlztnThrshldAlarm</ProgrammaticName>
 <EngineeringDescription>The percent of current utilization relative to over current alarm threshold.

The current being drawn divided by the high current alarm threshold. The measurement is shown as percentage.  (See val_rcp_pct_ecThrshldOverAlarm for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5157</DescriptionTextId>   <!--  5157 => "The percent of current utilization relative to over current alarm threshold."  -->
 <LabelTextId>5161</LabelTextId>   <!--  5161 => "Receptacle Percent Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4570</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_sensorId</ProgrammaticName>
 <EngineeringDescription>System assigned auxiliary sensor identification number. The value assigned is product specific.

MPX SPECIFIC:
At run-time the system assigns a one-based index to the sensors. The assigned number is unique for each auxiliary sensor within a string of sensors.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5169</DescriptionTextId>   <!--  5169 => "System assigned auxiliary sensor identification number"  -->
 <LabelTextId>5168</LabelTextId>   <!--  5168 => "Auxiliary Sensor Identifier"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4571</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_sensorLabelSysAssign</ProgrammaticName>
 <EngineeringDescription>Label assigned to the Auxiliary Sensor at runtime by the system. The value is independent of any user assigned label or asset tag.

The exact format of this label is system dependent and is subject to change; it should not be used for programmatic parsing-deconstruction.

MPX SPECIFIC: The system assigned label that is of the form "x-y", where 'x' is the one-based index of the PDU, 'y' is the one-based Auxiliary Sensor ID.
The value of the 'x' and 'y' fields are determined by the value of 'val_aps_id' and 'val_aux_sensorId' fields from the associated PDU and AuxSensor reports, respectively.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5171</DescriptionTextId>   <!--  5171 => "Label assigned to the Auxiliary Sensor at runtime by the system. The value is independent of any user assigned label or asset tag."  -->
 <LabelTextId>5170</LabelTextId>   <!--  5170 => "System Assigned Label"  -->
 <TextDefn>
  <DataId>4571</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4572</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_sensorPos</ProgrammaticName>
 <EngineeringDescription>Auxiliary sensor relative position.  This is a one-based value that indicates the sensor's position relative to the sensor string connector.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5173</DescriptionTextId>   <!--  5173 => "Auxiliary sensor relative position.  This is a one-based value that indicates the sensor's position relative to the sensor string connector."  -->
 <LabelTextId>5172</LabelTextId>   <!--  5172 => "Auxiliary Sensor's Relative Position"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4573</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_sensorSnAps</ProgrammaticName>
 <EngineeringDescription>The Auxiliary Sensor is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N).

MPX SPECIFIC: This acts as a key to associate an Auxiliary Sensor with the PDU, see 'str_aps_serialNumber'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5175</DescriptionTextId>   <!--  5175 => "The Auxiliary Sensor is installed in the Power Distribution Unit (PDU) identified by this Serial Number (S/N)"  -->
 <LabelTextId>5174</LabelTextId>   <!--  5174 => "PDU Module S/N"  -->
 <TextDefn>
  <DataId>4573</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4574</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_sensorMeasType</ProgrammaticName>
 <EngineeringDescription>Auxiliary Sensor Measurement Type</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5177</DescriptionTextId>   <!--  5177 => "Auxiliary Sensor Measurement Type"  -->
 <LabelTextId>5176</LabelTextId>   <!--  5176 => "Auxiliary Sensor Measurement Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4126</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4575</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_sensorLabelUsrAssign</ProgrammaticName>
 <EngineeringDescription>User assigned auxiliary sensor label.

MPX Product:
- Only 7-bit ASCII characters are supported.
- User assigned labels are not required to be unique.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5181</DescriptionTextId>   <!--  5181 => "User assigned auxiliary sensor label."  -->
 <LabelTextId>5180</LabelTextId>   <!--  5180 => "Auxiliary Sensor User Assigned Label"  -->
 <TextDefn>
  <DataId>4575</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4576</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_sensorAssetTag01</ProgrammaticName>
 <EngineeringDescription>User assigned auxiliary sensor asset tag 01.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5183</DescriptionTextId>   <!--  5183 => "User assigned auxiliary sensor asset tag 01"  -->
 <LabelTextId>5182</LabelTextId>   <!--  5182 => "Auxiliary Sensor Asset Tag 01"  -->
 <TextDefn>
  <DataId>4576</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4577</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_sensorAssetTag02</ProgrammaticName>
 <EngineeringDescription>User assigned auxiliary sensor asset tag 02.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5185</DescriptionTextId>   <!--  5185 => "User assigned auxiliary sensor asset tag 02"  -->
 <LabelTextId>5184</LabelTextId>   <!--  5184 => "Auxiliary Sensor Asset Tag 02"  -->
 <TextDefn>
  <DataId>4577</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4578</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_tmpSensorSerialNumber</ProgrammaticName>
 <EngineeringDescription>The Temperature Sensor's globally unique serial number assigned at the time of manufacture.

This is the serial number that is meant for display purposes / human consumption.

Do not use this field (i.e. desconstruct the contents) for determining programmatic behavior or components fields. The format of this can vary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5187</DescriptionTextId>   <!--  5187 => "The Temperature Sensor's globally unique serial number assigned at the time of manufacture"  -->
 <LabelTextId>5186</LabelTextId>   <!--  5186 => "Temperature Sensor Serial Number"  -->
 <TextDefn>
  <DataId>4578</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4579</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_tmp_sensorMeasure</ProgrammaticName>
 <EngineeringDescription>Temperature measured at the temperature sensor</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5188</DescriptionTextId>   <!--  5188 => "Temperature measured at the temperature sensor"  -->
 <LabelTextId>5178</LabelTextId>   <!--  5178 => "Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4580</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_tmpSensorOver</ProgrammaticName>
 <EngineeringDescription>An over temperature condition was detected.  The temperature has exceeded a threshold for a time duration.

The severity of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. they may be fixed values or user configured values).  See val_aux_tmp_snsrThrshldOvrWrn and val_aux_tmp_snsrThrshldOvrAlm.

The event becomes inactive once the sensor's temperature is less than "the over temperature threshold minus the hysteresis" OR if the temperature sensor is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the severity of the over temperature condition. The thresold value is configurable by the user.  The time duration is internally fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5190</DescriptionTextId>   <!--  5190 => "An over temperature condition was detected."  -->
 <LabelTextId>5189</LabelTextId>   <!--  5189 => "Over Temperature"  -->
 <EventDefn>
  <DataId>4580</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4581</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_tmpSensorUnder</ProgrammaticName>
 <EngineeringDescription>An under temperature condition was detected.  The temperature has fallen below a threshold for a time duration.

The severity of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. they may be fixed values or user configured values).  See val_aux_tmp_snsrThrshldUnderWrn and val_aux_tmp_snsrThrshldUnderAlm.

The event becomes inactive when the sensor's temperature exceeds "the under temperature threshold plus hysteresis" OR if the temperature sensor is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the severity of the under temperature condition. The thresold value is configurable by the user.  The time duration is internally fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5192</DescriptionTextId>   <!--  5192 => "An under temperature condition was detected"  -->
 <LabelTextId>5191</LabelTextId>   <!--  5191 => "Under Temperature"  -->
 <EventDefn>
  <DataId>4581</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4582</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_tmp_snsrThrshldOvrWrn</ProgrammaticName>
 <EngineeringDescription>Over temperature warning threshold.  A warning is activated if the temperature is above this value.  See 'evt_aux_tmpSensorOver'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5194</DescriptionTextId>   <!--  5194 => "Over temperature warning threshold."  -->
 <LabelTextId>5193</LabelTextId>   <!--  5193 => "Over Temperature Warning Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4583</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_tmp_snsrThrshldOvrAlrm</ProgrammaticName>
 <EngineeringDescription>Over temperature alarm threshold.  An alarm is activated if the temperature is above this value.  See 'evt_aux_tmpSensorOver'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5196</DescriptionTextId>   <!--  5196 => "Over temperature alarm threshold."  -->
 <LabelTextId>5195</LabelTextId>   <!--  5195 => "Over Temperature Alarm Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4584</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_tmp_snsrThrshldUnderWrn</ProgrammaticName>
 <EngineeringDescription>Under temperature warning threshold.  A warning is activated if the temperature is below this value.  See 'evt_aux_tmpSensorUnder'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5198</DescriptionTextId>   <!--  5198 => "Under temperature warning threshold."  -->
 <LabelTextId>5197</LabelTextId>   <!--  5197 => "Under Temperature Warning Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4585</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_tmp_snsrThrshldUnderAlrm</ProgrammaticName>
 <EngineeringDescription>Under temperature alarm threshold.  An alarm is activated if the temperature is below this value.  See 'evt_aux_tmpSensorUnder'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5200</DescriptionTextId>   <!--  5200 => "Under temperature alarm threshold."  -->
 <LabelTextId>5199</LabelTextId>   <!--  5199 => "Under Temperature Alarm Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4586</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_hmdSensorSerialNumber</ProgrammaticName>
 <EngineeringDescription>The Humidity Sensor's globally unique serial number assigned at the time of manufacture.

This is the serial number that is meant for display purposes / human consumption.

Do not use this field (i.e. desconstruct the contents) for determining programmatic behavior or components fields. The format of this can vary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5202</DescriptionTextId>   <!--  5202 => "The Humidity Sensor's globally unique serial number assigned at the time of manufacture"  -->
 <LabelTextId>5201</LabelTextId>   <!--  5201 => "Humidity Sensor Serial Number"  -->
 <TextDefn>
  <DataId>4586</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4587</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_hmd_sensorMeasure</ProgrammaticName>
 <EngineeringDescription>Relative Humidity measured at the humidity sensor</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5204</DescriptionTextId>   <!--  5204 => "Relative Humidity measured at the humidity sensor"  -->
 <LabelTextId>5203</LabelTextId>   <!--  5203 => "Relative Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4588</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_hmdSensorOver</ProgrammaticName>
 <EngineeringDescription>An over relative humidity condition was detected.  The relative humidity has exceeded a threshold for a time duration.

The severity of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. they may be fixed values or user configured values).  See val_aux_hmd_snsrThrshldOvrWrn and val_aux_hmd_snsrThrshldOvrAlm.

The event becomes inactive once the sensor reads a relative humidity level that is less than "the over relative humidity threshold minus the hysteresis" OR if the humidity sensor is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the severity of the over relative humidity condition. The thresold value is configurable by the user.  The time duration is internally fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5206</DescriptionTextId>   <!--  5206 => "An over relative humidity condition was detected"  -->
 <LabelTextId>5205</LabelTextId>   <!--  5205 => "Over Relative Humidity"  -->
 <EventDefn>
  <DataId>4588</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4589</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_hmdSensorUnder</ProgrammaticName>
 <EngineeringDescription>An under relative humidity condition was detected.  The relative humidity has fallen below a threshold for a time duration.

The severity of this event is product dependent.

The threshold value and time duration settings are product dependent (i.e. they may be fixed values or user configured values).  See val_aux_hmd_snsrThrshldUnderWrn and val_aux_hmd_snsrThrshldUnderAlm.

The event becomes inactive once the sensor reads a relative humidity level that exceeds "the under relative humidity threshold minus the hysteresis" OR if the humidity sensor is uninstalled.

MPX SPECIFIC: The event is either a WARNING or an ALARM, depending upon the severity of the under relative humidity condition. The thresold value is configurable by the user.  The time duration is internally fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5208</DescriptionTextId>   <!--  5208 => "An under relative humidity condition was detected"  -->
 <LabelTextId>5207</LabelTextId>   <!--  5207 => "Under Relative Humidity"  -->
 <EventDefn>
  <DataId>4589</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4590</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_hmd_snsrThrshldOvrWrn</ProgrammaticName>
 <EngineeringDescription>Over relative humidity warning threshold.  A warning is activated if the relative humidity is above this value.  See 'evt_aux_hmdSensorOver'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5210</DescriptionTextId>   <!--  5210 => "Over relative humidity warning threshold."  -->
 <LabelTextId>5209</LabelTextId>   <!--  5209 => "Over Humidity Warning Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4591</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_hmd_snsrThrshldOvrAlrm</ProgrammaticName>
 <EngineeringDescription>Over relative humidity alarm threshold.  An alarm is activated if the relative humidity is above this value.  See 'evt_aux_hmdSensorOver'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5212</DescriptionTextId>   <!--  5212 => "Over relative humidity alarm threshold."  -->
 <LabelTextId>5211</LabelTextId>   <!--  5211 => "Over Relative Humidity Alarm Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4592</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_hmd_snsrThrshldUnderWrn</ProgrammaticName>
 <EngineeringDescription>Under relative humidity warning threshold.  A warning is activated if the relative humidity is below this value.  See 'evt_aux_hmdSensorUnder'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5214</DescriptionTextId>   <!--  5214 => "Under relative humidity warning threshold."  -->
 <LabelTextId>5213</LabelTextId>   <!--  5213 => "Under Relative Humidity Warning Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4593</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_hmd_snsrThrshldUnderAlrm</ProgrammaticName>
 <EngineeringDescription>Under relative humidity alarm threshold.  An alarm is activated if the relative humidity is below this value.  See 'evt_aux_hmdSensorUnder'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5216</DescriptionTextId>   <!--  5216 => "Under relative humidity alarm threshold."  -->
 <LabelTextId>5215</LabelTextId>   <!--  5215 => "Under Relative Humidity Alarm Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>
<!-- Machine transferred from FDM 'icom_xp.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4594</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airA</ProgrammaticName>
 <EngineeringDescription>Air temperature as measured by external air sensor A.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpAirOverA.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5219</DescriptionTextId>   <!--  5219 => "Air temperature as measured by external air sensor A."  -->
 <LabelTextId>5218</LabelTextId>   <!--  5218 => "Ext Air Sensor A Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4595</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_pct_hmdtyAirA</ProgrammaticName>
 <EngineeringDescription>Relative humidity as measured by external air sensor A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5221</DescriptionTextId>   <!--  5221 => "Relative humidity as measured by external air sensor A."  -->
 <LabelTextId>5220</LabelTextId>   <!--  5220 => "Ext Air Sensor A Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4596</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_dewPntA</ProgrammaticName>
 <EngineeringDescription>Dew point temperature as measured by external air sensor A.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpDewPntOver..</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5223</DescriptionTextId>   <!--  5223 => "Dew point temperature as measured by external air sensor A."  -->
 <LabelTextId>5222</LabelTextId>   <!--  5222 => "Ext Air Sensor A Dew Point Temp"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4597</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airB</ProgrammaticName>
 <EngineeringDescription>Air temperature as measured by external air sensor B.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpAirOverB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5225</DescriptionTextId>   <!--  5225 => "Air temperature as measured by external air sensor B."  -->
 <LabelTextId>5224</LabelTextId>   <!--  5224 => "Ext Air Sensor B Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4598</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_pct_hmdtyAirB</ProgrammaticName>
 <EngineeringDescription>Relative humidity as measured by external air sensor B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5227</DescriptionTextId>   <!--  5227 => "Relative humidity as measured by external air sensor B."  -->
 <LabelTextId>5226</LabelTextId>   <!--  5226 => "Ext Air Sensor B Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4599</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_dewPntB</ProgrammaticName>
 <EngineeringDescription>Dew point temperature as measured by external air sensor B.

iCOM Specific Behavior: This value is used in determining activation of event evt_ext_tmpDewPntOver.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5229</DescriptionTextId>   <!--  5229 => "Dew point temperature as measured by external air sensor B."  -->
 <LabelTextId>5228</LabelTextId>   <!--  5228 => "Ext Air Sensor B Dew Point Temp"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4600</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the ([External Air Sensor A Over Temperature], [External Air Sensor B Over Temperature]...) events.
See events evt_ext_tmpAirOverA and evt_ext_tmpAirOverB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5231</DescriptionTextId>   <!--  5231 => "Threshold value used in the ([External Air Sensor A Over Temperature], [External Air Sensor B Over Temperature]...) events."  -->
 <LabelTextId>5230</LabelTextId>   <!--  5230 => "External Air Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4601</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpAirOverA</ProgrammaticName>
 <EngineeringDescription>[Ext Air Sensor A Temperature] has exceeded [External Air Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_ext_tmp_airOverThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airA.

The behavior of this event may optionally be modified by:
st_ext_tmpAirOverEnableA
st_ext_tmpAirOverTypeA

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5233</DescriptionTextId>   <!--  5233 => "[Ext Air Sensor A Temperature] has exceeded [External Air Over Temp Threshold]."  -->
 <LabelTextId>5232</LabelTextId>   <!--  5232 => "External Air Sensor A Over Temperature"  -->
 <EventDefn>
  <DataId>4601</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4602</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirOverEnableA</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [External Air Sensor A Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirOverA.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5235</DescriptionTextId>   <!--  5235 => "Enable/disable the activation of the [External Air Sensor A Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5234</LabelTextId>   <!--  5234 => "Ext Air Sensor A Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4603</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirOverTypeA</ProgrammaticName>
 <EngineeringDescription>The event type for the [External Air Sensor A Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirOverA.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5237</DescriptionTextId>   <!--  5237 => "The event type for the [External Air Sensor A Over Temperature] event."  -->
 <LabelTextId>5236</LabelTextId>   <!--  5236 => "Ext Air Sensor A Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4604</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpAirOverB</ProgrammaticName>
 <EngineeringDescription>[Ext Air Sensor B Temperature] has exceeded [External Air Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_ext_tmp_airOverThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airB.

The behavior of this event may optionally be modified by:
st_ext_tmpAirOverEnableB
st_ext_tmpAirOverTypeB

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5242</DescriptionTextId>   <!--  5242 => "[Ext Air Sensor B Temperature] has exceeded [External Air Over Temp Threshold]."  -->
 <LabelTextId>5241</LabelTextId>   <!--  5241 => "External Air Sensor B Over Temperature"  -->
 <EventDefn>
  <DataId>4604</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4605</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirOverEnableB</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [External Air Sensor B Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirOverB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5244</DescriptionTextId>   <!--  5244 => "Enable/disable the activation of the [External Air Sensor B Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5243</LabelTextId>   <!--  5243 => "Ext Air Sensor B Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4606</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirOverTypeB</ProgrammaticName>
 <EngineeringDescription>The event type for the [External Air Sensor B Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirOverB.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5246</DescriptionTextId>   <!--  5246 => "The event type for the [External Air Sensor B Over Temperature] event."  -->
 <LabelTextId>5245</LabelTextId>   <!--  5245 => "Ext Air Sensor B Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4607</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airUnderThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the ([Ext Air Sensor A Under Temperature], [Ext Air Sensor B Under Temperature]...) events.
See events evt_ext_tmpAirUnderA and evt_ext_tmpAirUnderB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5248</DescriptionTextId>   <!--  5248 => "Threshold value used in the ([Ext Air Sensor A Under Temperature], [Ext Air Sensor B Under Temperature]...) events."  -->
 <LabelTextId>5247</LabelTextId>   <!--  5247 => "Ext Air Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4608</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpAirUnderA</ProgrammaticName>
 <EngineeringDescription>[Ext Air Sensor A Temperature] has dropped below [Ext Air Under Temp Threshold].  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_ext_tmp_airUnderThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airA.

The behavior of this event may optionally be modified by:
st_ext_tmpAirUnderEnableA
st_ext_tmpAirUnderTypeA

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5250</DescriptionTextId>   <!--  5250 => "[Ext Air Sensor A Temperature] has dropped below [Ext Air Under Temp Threshold]."  -->
 <LabelTextId>5249</LabelTextId>   <!--  5249 => "Ext Air Sensor A Under Temperature"  -->
 <EventDefn>
  <DataId>4608</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4609</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirUnderEnableA</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Air Sensor A Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirUnderA.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5252</DescriptionTextId>   <!--  5252 => "Enable/disable the activation of the [Ext Air Sensor A Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5251</LabelTextId>   <!--  5251 => "Ext Air Sensor A Under Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4610</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirUnderTypeA</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Air Sensor A Under Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirUnderA.

iCOM specific:
iCOM only supports message, warning, and alarm</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5254</DescriptionTextId>   <!--  5254 => "The event type for the [Ext Air Sensor A Under Temperature] event."  -->
 <LabelTextId>5253</LabelTextId>   <!--  5253 => "Ext Air Sensor A Under Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4611</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpAirUnderB</ProgrammaticName>
 <EngineeringDescription>[Ext Air Sensor B Temperature] has dropped below [Ext Air Under Temp Threshold].  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_ext_tmp_AirUnderThrshld.
Value used in comparison against threshold is specified in val_ext_tmp_airB.

The behavior of this event may optionally be modified by:
st_ext_tmpAirUnderEnableB
st_ext_tmpAirUnderTypeB

iCOM specific:  The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5256</DescriptionTextId>   <!--  5256 => "[Ext Air Sensor B Temperature] has dropped below [Ext Air Under Temp Threshold]."  -->
 <LabelTextId>5255</LabelTextId>   <!--  5255 => "Ext Air Sensor B Under Temperature"  -->
 <EventDefn>
  <DataId>4611</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4612</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirUnderEnableB</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Air Sensor B Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpAirUnderB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5258</DescriptionTextId>   <!--  5258 => "Enable/disable the activation of the [Ext Air Sensor B Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5257</LabelTextId>   <!--  5257 => "Ext Air Sensor B Under Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4613</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpAirUnderTypeB</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Air Sensor B Under Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpAirUnderB.

iCOM specific:
iCOM only supports message, warning, and alarm</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5260</DescriptionTextId>   <!--  5260 => "The event type for the [Ext Air Sensor B Under Temperature] event."  -->
 <LabelTextId>5259</LabelTextId>   <!--  5259 => "Ext Air Sensor B Under Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4614</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_dewPntOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Ext Dew Point Over Temperature] event.
See event evt_ext_tmpDewPntOver.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5262</DescriptionTextId>   <!--  5262 => "Threshold value used in the [Ext Dew Point Over Temperature] event."  -->
 <LabelTextId>5261</LabelTextId>   <!--  5261 => "Ext Dew Point Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4615</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpDewPntOver</ProgrammaticName>
 <EngineeringDescription>At least one dew point temperature reading ([Ext Air Sensor A Dew Point Temp], [Ext Air Sensor B Dew Point Temp]...) has exceeded [Ext Dew Point Over Temp Threshold].  The event is deactivated when all causal dew point temperatures drop below the threshold.

Event threshold is specified in val_ext_tmp_dewPntOverThrshld.
Values used in comparison against threshold are specified in val_ext_tmp_dewPntA and val_ext_tmp_dewPntB.

The behavior of this event may optionally be modified by:
st_ext_tmpDewPntOverEnable
st_ext_tmpDewPntOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5264</DescriptionTextId>   <!--  5264 => "At least one dew point temperature reading ([Ext Air Sensor A Dew Point Temp], [Ext Air Sensor B Dew Point Temp]...) has exceeded [Ext Dew Point Over Temp Threshold]."  -->
 <LabelTextId>5263</LabelTextId>   <!--  5263 => "Ext Dew Point Over Temperature"  -->
 <EventDefn>
  <DataId>4615</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4616</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpDewPntOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Dew Point Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_tmpDewPntOver.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5266</DescriptionTextId>   <!--  5266 => "Enable/disable the activation of the [Ext Dew Point Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5265</LabelTextId>   <!--  5265 => "Ext Dew Point Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4617</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpDewPntOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Dew Point Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_tmpDewPntOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5268</DescriptionTextId>   <!--  5268 => "The event type for the [Ext Dew Point Over Temperature] event."  -->
 <LabelTextId>5267</LabelTextId>   <!--  5267 => "Ext Dew Point Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4618</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_snsrAirIssueA</ProgrammaticName>
 <EngineeringDescription>The external air sensor A is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_ext_snsrAirIssueEnableA
st_ext_snsrAirIssueTypeA

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5270</DescriptionTextId>   <!--  5270 => "The external air sensor A is disconnected or the signal is out of range."  -->
 <LabelTextId>5269</LabelTextId>   <!--  5269 => "External Air Sensor A Issue"  -->
 <EventDefn>
  <DataId>4618</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4619</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_snsrAirIssueEnableA</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [External Air Sensor A Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_snsrAirIssueA.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5272</DescriptionTextId>   <!--  5272 => "Enable/disable the activation of the [External Air Sensor A Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5271</LabelTextId>   <!--  5271 => "Ext Air Sensor A Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4620</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_snsrAirIssueTypeA</ProgrammaticName>
 <EngineeringDescription>The event type for the [External Air Sensor A Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_snsrAirIssueA.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5274</DescriptionTextId>   <!--  5274 => "The event type for the [External Air Sensor A Issue] event."  -->
 <LabelTextId>5273</LabelTextId>   <!--  5273 => "External Air Sensor A Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4621</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_snsrAirIssueB</ProgrammaticName>
 <EngineeringDescription>The external air sensor B is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_ext_snsrAirIssueEnableB
st_ext_snsrAirIssueTypeB

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5276</DescriptionTextId>   <!--  5276 => "The external air sensor B is disconnected or the signal is out of range."  -->
 <LabelTextId>5275</LabelTextId>   <!--  5275 => "External Air Sensor B Issue"  -->
 <EventDefn>
  <DataId>4621</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4622</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_snsrAirIssueEnableB</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [External Air Sensor B Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_snsrAirIssueB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5278</DescriptionTextId>   <!--  5278 => "Enable/disable the activation of the [External Air Sensor B Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5277</LabelTextId>   <!--  5277 => "Ext Air Sensor B Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4623</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_snsrAirIssueTypeB</ProgrammaticName>
 <EngineeringDescription>The event type for the [External Air Sensor B Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_snsrAirIssueB.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5280</DescriptionTextId>   <!--  5280 => "The event type for the [External Air Sensor B Issue] event."  -->
 <LabelTextId>5279</LabelTextId>   <!--  5279 => "External Air Sensor B Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4624</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supCW</ProgrammaticName>
 <EngineeringDescription>Supply chilled water temperature.

iCOM Specific Behavior: This value is used in determining activation of event evt_clng_tmpSupCWOver. This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5282</DescriptionTextId>   <!--  5282 => "Supply chilled water temperature."  -->
 <LabelTextId>5281</LabelTextId>   <!--  5281 => "Supply Chilled Water Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4625</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supCWOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Supply Chilled Water Over Temp] event.
See event evt_clng_tmpSupCWOver. iCOM Specific: This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5284</DescriptionTextId>   <!--  5284 => "Threshold value used in the [Supply Chilled Water Over Temp] event."  -->
 <LabelTextId>5283</LabelTextId>   <!--  5283 => "Supply Chilled Water Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4626</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupCWOver</ProgrammaticName>
 <EngineeringDescription>[Supply Chilled Water Temperature] has exceeded [Supply Chilled Water Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_clng_tmp_supCWOverThrshld.
Value used in comparison against threshold is specified in val_clng_tmp_supCW.

The behavior of this event may optionally be modified by:
st_clng_tmpSupCWOverEnable
st_clng_tmpSupCWOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period. This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5286</DescriptionTextId>   <!--  5286 => "[Supply Chilled Water Temperature] has exceeded [Supply Chilled Water Over Temp Threshold]."  -->
 <LabelTextId>5285</LabelTextId>   <!--  5285 => "Supply Chilled Water Over Temp"  -->
 <EventDefn>
  <DataId>4626</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4627</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupCWOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Chilled Water Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupCWOver. iCOM Specific: This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5288</DescriptionTextId>   <!--  5288 => "Enable/disable the activation of the [Supply Chilled Water Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5287</LabelTextId>   <!--  5287 => "Supply CW Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4628</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupCWOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Chilled Water Over Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupCWOver.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5290</DescriptionTextId>   <!--  5290 => "The event type for the [Supply Chilled Water Over Temp] event."  -->
 <LabelTextId>5289</LabelTextId>   <!--  5289 => "Supply CW Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4629</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_snsrSupCWIssue</ProgrammaticName>
 <EngineeringDescription>The supply chilled water temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_clng_snsrSupCWIssueEnable
st_clng_snsrSupCWIssueType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible. This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5292</DescriptionTextId>   <!--  5292 => "The supply chilled water temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>5291</LabelTextId>   <!--  5291 => "Supply Chilled Water Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>4629</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4630</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_snsrSupCWIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Chilled Water Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_snsrSupCWIssue. iCOM Specific: This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5294</DescriptionTextId>   <!--  5294 => "Enable/disable the activation of the [Supply Chilled Water Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5293</LabelTextId>   <!--  5293 => "Supply CW Temp Sensor Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4631</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_snsrSupCWIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Chilled Water Temp Sensor Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_snsrSupCWIssue.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5296</DescriptionTextId>   <!--  5296 => "The event type for the [Supply Chilled Water Temp Sensor Issue] event."  -->
 <LabelTextId>5295</LabelTextId>   <!--  5295 => "Supply CW Temp Sensor Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4632</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supRfg</ProgrammaticName>
 <EngineeringDescription>Supply refrigerant temperature.

iCOM Specific Behavior: This value is used in determining activation of events evt_clng_tmpSupRfgOver and evt_clng_tmpSupRfgUnder. iCOM Specific: This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5298</DescriptionTextId>   <!--  5298 => "Supply refrigerant temperature."  -->
 <LabelTextId>5297</LabelTextId>   <!--  5297 => "Supply Refrigerant Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4633</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supRfgOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Supply Refrigerant Over Temp] event.
See event evt_clng_tmpSupRfgOver. iCOM Specific: This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5300</DescriptionTextId>   <!--  5300 => "Threshold value used in the [Supply Refrigerant Over Temp] event."  -->
 <LabelTextId>5299</LabelTextId>   <!--  5299 => "Supply Refrig Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4634</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupRfgOver</ProgrammaticName>
 <EngineeringDescription>[Supply Refrigerant Temperature] has exceeded [Supply Refrig Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_clng_tmp_supRfgOverThrshld.
Value used in comparison against threshold is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgOverEnable
st_clng_tmpSupRfgOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
 This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5302</DescriptionTextId>   <!--  5302 => "Event that is activated when [Supply Refrigerant Temperature] exceeds [Supply Refrig Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold."  -->
 <LabelTextId>5301</LabelTextId>   <!--  5301 => "Supply Refrigerant Over Temp"  -->
 <EventDefn>
  <DataId>4634</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4635</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrigerant Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgOver. iCOM Specific: This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5304</DescriptionTextId>   <!--  5304 => "Enable/disable the activation of the [Supply Refrigerant Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5303</LabelTextId>   <!--  5303 => "Supply Refrig Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4636</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrigerant Over Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupRfgOver.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5306</DescriptionTextId>   <!--  5306 => "The event type for the [Supply Refrigerant Over Temp] event."  -->
 <LabelTextId>5305</LabelTextId>   <!--  5305 => "Supply Refrig Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4637</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupRfgUnder</ProgrammaticName>
 <EngineeringDescription>[Supply Refrigerant Temperature] has dropped below a specified threshold.  The event is deactivated when the temperature rises above the threshold.

Value used in comparison against threshold is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgUnderEnable
st_clng_tmpSupRfgUnderType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event threshold is internally specified and is not accessible.
 This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5308</DescriptionTextId>   <!--  5308 => "[Supply Refrigerant Temperature] has dropped below a specified threshold."  -->
 <LabelTextId>5307</LabelTextId>   <!--  5307 => "Supply Refrigerant Under Temp"  -->
 <EventDefn>
  <DataId>4637</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4638</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgUnderEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrigerant Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgUnder. iCOM Specific: This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5310</DescriptionTextId>   <!--  5310 => "Enable/disable the activation of the [Supply Refrigerant Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5309</LabelTextId>   <!--  5309 => "Supply Refrig Under Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4639</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgUnderType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrigerant Under Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupRfgUnder.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5312</DescriptionTextId>   <!--  5312 => "The event type for the [Supply Refrigerant Under Temp] event."  -->
 <LabelTextId>5311</LabelTextId>   <!--  5311 => "Supply Refrig Under Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4640</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_snsrSupRfgIssue</ProgrammaticName>
 <EngineeringDescription>The supply refrigerant temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_clng_snsrSupRfgIssueEnable
st_clng_snsrSupRfgIssueType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible. This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5314</DescriptionTextId>   <!--  5314 => "The supply refrigerant temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>5313</LabelTextId>   <!--  5313 => "Supply Refrigerant Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>4640</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4641</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_snsrSupRfgIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrigerant Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_snsrSupRfgIssue. iCOM Specific: This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5316</DescriptionTextId>   <!--  5316 => "Enable/disable the activation of the [Supply Refrig Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5315</LabelTextId>   <!--  5315 => "Supply Refrig Temp Sensor Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4642</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_snsrSupRfgIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrigerant Temp Sensor Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_snsrSupRfgIssue.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5318</DescriptionTextId>   <!--  5318 => "The event type for the [Supply Refrig Temp Sensor Issue] event."  -->
 <LabelTextId>5317</LabelTextId>   <!--  5317 => "Supply Refrig Temp Sensor Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4643</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFlu</ProgrammaticName>
 <EngineeringDescription>Supply fluid temperature.

iCOM Specific Behavior: This value is used in determining activation of events evt_clng_tmpSupFluOver and evt_clng_tmpSupFluUnder. This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5320</DescriptionTextId>   <!--  5320 => "Supply fluid temperature."  -->
 <LabelTextId>5319</LabelTextId>   <!--  5319 => "Supply Fluid Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4644</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Supply Fluid Over Temp] event.
See event evt_clng_tmpSupFluOver.
See also val_clng_tmp_supFluOverThrshld2.

iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5322</DescriptionTextId>   <!--  5322 => "Threshold value used in the [Supply Fluid Over Temp] event."  -->
 <LabelTextId>5321</LabelTextId>   <!--  5321 => "Supply Fluid Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4645</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupFluOver</ProgrammaticName>
 <EngineeringDescription>[Supply Fluid Temperature] has exceeded a threshold.  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_clng_tmp_supFluOverThrshld and val_clng_tmp_supFluOverThrshld2.
Value used in comparison against threshold is specified in val_clng_tmp_supFlu.

The behavior of this event may optionally be modified by:
st_clng_tmpSupFluOverEnable
st_clng_tmpSupFluOverType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period. This is the fluid being supplied FROM this unit for cooling operations.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5324</DescriptionTextId>   <!--  5324 => "[Supply Fluid Temperature] has exceeded [Supply Fluid Over Temp Threshold]."  -->
 <LabelTextId>5323</LabelTextId>   <!--  5323 => "Supply Fluid Over Temp"  -->
 <EventDefn>
  <DataId>4645</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4646</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupFluOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Fluid Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupFluOver. iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5326</DescriptionTextId>   <!--  5326 => "Enable/disable the activation of the [Supply Fluid Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5325</LabelTextId>   <!--  5325 => "Supply Fluid Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4647</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupFluOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Fluid Over Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupFluOver.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5328</DescriptionTextId>   <!--  5328 => "The event type for the [Supply Fluid Over Temp] event."  -->
 <LabelTextId>5327</LabelTextId>   <!--  5327 => "Supply Fluid Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4648</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupFluUnder</ProgrammaticName>
 <EngineeringDescription>[Supply Fluid Temperature] has dropped below a threshold.  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_clng_tmp_supFluUnderThrshld and val_clng_tmp_supFluUnderThrshld2.
Value used in comparison against threshold is specified in val_clng_tmp_supFlu.

The behavior of this event may optionally be modified by:
st_clng_tmpSupFluUnderEnable
st_clng_tmpSupFluUnderType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event threshold is internally specified and is not accessible.  This is the fluid being supplied FROM this unit for cooling operations.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5330</DescriptionTextId>   <!--  5330 => "[Supply Fluid Temperature] has dropped below a specified threshold."  -->
 <LabelTextId>5329</LabelTextId>   <!--  5329 => "Supply Fluid Under Temp"  -->
 <EventDefn>
  <DataId>4648</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4649</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupFluUnderEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Fluid Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupFluUnder. This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5332</DescriptionTextId>   <!--  5332 => "Enable/disable the activation of the [Supply Fluid Under Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5331</LabelTextId>   <!--  5331 => "Supply Fluid Under Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4650</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupFluUnderType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Fluid Under Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_tmpSupFluUnder.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5334</DescriptionTextId>   <!--  5334 => "The event type for the [Supply Fluid Under Temp] event."  -->
 <LabelTextId>5333</LabelTextId>   <!--  5333 => "Supply Fluid Under Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4651</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_snsrSupFluIssue</ProgrammaticName>
 <EngineeringDescription>The supply fluid temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

The behavior of this event may optionally be modified by:
st_clng_snsrSupFluIssueEnable
st_clng_snsrSupFluIssueType

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible. This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5336</DescriptionTextId>   <!--  5336 => "The supply fluid temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>5335</LabelTextId>   <!--  5335 => "Supply Fluid Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>4651</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4652</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_snsrSupFluIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Fluid Temp Sensor Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_snsrSupFluIssue. iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5338</DescriptionTextId>   <!--  5338 => "Enable/disable the activation of the [Supply Fluid Temp Sensor State] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5337</LabelTextId>   <!--  5337 => "Supply Fluid Temp Sensor Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4653</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_snsrSupFluIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Fluid Temp Sensor Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_clng_snsrSupFluIssue.

iCOM specific:
iCOM only supports message, warning, and alarm. This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5340</DescriptionTextId>   <!--  5340 => "The event type for the [Supply Fluid Temp Sensor Issue] event."  -->
 <LabelTextId>5339</LabelTextId>   <!--  5339 => "Supply Fluid Temp Sensor Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4654</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_op1</ProgrammaticName>
 <EngineeringDescription>Pump 1 operational state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5342</DescriptionTextId>   <!--  5342 => "Pump 1 operational state."  -->
 <LabelTextId>5341</LabelTextId>   <!--  5341 => "Pump 1 State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4655</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_op2</ProgrammaticName>
 <EngineeringDescription>Pump 2 operational state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5344</DescriptionTextId>   <!--  5344 => "Pump 2 operational state."  -->
 <LabelTextId>5343</LabelTextId>   <!--  5343 => "Pump 2 State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4656</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_flowLoss1</ProgrammaticName>
 <EngineeringDescription>Loss of flow is detected in pump 1.  The loss of flow condition occurs when no differential pressure is detected across the pump. The event is deactivated when flow is re-established.

The behavior of this event may optionally be modified by:
st_pump_flowLossEnable1
st_pump_flowLossType1

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5346</DescriptionTextId>   <!--  5346 => "Loss of flow is detected in pump 1. The loss of flow condition occurs when no differential pressure is detected across the pump."  -->
 <LabelTextId>5345</LabelTextId>   <!--  5345 => "Pump 1 Loss of Flow"  -->
 <EventDefn>
  <DataId>4656</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4657</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_flowLossEnable1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Pump 1 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_pump_flowLoss1.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5348</DescriptionTextId>   <!--  5348 => "Enable/disable the activation of the [Pump 1 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5347</LabelTextId>   <!--  5347 => "Pump 1 Loss of Flow - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4658</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_flowLossType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Pump 1 Loss of Flow] event.
Event types are message, warning, alarm, and failure.
See event evt_pump_flowLoss1.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5350</DescriptionTextId>   <!--  5350 => "The event type for the [Pump 1 Loss of Flow] event."  -->
 <LabelTextId>5349</LabelTextId>   <!--  5349 => "Pump 1 Loss of Flow - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4659</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_flowLoss2</ProgrammaticName>
 <EngineeringDescription>Loss of flow is detected in pump 2.  The loss of flow condition occurs when no differential pressure is detected across the pump. The event is deactivated when flow is re-established.

The behavior of this event may optionally be modified by:
st_pump_flowLossEnable2
st_pump_flowLossType2

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5352</DescriptionTextId>   <!--  5352 => "Loss of flow is detected in pump 2.  The loss of flow condition occurs when no differential pressure is detected across the pump. "  -->
 <LabelTextId>5351</LabelTextId>   <!--  5351 => "Pump 2 Loss of Flow"  -->
 <EventDefn>
  <DataId>4659</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4660</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_flowLossEnable2</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Pump 2 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_pump_flowLoss2.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5354</DescriptionTextId>   <!--  5354 => "Enable/disable the activation of the [Pump 2 Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5353</LabelTextId>   <!--  5353 => "Pump 2 Loss of Flow - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4661</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_flowLossType2</ProgrammaticName>
 <EngineeringDescription>The event type for the [Pump 2 Loss of Flow] event.
Event types are message, warning, alarm, and failure.
See event evt_pump_flowLoss2.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5356</DescriptionTextId>   <!--  5356 => "The event type for the [Pump 2 Loss of Flow] event."  -->
 <LabelTextId>5355</LabelTextId>   <!--  5355 => "Pump 2 Loss of Flow - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4662</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_shortCycle</ProgrammaticName>
 <EngineeringDescription>Pumps have short cycled.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.  .


The behavior of this event may optionally be modified by:
st_pump_shortCycleEnable
st_pump_shortCycleType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5358</DescriptionTextId>   <!--  5358 => "Pumps have short cycled.  A short cycle is defined as turning on and off a number of times over a set time period."  -->
 <LabelTextId>5357</LabelTextId>   <!--  5357 => "Pump Short Cycle"  -->
 <EventDefn>
  <DataId>4662</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4663</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_shortCycleEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Pump Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_pump_shortCycle.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5360</DescriptionTextId>   <!--  5360 => "Enable/disable the activation of the [Pump Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5359</LabelTextId>   <!--  5359 => "Pump Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4664</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_shortCycleType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Pump Short Cycle] event.
Event types are message, warning, alarm, and failure.
See event evt_pump_shortCycle.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5362</DescriptionTextId>   <!--  5362 => "The event type for the [Pump Short Cycle] event."  -->
 <LabelTextId>5361</LabelTextId>   <!--  5361 => "Pump Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4665</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_op1A</ProgrammaticName>
 <EngineeringDescription>Compressor 1A operational state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5364</DescriptionTextId>   <!--  5364 => "Compressor 1A operational state."  -->
 <LabelTextId>5363</LabelTextId>   <!--  5363 => "Compressor 1A State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4666</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_op1B</ProgrammaticName>
 <EngineeringDescription>Compressor 1B operational state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5366</DescriptionTextId>   <!--  5366 => "Compressor 1B operational state."  -->
 <LabelTextId>5365</LabelTextId>   <!--  5365 => "Compressor 1B State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4667</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_op2A</ProgrammaticName>
 <EngineeringDescription>Compressor 2A operational state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5368</DescriptionTextId>   <!--  5368 => "Compressor 2A operational state."  -->
 <LabelTextId>5367</LabelTextId>   <!--  5367 => "Compressor 2A State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4668</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_op2B</ProgrammaticName>
 <EngineeringDescription>Compressor 2B operational state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5370</DescriptionTextId>   <!--  5370 => "Compressor 2B operational state."  -->
 <LabelTextId>5369</LabelTextId>   <!--  5369 => "Compressor 2B State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4669</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsHigh1A</ProgrammaticName>
 <EngineeringDescription>Compressor 1A high head pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsHighEnable1A
st_comp_prsHighType1A

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5372</DescriptionTextId>   <!--  5372 => "Compressor 1A high head pressure."  -->
 <LabelTextId>5371</LabelTextId>   <!--  5371 => "Compressor 1A High Head Pressure"  -->
 <EventDefn>
  <DataId>4669</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4670</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighEnable1A</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 1A High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsHigh1A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5374</DescriptionTextId>   <!--  5374 => "Enable/disable the activation of the [Compressor 1A High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5373</LabelTextId>   <!--  5373 => "Compressor 1A High Head Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4671</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighType1A</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 1A High Head Pressure] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_prsHigh1A.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5376</DescriptionTextId>   <!--  5376 => "The event type for the [Compressor 1A High Head Pressure] event."  -->
 <LabelTextId>5375</LabelTextId>   <!--  5375 => "Compressor 1A High Head Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4672</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsHigh1B</ProgrammaticName>
 <EngineeringDescription>Compressor 1B high head pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsHighEnable1B
st_comp_prsHighType1B

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5378</DescriptionTextId>   <!--  5378 => "Compressor 1B high head pressure."  -->
 <LabelTextId>5377</LabelTextId>   <!--  5377 => "Compressor 1B High Head Pressure "  -->
 <EventDefn>
  <DataId>4672</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4673</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighEnable1B</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 1B High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsHigh1B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5380</DescriptionTextId>   <!--  5380 => "Enable/disable the activation of the [Compressor 1B High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5379</LabelTextId>   <!--  5379 => "Compressor 1B High Head Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4674</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighType1B</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 1B High Head Pressure] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_prsHigh1B.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5382</DescriptionTextId>   <!--  5382 => "The event type for the [Compressor 1B High Head Pressure] event."  -->
 <LabelTextId>5381</LabelTextId>   <!--  5381 => "Compressor 1B High Head Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4675</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsHigh2A</ProgrammaticName>
 <EngineeringDescription>Compressor 2A high head pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsHighEnable2A
st_comp_prsHighType2A

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5384</DescriptionTextId>   <!--  5384 => "Compressor 2A high head pressure."  -->
 <LabelTextId>5383</LabelTextId>   <!--  5383 => "Compressor 2A High Head Pressure"  -->
 <EventDefn>
  <DataId>4675</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4676</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighEnable2A</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 2A High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsHigh2A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5386</DescriptionTextId>   <!--  5386 => "Enable/disable the activation of the [Compressor 2A High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5385</LabelTextId>   <!--  5385 => "Compressor 2A High Head Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4677</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighType2A</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 2A High Head Pressure] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_prsHigh2A.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5388</DescriptionTextId>   <!--  5388 => "The event type for the [Compressor 2A High Head Pressure] event."  -->
 <LabelTextId>5387</LabelTextId>   <!--  5387 => "Compressor 2A High Head Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4678</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsHigh2B</ProgrammaticName>
 <EngineeringDescription>Compressor 2B high head pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsHighEnable2B
st_comp_prsHighType2B

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5390</DescriptionTextId>   <!--  5390 => "Compressor 2B high head pressure."  -->
 <LabelTextId>5389</LabelTextId>   <!--  5389 => "Compressor 2B High Head Pressure"  -->
 <EventDefn>
  <DataId>4678</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4679</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighEnable2B</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 2B High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsHigh2B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5392</DescriptionTextId>   <!--  5392 => "Enable/disable the activation of the [Compressor 2B High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5391</LabelTextId>   <!--  5391 => "Compressor 2B High Head Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4680</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighType2B</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 2B High Head Pressure] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_prsHigh2B.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5394</DescriptionTextId>   <!--  5394 => "The event type for the [Compressor 2B High Head Pressure] event."  -->
 <LabelTextId>5393</LabelTextId>   <!--  5393 => "Compressor 2B High Head Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4681</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_shortCycle1A</ProgrammaticName>
 <EngineeringDescription>Compressor 1A short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.

The behavior of this event may optionally be modified by:
st_comp_shortCycleEnable1A
st_comp_shortCycleType1A

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5396</DescriptionTextId>   <!--  5396 => "Compressor 1A short cycle.  A short cycle is defined as turning on and off a number of times over a set time period."  -->
 <LabelTextId>5395</LabelTextId>   <!--  5395 => "Compressor 1A Short Cycle"  -->
 <EventDefn>
  <DataId>4681</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4682</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleEnable1A</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 1A Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_comp_shortCycle1A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5398</DescriptionTextId>   <!--  5398 => "Enable/disable the activation of the [Compressor 1A Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5397</LabelTextId>   <!--  5397 => "Compressor 1A Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4683</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleType1A</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 1A Short Cycle] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_shortCycle1A.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5400</DescriptionTextId>   <!--  5400 => "The event type for the [Compressor 1A Short Cycle] event."  -->
 <LabelTextId>5399</LabelTextId>   <!--  5399 => "Compressor 1A Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4684</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_shortCycle1B</ProgrammaticName>
 <EngineeringDescription>Compressor 1B short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.

The behavior of this event may optionally be modified by:
st_comp_shortCycleEnable1B
st_comp_shortCycleType1B

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5402</DescriptionTextId>   <!--  5402 => "Compressor 1B short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  "  -->
 <LabelTextId>5401</LabelTextId>   <!--  5401 => "Compressor 1B Short Cycle"  -->
 <EventDefn>
  <DataId>4684</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4685</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleEnable1B</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 1B Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_comp_shortCycle1B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5404</DescriptionTextId>   <!--  5404 => "Enable/disable the activation of the [Compressor 1B Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5403</LabelTextId>   <!--  5403 => "Compressor 1B Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4686</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleType1B</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 1B Short Cycle] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_shortCycle1B.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5406</DescriptionTextId>   <!--  5406 => "The event type for the [Compressor 1B Short Cycle] event."  -->
 <LabelTextId>5405</LabelTextId>   <!--  5405 => "Compressor 1B Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4687</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_shortCycle2A</ProgrammaticName>
 <EngineeringDescription>Compressor 2A short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.

The behavior of this event may optionally be modified by:
st_comp_shortCycleEnable2A
st_comp_shortCycleType2A

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5408</DescriptionTextId>   <!--  5408 => "Compressor 2A short cycle.  A short cycle is defined as turning on and off a number of times over a set time period."  -->
 <LabelTextId>5407</LabelTextId>   <!--  5407 => "Compressor 2A Short Cycle"  -->
 <EventDefn>
  <DataId>4687</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4688</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleEnable2A</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 2A Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_comp_shortCycle2A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5410</DescriptionTextId>   <!--  5410 => "Enable/disable the activation of the [Compressor 2A Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5409</LabelTextId>   <!--  5409 => "Compressor 2A Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4689</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleType2A</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 2A Short Cycle] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_shortCycle2A.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5412</DescriptionTextId>   <!--  5412 => "The event type for the [Compressor 2A Short Cycle] event."  -->
 <LabelTextId>5411</LabelTextId>   <!--  5411 => "Compressor 2A Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4690</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_shortCycle2B</ProgrammaticName>
 <EngineeringDescription>Compressor 2B short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.

The behavior of this event may optionally be modified by:
st_comp_shortCycleEnable2B
st_comp_shortCycleType2B

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5414</DescriptionTextId>   <!--  5414 => "Compressor 2B short cycle.  A short cycle is defined as turning on and off a number of times over a set time period."  -->
 <LabelTextId>5413</LabelTextId>   <!--  5413 => "Compressor 2B Short Cycle"  -->
 <EventDefn>
  <DataId>4690</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4691</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleEnable2B</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor 2B Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_comp_shortCycle2B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5416</DescriptionTextId>   <!--  5416 => "Enable/disable the activation of the [Compressor 2B Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5415</LabelTextId>   <!--  5415 => "Compressor 2B Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4692</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleType2B</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor 2B Short Cycle] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_shortCycle2B.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5418</DescriptionTextId>   <!--  5418 => "The event type for the [Compressor 2B Short Cycle] event."  -->
 <LabelTextId>5417</LabelTextId>   <!--  5417 => "Compressor 2B Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4693</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsTandemLow1</ProgrammaticName>
 <EngineeringDescription>'Tandem compressors' 1 low suction pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsTandemLowEnable1
st_comp_prsTandemLowType1

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5420</DescriptionTextId>   <!--  5420 => "'Tandem compressors' 1 low suction pressure."  -->
 <LabelTextId>5419</LabelTextId>   <!--  5419 => "Tandem 1 Low Suction Pressure"  -->
 <EventDefn>
  <DataId>4693</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4694</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsTandemLowEnable1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Tandem 1 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsTandemLow1.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5422</DescriptionTextId>   <!--  5422 => "Enable/disable the activation of the [Tandem 1 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5421</LabelTextId>   <!--  5421 => "Tandem 1 Low Suction Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4695</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsTandemLowType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Tandem 1 Low Suction Pressure] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_prsTandemLow1.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5424</DescriptionTextId>   <!--  5424 => "The event type for the [Tandem 1 Low Suction Pressure] event."  -->
 <LabelTextId>5423</LabelTextId>   <!--  5423 => "Tandem 1 Low Suction Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4696</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsTandemLow2</ProgrammaticName>
 <EngineeringDescription>'Tandem compressors' 2 low suction pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsTandemLowEnable2
st_comp_prsTandemLowType2

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5426</DescriptionTextId>   <!--  5426 => "'Tandem compressors' 2 low suction pressure."  -->
 <LabelTextId>5425</LabelTextId>   <!--  5425 => "Tandem 2 Low Suction Pressure"  -->
 <EventDefn>
  <DataId>4696</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4697</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsTandemLowEnable2</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Tandem 2 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsTandemLow2.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5428</DescriptionTextId>   <!--  5428 => "Enable/disable the activation of the [Tandem 2 Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5427</LabelTextId>   <!--  5427 => "Tandem 2 Low Suction Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4698</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsTandemLowType2</ProgrammaticName>
 <EngineeringDescription>The event type for the [Tandem 2 Low Suction Pressure] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_prsTandemLow2.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5430</DescriptionTextId>   <!--  5430 => "The event type for the [Tandem 2 Low Suction Pressure] event."  -->
 <LabelTextId>5429</LabelTextId>   <!--  5429 => "Tandem 2 Low Suction Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4699</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_pct_posHotGas1</ProgrammaticName>
 <EngineeringDescription>Hot gas valve 1 open position.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5432</DescriptionTextId>   <!--  5432 => "Hot gas valve 1 open position."  -->
 <LabelTextId>5431</LabelTextId>   <!--  5431 => "Hot Gas Valve 1 Open Position"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4700</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_pct_posHotGas2</ProgrammaticName>
 <EngineeringDescription>Hot gas valve 2 open position.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5434</DescriptionTextId>   <!--  5434 => "Hot gas valve 2 open position."  -->
 <LabelTextId>5433</LabelTextId>   <!--  5433 => "Hot Gas Valve 2 Open Position"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4701</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_valv_posHotGasSolenoid1</ProgrammaticName>
 <EngineeringDescription>Hot gas solenoid valve 1 position.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5436</DescriptionTextId>   <!--  5436 => "Hot gas solenoid valve 1 position."  -->
 <LabelTextId>5435</LabelTextId>   <!--  5435 => "Hot Gas Solenoid Valve 1 Position"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4128</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4702</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_valv_posHotGasSolenoid2</ProgrammaticName>
 <EngineeringDescription>Hot gas solenoid valve 2 position</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5440</DescriptionTextId>   <!--  5440 => "Hot gas solenoid valve 2 position"  -->
 <LabelTextId>5439</LabelTextId>   <!--  5439 => "Hot Gas Solenoid Valve 2 Position"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4128</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4703</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_valv_CWPosition</ProgrammaticName>
 <EngineeringDescription>Chilled water valve out of position.  Chilled water control valve position does not match expected value.

The behavior of this event may optionally be modified by:
st_valv_CWPositionEnable
st_valv_CWPositionType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5442</DescriptionTextId>   <!--  5442 => "Chilled water valve out of position.  Chilled water control valve position does not match expected value."  -->
 <LabelTextId>5441</LabelTextId>   <!--  5441 => "Chilled Water Control Valve Position"  -->
 <EventDefn>
  <DataId>4703</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4704</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_valv_CWPositionEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Chilled Water Control Valve Position] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_valv_CWPosition.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5444</DescriptionTextId>   <!--  5444 => "Enable/disable the activation of the [Chilled Water Control Valve Position] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5443</LabelTextId>   <!--  5443 => "Chilled Water Cntrl Valve Pos - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4705</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_valv_CWPositionType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Chilled Water Control Valve Position] event.
Event types are message, warning, alarm, and failure.
See evt_valv_CWPosition.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5446</DescriptionTextId>   <!--  5446 => "The event type for the [Chilled Water Control Valve Position] event."  -->
 <LabelTextId>5445</LabelTextId>   <!--  5445 => "Chilled Water Cntrl Valve Pos - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4706</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_operating</ProgrammaticName>
 <EngineeringDescription>Current operating state of the system.
Allowable states:
Off - The unit is not providing services and will not provide services in this state.
On - The unit is able to provide services as needed.
Standby - The unit is not currently providing services, but can do so by transitioning into the 'on' state.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5448</DescriptionTextId>   <!--  5448 => "Current operating state of the system. "  -->
 <LabelTextId>5447</LabelTextId>   <!--  5447 => "System Operating State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4129</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4707</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_controlMode</ProgrammaticName>
 <EngineeringDescription>System control mode.
Allowable modes:
Auto - Internal algorithmic control of the system.
Manual - External control of the system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5453</DescriptionTextId>   <!--  5453 => "System control mode."  -->
 <LabelTextId>5452</LabelTextId>   <!--  5452 => "System Control Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4130</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4708</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_pct_output</ProgrammaticName>
 <EngineeringDescription>Amount of cooling being applied relative to the unit's cooling capacity.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5457</DescriptionTextId>   <!--  5457 => "Amount of cooling being applied relative to the unit's cooling capacity."  -->
 <LabelTextId>5456</LabelTextId>   <!--  5456 => "Cooling Output"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4709</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airMinSetPt</ProgrammaticName>
 <EngineeringDescription>Minimum desired room air temperature.  If the room air temperature falls below this set point, the unit will reduce the cooling.
The temperature is measured by external air sensor(s).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5459</DescriptionTextId>   <!--  5459 => "Minimum desired room air temperature.  If the room air temperature falls below this set point, the unit will reduce the cooling."  -->
 <LabelTextId>5458</LabelTextId>   <!--  5458 => "Minimum Room Temperature Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4710</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tm_autoRestart</ProgrammaticName>
 <EngineeringDescription>If power is lost, the control will delay this amount of time after power is restored before restarting the unit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5461</DescriptionTextId>   <!--  5461 => "If power is lost, the control will delay this amount of time after power is restored before restarting the unit."  -->
 <LabelTextId>5460</LabelTextId>   <!--  5460 => "Auto Restart Delay"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4711</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_condensDetect</ProgrammaticName>
 <EngineeringDescription>System condensation detected.  The event is deactivated when condensation is no longer detected.

The behavior of this event may optionally be modified by:
st_sys_condensDetectEnable
st_sys_condensDetectType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5463</DescriptionTextId>   <!--  5463 => "System condensation detected."  -->
 <LabelTextId>5462</LabelTextId>   <!--  5462 => "System Condensation Detected"  -->
 <EventDefn>
  <DataId>4711</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4712</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_condensDetectEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [System Condensation Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_condensDetect.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5465</DescriptionTextId>   <!--  5465 => "Enable/disable the activation of the [System Condensation Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5464</LabelTextId>   <!--  5464 => "System Condensation Detected - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4713</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_condensDetectType</ProgrammaticName>
 <EngineeringDescription>The event type for the [System Condensation Detected] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_condensDetect.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5467</DescriptionTextId>   <!--  5467 => "The event type for the [System Condensation Detected] event."  -->
 <LabelTextId>5466</LabelTextId>   <!--  5466 => "System Condensation Detected - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4714</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_shutdownPwrLoss</ProgrammaticName>
 <EngineeringDescription>System lost power.  This event becomes active when the unit is powered on following an unexpected loss of power.
The event is deactivated when the unit is powered continuously for some duration of time.  This deactivation time duration is system specific.  The deactivation duration may or may not be user configurable depending on the system.

The behavior of this event may optionally be modified by:
st_sys_shutdownPwrLossEnable
st_sys_shutdownPwrLossType

iCOM Specific: The event will not be activated unless it is enabled.  The deactivation duration is 1 hour.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5469</DescriptionTextId>   <!--  5469 => "System lost power.  This event becomes active when the unit is powered on following an unexpected loss of power."  -->
 <LabelTextId>5468</LabelTextId>   <!--  5468 => "Shutdown - Loss Of Power"  -->
 <EventDefn>
  <DataId>4714</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4715</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_shutdownPwrLossEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Shutdown - Loss Of Power] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_shutdownPwrLoss.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5471</DescriptionTextId>   <!--  5471 => "Enable/disable the activation of the [Shutdown - Loss Of Power] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5470</LabelTextId>   <!--  5470 => "Shutdown - Loss Of Power - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4716</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_shutdownPwrLossType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Shutdown - Loss Of Power] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_shutdownPwrLoss.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5473</DescriptionTextId>   <!--  5473 => "The event type for the [Shutdown - Loss Of Power] event."  -->
 <LabelTextId>5472</LabelTextId>   <!--  5472 => "Shutdown - Loss Of Power - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4717</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_eventAckReset</ProgrammaticName>
 <EngineeringDescription>Reset and/or acknowledge all events.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5475</DescriptionTextId>   <!--  5475 => "Reset and/or acknowledge all events."  -->
 <LabelTextId>5474</LabelTextId>   <!--  5474 => "System Event Acknowledge/Reset"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4131</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'icom_xp.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4718</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactEnable01</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Input Contact 01] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_inpContact01</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_009</EngineeringReference>
 <DescriptionTextId>5480</DescriptionTextId>   <!--  5480 => "Enable/disable the activation of the [Input Contact 01] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5479</LabelTextId>   <!--  5479 => "Input Contact 01 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4719</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactType01</ProgrammaticName>
 <EngineeringDescription>The event type for the [Input Contact 01] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_inpContact01.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_6_et</EngineeringReference>
 <DescriptionTextId>5482</DescriptionTextId>   <!--  5482 => "The event type for the [Input Contact 01] event."  -->
 <LabelTextId>5481</LabelTextId>   <!--  5481 => "Input Contact 01 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4720</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_smokeDetected</ProgrammaticName>
 <EngineeringDescription>Smoke detected.  The event is deactivated when smoke is no longer detected.

The annunciation of this event may optionally be modified by:
st_sys_smokeDetectedEnable
st_sys_smokeDetectedType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_0</EngineeringReference>
 <DescriptionTextId>5484</DescriptionTextId>   <!--  5484 => "Smoke detected."  -->
 <LabelTextId>5483</LabelTextId>   <!--  5483 => "Smoke Detected"  -->
 <EventDefn>
  <DataId>4720</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4721</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_smokeDetectedEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Smoke Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_smokeDetected.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_104</EngineeringReference>
 <DescriptionTextId>5486</DescriptionTextId>   <!--  5486 => "Enable/disable the activation of the [Smoke Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5485</LabelTextId>   <!--  5485 => "Smoke Detected - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4722</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_smokeDetectedType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Smoke Detected] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_smokeDetected.

iCOM specific:
iCOM only supports message, warning, and alarm.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_0_et</EngineeringReference>
 <DescriptionTextId>5488</DescriptionTextId>   <!--  5488 => "The event type for the [Smoke Detected] event."  -->
 <LabelTextId>5487</LabelTextId>   <!--  5487 => "Smoke Detected - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4723</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_waterUnderFloor</ProgrammaticName>
 <EngineeringDescription>Water under the floor is detected.  The event is deactivated when water is no longer detected.

The annunciation of this event may optionally be modified by:
st_sys_waterUnderFloorEnable
st_sys_waterUnderFloorType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_1</EngineeringReference>
 <DescriptionTextId>5490</DescriptionTextId>   <!--  5490 => "Water under the floor is detected."  -->
 <LabelTextId>5489</LabelTextId>   <!--  5489 => "Water Under Floor"  -->
 <EventDefn>
  <DataId>4723</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4724</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_waterUnderFloorEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Water Under Floor] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_waterUnderFloor.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_105</EngineeringReference>
 <DescriptionTextId>5492</DescriptionTextId>   <!--  5492 => "Enable/disable the activation of the [Water Under Floor] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5491</LabelTextId>   <!--  5491 => "Water Under Floor - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4725</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_waterUnderFloorType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Water Under Floor] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_waterUnderFloor.

iCOM specific:
iCOM only supports message, warning, and alarm.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_1_et</EngineeringReference>
 <DescriptionTextId>5494</DescriptionTextId>   <!--  5494 => "The event type for the [Water Under Floor] event."  -->
 <LabelTextId>5493</LabelTextId>   <!--  5493 => "Water Under Floor - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4726</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_serviceReq</ProgrammaticName>
 <EngineeringDescription>Unit requires servicing.  The event is generally deactivated by manual reset or act of service.

The annunciation of this event may optionally be modified by:
st_sys_serviceReqEnable
st_sys_serviceReqType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MECUSINP14</EngineeringReference>
 <DescriptionTextId>5496</DescriptionTextId>   <!--  5496 => "Unit requires servicing."  -->
 <LabelTextId>5495</LabelTextId>   <!--  5495 => "Service Required"  -->
 <EventDefn>
  <DataId>4726</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4727</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_serviceReqEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Service Required] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_serviceReq.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_015</EngineeringReference>
 <DescriptionTextId>5498</DescriptionTextId>   <!--  5498 => "Enable/disable the activation of the [Service Required] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5497</LabelTextId>   <!--  5497 => "Service Required - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4728</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_serviceReqType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Service Required] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_serviceReq.

iCOM specific:
iCOM only supports message, warning, and alarm.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MECUSINP14_et</EngineeringReference>
 <DescriptionTextId>5500</DescriptionTextId>   <!--  5500 => "The event type for the [Service Required] event."  -->
 <LabelTextId>5499</LabelTextId>   <!--  5499 => "Service Required - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4729</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_fan_issue</ProgrammaticName>
 <EngineeringDescription>One or more fans are not operating within their operational parameters.   The event is deactivated when the fans return to normal operation.
NOTE: This is not a failure of one or more fans that are cooling the system internal components.  It is a failure of one or more of the environmental unit's blower fans.

The annunciation of this event may optionally be modified by:
st_fan_issueEnable
st_fan_issueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_FANFAIL</EngineeringReference>
 <DescriptionTextId>5502</DescriptionTextId>   <!--  5502 => "One or more fans are not operating within their operational parameters."  -->
 <LabelTextId>5501</LabelTextId>   <!--  5501 => "Fan Issue"  -->
 <EventDefn>
  <DataId>4729</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4730</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_issueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Fan Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_fan_issue.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5504</DescriptionTextId>   <!--  5504 => "Enable/disable the activation of the [Fan Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>5503</LabelTextId>   <!--  5503 => "Fan Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4731</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_issueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Fan Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_fan_issue.

iCOM specific:
iCOM only supports message, warning, and alarm.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_FANFAIL_et</EngineeringReference>
 <DescriptionTextId>5506</DescriptionTextId>   <!--  5506 => "The event type for the [Fan Issue] event."  -->
 <LabelTextId>5505</LabelTextId>   <!--  5505 => "Fan Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4732</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_rcp_loadDropped</ProgrammaticName>
 <EngineeringDescription>The receptacle's load stopped drawing power. This event is asserted when the receptacle power is ON and the associated load was previously drawing power and is no longer drawing power. This event is not asserted as a result of turning the receptacle power OFF. The event clears when the load starts to draw power or when the receptacle power is turned OFF.  The event persists through a device reboot.

MPX Specific: At run-time the system assigns a power threshold used to distinguish between a load present versus not present.  The value assigned is product specific.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5508</DescriptionTextId>   <!--  5508 => "The receptacle's load is not drawing power "  -->
 <LabelTextId>5507</LabelTextId>   <!--  5507 => "Receptacle Load Dropped "  -->
 <EventDefn>
  <DataId>4732</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4733</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_tmp_snsrOffset</ProgrammaticName>
 <EngineeringDescription>Temperature Offset.  The value of this data object is added to the sensor measurement.  See 'val_aux_tmp_sensorMeasure'.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5510</DescriptionTextId>   <!--  5510 => "Temperature Offset.  This value is added to the temperature sensor measurement to calibrate the sensor."  -->
 <LabelTextId>5509</LabelTextId>   <!--  5509 => "Temperature Offset"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4734</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_hmd_snsrOffset</ProgrammaticName>
 <EngineeringDescription>Relative Humidity Offset.  The value of this data object is added to the sensor measurement.  See 'val_aux_hmd_sensorMeasure'.  The resulting relative humidity value shall be restricted to the range of 0% to 100%, irrespective of the offset setting.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5512</DescriptionTextId>   <!--  5512 => "Relative Humidity Offset.  This value is added to the humidity sensor measurement to calibrate the sensor. "  -->
 <LabelTextId>5511</LabelTextId>   <!--  5511 => "Relative Humidity Offset"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4735</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inp_qualification</ProgrammaticName>
 <EngineeringDescription>Input qualification states: Normal, Marginal Low, Marginal High, Fail
Marginal Low and Marginal High states indicate an Abnormal condition. The UPS may or may not operate normally under these two states.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5514</DescriptionTextId>   <!--  5514 => "input qualification status"  -->
 <LabelTextId>5513</LabelTextId>   <!--  5513 => "Input Qualification Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4132</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4736</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sbs_opState</ProgrammaticName>
 <EngineeringDescription>Static Bypass Switch state - On/Off</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5520</DescriptionTextId>   <!--  5520 => "Static Bypass Switch state - On/Off"  -->
 <LabelTextId>5519</LabelTextId>   <!--  5519 => "Static Bypass Switch"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4737</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_byp_qualification</ProgrammaticName>
 <EngineeringDescription>Bypass operating states: Normal, Marginal Low, Marginal High, Fail
Marginal Low and Marginal High states indicate an Abnormal condition. The UPS may or may not operate normally under these two states.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5522</DescriptionTextId>   <!--  5522 => "bypass qualification status"  -->
 <LabelTextId>5521</LabelTextId>   <!--  5521 => "Bypass Qualification Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4132</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4738</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_byp_tm_reXfrRemain</ProgrammaticName>
 <EngineeringDescription>The time remaining that an inverter overload or inverter fault can be cleared and auto retransfer can take place.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5524</DescriptionTextId>   <!--  5524 => "Time remaining that an inverter overload or inverter fault can be cleared and auto retransfer can take place"  -->
 <LabelTextId>5523</LabelTextId>   <!--  5523 => "Bypass Retransfer Time Remaining"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4739</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bat_ah_dischargeConsumed</ProgrammaticName>
 <EngineeringDescription>Battery amp-hours withdrawn this discharge.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5526</DescriptionTextId>   <!--  5526 => "Battery amp-hours withdrawn this discharge."  -->
 <LabelTextId>5525</LabelTextId>   <!--  5525 => "Battery Amp-Hours Consumed This Discharge"  -->
 <NumericDefn>
  <MeasureBaseId>12</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4740</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bat_autoTestInhibit</ProgrammaticName>
 <EngineeringDescription>Automatic (scheduled) battery tests are inhibited. This is asserted if an automatic battery test is attempted and the conditions for the test are not acceptable.

Becomes inactive when a battery test is successfully started (automatic or manual).</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID259</EngineeringReference>
 <DescriptionTextId>5528</DescriptionTextId>   <!--  5528 => "Automatic (scheduled) battery tests are inhibited"  -->
 <LabelTextId>5527</LabelTextId>   <!--  5527 => "Battery Automatic Test Inhibited"  -->
 <EventDefn>
  <DataId>4740</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4741</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bat_selfTest</ProgrammaticName>
 <EngineeringDescription>Battery self test is in progress. A battery test is in process and will continue until the test completes or terminates due to an external event.

Becomes inactive when the test completes or terminates due to an external event.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID134</EngineeringReference>
 <DescriptionTextId>5530</DescriptionTextId>   <!--  5530 => "Battery self test is in progress"  -->
 <LabelTextId>5529</LabelTextId>   <!--  5529 => "Battery Self Test"  -->
 <EventDefn>
  <DataId>4741</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4742</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bat_lowShutdown</ProgrammaticName>
 <EngineeringDescription>Battery disconnect due to end-of-discharge. This event is annunciated when a battery end-of-discharge occurs. There is no automatic clearing action for this event unless auto restart feature is enabled and battery charging resumes. NOTE: See the event 'evt_sys_outOffEoD'; evt_sys_outOffEoD is the preferred event for a UPS and should be used to indicate that the output power was dropped due to a low battery condition. However, for systems that can reach an EoD condition, and still maintain output power beyond this event, then the use of this event is appropriate. For example, for a dual power source UPS, it is possible that the mains are lost while the bypass power source is still available.    For such a case, it is possible for the system to transfer to bypass after the EoD and maintain the system output power.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID32</EngineeringReference>
 <DescriptionTextId>5532</DescriptionTextId>   <!--  5532 => "Battery disconnect due to end-of-discharge."  -->
 <LabelTextId>5531</LabelTextId>   <!--  5531 => "Battery Low Shutdown"  -->
 <EventDefn>
  <DataId>4742</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4743</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_dcb_qualification</ProgrammaticName>
 <EngineeringDescription>DC Bus operating states: Normal, Marginal Low, Marginal High or Failed.
Marginal Low and Marginal High states indicate an Abnormal condition. The UPS may or may not operate normally under these two states.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5534</DescriptionTextId>   <!--  5534 => "dc bus qualification status"  -->
 <LabelTextId>5533</LabelTextId>   <!--  5533 => "DC Bus Qualification Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4132</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4744</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_out_qualification</ProgrammaticName>
 <EngineeringDescription>UPS Output operating states: Normal, Marginal Low, Marginal High, Fail.
Marginal Low and Marginal High states indicate an Abnormal condition. The UPS may or may not operate normally under these two states.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5536</DescriptionTextId>   <!--  5536 => "output qualification status"  -->
 <LabelTextId>5535</LabelTextId>   <!--  5535 => "Output Qualification Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4132</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4745</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inv_qualification</ProgrammaticName>
 <EngineeringDescription>Inverter Output Operating States: Normal, Marginal Low, Marginal High, Fail.
Marginal Low and Marginal High states indicate an Abnormal condition. The UPS may or may not operate normally under these two states.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5538</DescriptionTextId>   <!--  5538 => "inverter output qualification status"  -->
 <LabelTextId>5537</LabelTextId>   <!--  5537 => "Inverter Output Qualification Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4132</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4746</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inv_opState</ProgrammaticName>
 <EngineeringDescription>Inverter state - On/Off</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5540</DescriptionTextId>   <!--  5540 => "inverter on/off state"  -->
 <LabelTextId>5539</LabelTextId>   <!--  5539 => "Inverter On/Off State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4747</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_equipTempSensorFailed</ProgrammaticName>
 <EngineeringDescription>A temperature sensor is reporting a value outside of sensor operating range or values inconsistent with a properly operating sensor.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID217</EngineeringReference>
 <DescriptionTextId>5542</DescriptionTextId>   <!--  5542 => "One or more temperature sensors report a temperature outside of the range of expected operation."  -->
 <LabelTextId>5541</LabelTextId>   <!--  5541 => "Equipment Temperature Sensor Fail"  -->
 <EventDefn>
  <DataId>4747</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4748</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_rct_opState</ProgrammaticName>
 <EngineeringDescription>Rectifier state - On/Off</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5544</DescriptionTextId>   <!--  5544 => "rectifier status"  -->
 <LabelTextId>5543</LabelTextId>   <!--  5543 => "Rectifier Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4749</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_fanFailureRedundant</ProgrammaticName>
 <EngineeringDescription>One fan failure is present. Summary event based on the detection of no more than one of many fan failures. 
Becomes inactive when All fans are operational or a Multiple Fan Failure event is active.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID154</EngineeringReference>
 <DescriptionTextId>5546</DescriptionTextId>   <!--  5546 => "Redundant system fan failure"  -->
 <LabelTextId>5545</LabelTextId>   <!--  5545 => "System Fan Failure - Redundant"  -->
 <EventDefn>
  <DataId>4749</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4750</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_fanMultiple</ProgrammaticName>
 <EngineeringDescription>More than one fan failure is present. This is a summary event based on the detection of more than one fan failure.
For Raptor/NXL, an FIB (Fan Interface Board) may have stopped communicating.


Becomes inactive when the fan failures corrected.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID293</EngineeringReference>
 <DescriptionTextId>5548</DescriptionTextId>   <!--  5548 => "Multiple fan failure"  -->
 <LabelTextId>5547</LabelTextId>   <!--  5547 => "Multiple Fan Failure"  -->
 <EventDefn>
  <DataId>4750</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4751</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_upsConfigDescription</ProgrammaticName>
 <EngineeringDescription>Describes the configuration of the system: SMS (Single Module System), 1+N, SCC (System Control Cabinet), N+1 and wiring information for bypass and load. Example: SMS 44 = Single Module System with 4 wire bypass and 4 wire load.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5550</DescriptionTextId>   <!--  5550 => "Configuration description"  -->
 <LabelTextId>5549</LabelTextId>   <!--  5549 => "Configuration Description"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4133</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4752</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_outputSource</ProgrammaticName>
 <EngineeringDescription>The UPS system's output power source (off, normal, bypass, or maintenance bypass).

Note: This point considers the UPS as a complete system and not split into a UPS and critical bus.  Thus, the enum values are defined from that perspective.  This point is similar to st_ups_outputSource and st_load_outputSource.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5568</DescriptionTextId>   <!--  5568 => "The UPS system's output power source"  -->
 <LabelTextId>5567</LabelTextId>   <!--  5567 => "UPS System Output Source"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4134</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4753</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_mainControllerFault</ProgrammaticName>
 <EngineeringDescription>The redundant system has detected that the main UPS control has failed.
Raptor/NXL specific - The failure is detected via a "watchdog" timeout mechanism.

Event Recovery - Control power must be cycled. It may also require a reset to be issued from the front panel display.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID219</EngineeringReference>
 <DescriptionTextId>5574</DescriptionTextId>   <!--  5574 => "A Main Controller fault has been detected."  -->
 <LabelTextId>5573</LabelTextId>   <!--  5573 => "Main Controller Fault"  -->
 <EventDefn>
  <DataId>4753</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4754</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_breakerCloseFail</ProgrammaticName>
 <EngineeringDescription>Summary event based on the detection of at least one of the following faults:
System Output Breaker Close Fail (138062)
Rectifier Input Breaker (CB1) Close Fail (138046)
Bypass Breaker (CB3) Close Fail (127651)
Module Battery Disconnect Close Fail (144725)
Battery CB 1 Close Fail (138049)
Battery CB 2 Close Fail (138050)
Battery CB 3 Close Fail (138051)
Battery CB 4 Close Fail (138052)
Battery CB 5 Close Fail (138053)
Inverter Output Breaker (CB2) Close Fail (138059).

Becomes inactive when all causal faults have cleared.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID289</EngineeringReference>
 <DescriptionTextId>5576</DescriptionTextId>   <!--  5576 => "One or more breakers in the system failed to close"  -->
 <LabelTextId>5575</LabelTextId>   <!--  5575 => "System Breaker(s) Close Failure"  -->
 <EventDefn>
  <DataId>4754</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4755</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_inpFilterCycleLock</ProgrammaticName>
 <EngineeringDescription>The input filter disconnect has been opened too many times within a period of time, exceeding a maximum cycle count, and is now locked out.

Becomes inactive when Input Passive Filter disconnect closes.

NXL Specific: The input filter disconnect has opened more than nine times in the previous one hour.
Becomes inactive when Input Passive Filter Close command is active.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID290</EngineeringReference>
 <DescriptionTextId>5578</DescriptionTextId>   <!--  5578 => "The input filter disconnect is open due to exceeding the maximum number of cycles."  -->
 <LabelTextId>5577</LabelTextId>   <!--  5577 => "Input Filter Cycle Lock"  -->
 <EventDefn>
  <DataId>4755</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4756</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_serviceCodeActive</ProgrammaticName>
 <EngineeringDescription>Service code running.

NXL Specific: Open Loop Service Code - WinSVT provides a UI for Service and Factory engineers for controlling power devices and possibly switchgear individually. These tests are typically done after a repair is made to the unit in the field or at customer's request in the factory. The idea is to test out UPS devices separately before attempting to startup the unit in normal fashion.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID307</EngineeringReference>
 <DescriptionTextId>5580</DescriptionTextId>   <!--  5580 => "Service code is running"  -->
 <LabelTextId>5579</LabelTextId>   <!--  5579 => "Service Code Active"  -->
 <EventDefn>
  <DataId>4756</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4757</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_lbsActive</ProgrammaticName>
 <EngineeringDescription>With the Load Bus Sync Operation enabled, the LBS signal is active. (Load Bus Sync (LBS) is a feature where the output of one UPS is kept synchronized with the output of another UPS)

Becomes inactive when the Load Bus Sync Operation is disabled or the LBS signal is not active.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID308</EngineeringReference>
 <DescriptionTextId>5582</DescriptionTextId>   <!--  5582 => "The Load Bus Sync option is active"  -->
 <LabelTextId>5581</LabelTextId>   <!--  5581 => "LBS Active"  -->
 <EventDefn>
  <DataId>4757</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4758</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_lbsInhibit</ProgrammaticName>
 <EngineeringDescription>With the Load Bus Sync Operation enabled, LBS Voltage RMS is not qualified or LBS Voltage frequency is out of tolerance or LBS Voltage has incorrect phase rotation.

Becomes inactive when the Load Bus Sync Operation is disabled or all conditions are cleared.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID309</EngineeringReference>
 <DescriptionTextId>5584</DescriptionTextId>   <!--  5584 => "The system has detected that conditions to perform Load Bus Sync are not satisfied"  -->
 <LabelTextId>5583</LabelTextId>   <!--  5583 => "LBS Inhibited"  -->
 <EventDefn>
  <DataId>4758</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4759</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_leadingPF</ProgrammaticName>
 <EngineeringDescription>The leading output Power Factor has fallen below a specified value.

Becomes inactive when Leading output power factor for all phases has exceeded a specified value or the phase with the leading power factor violation is below a specified percentage of nominal load current or the output power factor has become lagging.

When any output phase is supplying a specified percentage of nominal load current and the leading output power factor is below a specified value.

NXL Specific: The detection time delay is 4 hours.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID313</EngineeringReference>
 <DescriptionTextId>5586</DescriptionTextId>   <!--  5586 => "The leading output Power Factor has fallen below a specified value"  -->
 <LabelTextId>5585</LabelTextId>   <!--  5585 => "Leading Power Factor"  -->
 <EventDefn>
  <DataId>4759</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4760</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_contResetReq</ProgrammaticName>
 <EngineeringDescription>A controls reset is required due to one or more critical settings changing:
Nominal Input Voltage,
Nominal Bypass Voltage,
Nominal Output Voltage,
Nominal Source Frequency,
Nominal Output Frequency,
Output kVA,
Output kW,
Configuration Type,
Rectifier Type,
Nominal Cell Count - Lead Acid,
Input Isolation Transformer,
System Amp Rating,
Unit Model Number,
Bypass Breaker,
Input Breaker Operation,
Input Breaker Type,
Output Breaker Operation (SMS, 1+N),
Output Breaker Type,
Battery Configuration,
Battery Type,
Common Battery Disconnect,
Bypass/Output Phasing,
Maintenance Bypass Model Number

Becomes inactive when controls are reset</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID316</EngineeringReference>
 <DescriptionTextId>5588</DescriptionTextId>   <!--  5588 => "A controls reset is required due to one or more critical settings changing"  -->
 <LabelTextId>5587</LabelTextId>   <!--  5587 => "Controls Reset Required"  -->
 <EventDefn>
  <DataId>4760</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4761</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_orderLine1</ProgrammaticName>
 <EngineeringDescription>Customer Sales Order information line 1</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5590</DescriptionTextId>   <!--  5590 => "Customer Sales Order line 1"  -->
 <LabelTextId>5589</LabelTextId>   <!--  5589 => "Sales Order Line 1"  -->
 <TextDefn>
  <DataId>4761</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4762</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_orderLine2</ProgrammaticName>
 <EngineeringDescription>Customer Sales Order information line 2</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5592</DescriptionTextId>   <!--  5592 => "Customer Sales Order line 2"  -->
 <LabelTextId>5591</LabelTextId>   <!--  5591 => "Sales Order Line 2"  -->
 <TextDefn>
  <DataId>4762</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4763</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_servicePhoneNumber</ProgrammaticName>
 <EngineeringDescription>Authorized service representative contact phone number. This number may be used by the customer to contact Emerson/Liebert for service.</EngineeringDescription>
 <EngineeringReference>See Caliber Requirement 136951 in Raptor project.</EngineeringReference>
 <DescriptionTextId>5594</DescriptionTextId>   <!--  5594 => "Authorized Service contact Phone Number"  -->
 <LabelTextId>5593</LabelTextId>   <!--  5593 => "Service Phone Number"  -->
 <TextDefn>
  <DataId>4763</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4764</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sbs_backfeedBrkr</ProgrammaticName>
 <EngineeringDescription>Static Bypass Switch Line Disconnect</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5596</DescriptionTextId>   <!--  5596 => "Backfeed breaker"  -->
 <LabelTextId>5595</LabelTextId>   <!--  5595 => "Backfeed Breaker"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4765</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sbs_loadDisconnect</ProgrammaticName>
 <EngineeringDescription>Static Bypass Switch Load Disconnect</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5601</DescriptionTextId>   <!--  5601 => "SBS load disconnect"  -->
 <LabelTextId>5600</LabelTextId>   <!--  5600 => "SBS Load Disconnect"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4766</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inp_brkr</ProgrammaticName>
 <EngineeringDescription>Input Disconnect</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5603</DescriptionTextId>   <!--  5603 => "Input breaker (CB1)"  -->
 <LabelTextId>5602</LabelTextId>   <!--  5602 => "Input Breaker (CB1)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4767</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inp_trapFilterBrkr</ProgrammaticName>
 <EngineeringDescription>Trap Filter Disconnect</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5605</DescriptionTextId>   <!--  5605 => "Trap filter disconnect"  -->
 <LabelTextId>5604</LabelTextId>   <!--  5604 => "Trap Filter Disconnect"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4768</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inv_outBrkr</ProgrammaticName>
 <EngineeringDescription>Inverter Output Disconnect</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5607</DescriptionTextId>   <!--  5607 => "Output breaker (CB2)"  -->
 <LabelTextId>5606</LabelTextId>   <!--  5606 => "Output Breaker (CB2)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4769</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_byp_intBrkr</ProgrammaticName>
 <EngineeringDescription>Internal Bypass Breaker</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5609</DescriptionTextId>   <!--  5609 => "Internal bypass breaker (CB3)"  -->
 <LabelTextId>5608</LabelTextId>   <!--  5608 => "Internal Bypass Breaker (CB3)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4770</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mbs_inpBrkr</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5611</DescriptionTextId>   <!--  5611 => "Bypass isolation breaker (BIB)"  -->
 <LabelTextId>5610</LabelTextId>   <!--  5610 => "Bypass Isolation Breaker (BIB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4771</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mbs_rctBrkr</ProgrammaticName>
 <EngineeringDescription>Mainteance Bypass Cabinet - Rectifier Isolation Breaker</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5613</DescriptionTextId>   <!--  5613 => "Rectifier isolation breaker (RIB)"  -->
 <LabelTextId>5612</LabelTextId>   <!--  5612 => "Rectifier Isolation Breaker (RIB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4772</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mbs_bypBrkr</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Maintenance Bypass Breaker</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5615</DescriptionTextId>   <!--  5615 => "Maintenance bypass breaker (MBB)"  -->
 <LabelTextId>5614</LabelTextId>   <!--  5614 => "Maintenance Bypass Breaker (MBB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4773</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mbs_modIsoBrkr</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Maintenance Isolation Breaker</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5617</DescriptionTextId>   <!--  5617 => "Maintenance isolation breaker (MIB)"  -->
 <LabelTextId>5616</LabelTextId>   <!--  5616 => "Maintenance Isolation Breaker (MIB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4774</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_inv_outStaticSw</ProgrammaticName>
 <EngineeringDescription>Output Series Static Switch (LEU and LAP only)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5619</DescriptionTextId>   <!--  5619 => "output series static switch"  -->
 <LabelTextId>5618</LabelTextId>   <!--  5618 => "Output Series Static Switch"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4136</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4775</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mbs_outBrkr</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Module Output Breaker</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5624</DescriptionTextId>   <!--  5624 => "Module output breaker (MOB)"  -->
 <LabelTextId>5623</LabelTextId>   <!--  5623 => "Module Output Breaker (MOB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM '20090210_MPX.xml' via Fdm2Xml.exe -->
<DataDictEntry>
    <DataId>4776</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_ecUtlztnRating_LN</ProgrammaticName>
    <EngineeringDescription>The percent of PDU line-to-neutral electrical current utilization relative to the PDU's current rating.

The current being drawn divided by the PDU's current rating. The measurement is shown as percentage.  (See val_pem_ec_inputRated for the PDU's current rating.)</EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5626</DescriptionTextId>   <!--  5626 => "The percent of PDU line-to-neutral electrical current utilization relative to the PDU's current rating."  -->
    <LabelTextId>5625</LabelTextId>   <!--  5625 => "PDU Percent Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4777</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_ecUtlztnRating_LL</ProgrammaticName>
    <EngineeringDescription>The percent of PDU line-to-line electrical current utilization relative to the PDU's current rating.

The current being drawn divided by the PDU's current rating. The measurement is shown as percentage.  (See val_pem_ec_inputRated for the PDU's current rating.)
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5628</DescriptionTextId>   <!--  5628 => "The percent of PDU line-to-line electrical current utilization relative to the PDU's current rating."  -->
    <LabelTextId>5627</LabelTextId>   <!--  5627 => "PDU Percent Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4778</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_ecUtlztnRating_L1</ProgrammaticName>
    <EngineeringDescription>The percent of PDU line 1 electrical current utilization relative to the PDU's current rating.

The current being drawn divided by the PDU's current rating. The measurement is shown as percentage.  (See val_pem_ec_inputRated for the PDU's current rating.)
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5630</DescriptionTextId>   <!--  5630 => "The percent of PDU line 1 electrical current utilization relative to the PDU's current rating."  -->
    <LabelTextId>5629</LabelTextId>   <!--  5629 => "PDU Percent L1 Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4779</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_ecUtlztnRating_L2</ProgrammaticName>
    <EngineeringDescription>The percent of PDU line 2 electrical current utilization relative to the PDU's current rating.

The current being drawn divided by the PDU's current rating. The measurement is shown as percentage.  (See val_pem_ec_inputRated for the PDU's current rating.)
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5632</DescriptionTextId>   <!--  5632 => "The percent of PDU line 2 electrical current utilization relative to the PDU's current rating."  -->
    <LabelTextId>5631</LabelTextId>   <!--  5631 => "PDU Percent L2 Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4780</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_pem_ecUtlztnRating_L3</ProgrammaticName>
    <EngineeringDescription>The percent of PDU line 3 electrical current utilization relative to the PDU's current rating.

The current being drawn divided by the PDU's current rating. The measurement is shown as percentage.  (See val_pem_ec_inputRated for the PDU's current rating.)
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5634</DescriptionTextId>   <!--  5634 => "The percent of PDU line 3 electrical current utilization relative to the PDU's current rating."  -->
    <LabelTextId>5633</LabelTextId>   <!--  5633 => "PDU Percent L3 Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4781</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_rem_ecUtlztnRating_LN</ProgrammaticName>
    <EngineeringDescription>The percent of BRM line-to-neutral current utilization relative to the BRM's current rating.

The current being drawn divided by the BRM's current rating. The measurement is shown as percentage.  (See val_rem_ec_inputRated for the BRM's current rating.)
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5636</DescriptionTextId>   <!--  5636 => "The percent of BRM line-to-neutral current utilization relative to the BRM's current rating."  -->
    <LabelTextId>5635</LabelTextId>   <!--  5635 => "Branch Percent Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4782</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_rem_ecUtlztnRating_LL</ProgrammaticName>
    <EngineeringDescription>The percent of BRM line-to-line current utilization relative to the BRM's current rating.

The current being drawn divided by the BRM's current rating. The measurement is shown as percentage.  (See val_rem_ec_inputRated for the BRM's current rating.)
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5638</DescriptionTextId>   <!--  5638 => "The percent of BRM line-to-line current utilization relative to the BRM's current rating."  -->
    <LabelTextId>5637</LabelTextId>   <!--  5637 => "Branch Percent Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<DataDictEntry>
    <DataId>4783</DataId>
    <DefnType>NumericDefn</DefnType>
    <EntryStatus>Released</EntryStatus>
    <ProgrammaticName>val_rcp_ecUtlztnRating</ProgrammaticName>
    <EngineeringDescription>The percent of receptacle electrical current utilization relative to the receptacle's current rating.

The current being drawn divided by the receptacle's current rating. The measurement is shown as percentage.
    </EngineeringDescription>
    <EngineeringReference></EngineeringReference>
    <DescriptionTextId>5640</DescriptionTextId>   <!--  5640 => "The percent of receptacle electrical current utilization relative to the receptacle's current rating."  -->
    <LabelTextId>5639</LabelTextId>   <!--  5639 => "Receptacle Percent Current Utilization"  -->
    <NumericDefn>
        <MeasureBaseId>11</MeasureBaseId>
    </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4784</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact01</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 1
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 1</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5642</DescriptionTextId>   <!--  5642 => "User programmable string for external input contact 1"  -->
 <LabelTextId>5641</LabelTextId>   <!--  5641 => "User Label for Input Contact 1"  -->
 <TextDefn>
  <DataId>4784</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4785</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact02</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 2
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 2</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5644</DescriptionTextId>   <!--  5644 => "User programmable string for external input contact 2"  -->
 <LabelTextId>5643</LabelTextId>   <!--  5643 => "User Label for Input Contact 2"  -->
 <TextDefn>
  <DataId>4785</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4786</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact03</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 3
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 3</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5646</DescriptionTextId>   <!--  5646 => "User programmable string for external input contact 3"  -->
 <LabelTextId>5645</LabelTextId>   <!--  5645 => "User Label for Input Contact 3"  -->
 <TextDefn>
  <DataId>4786</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4787</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact04</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 4
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 4</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5648</DescriptionTextId>   <!--  5648 => "User programmable string for external input contact 4"  -->
 <LabelTextId>5647</LabelTextId>   <!--  5647 => "User Label for Input Contact 4"  -->
 <TextDefn>
  <DataId>4787</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4788</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact05</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 5
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 5</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5650</DescriptionTextId>   <!--  5650 => "User programmable string for external input contact 5"  -->
 <LabelTextId>5649</LabelTextId>   <!--  5649 => "User Label for Input Contact 5"  -->
 <TextDefn>
  <DataId>4788</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4789</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact06</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 6
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 6</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5652</DescriptionTextId>   <!--  5652 => "User programmable string for external input contact 6"  -->
 <LabelTextId>5651</LabelTextId>   <!--  5651 => "User Label for Input Contact 6"  -->
 <TextDefn>
  <DataId>4789</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4790</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact07</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 7
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 7</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5654</DescriptionTextId>   <!--  5654 => "User programmable string for external input contact 7"  -->
 <LabelTextId>5653</LabelTextId>   <!--  5653 => "User Label for Input Contact 7"  -->
 <TextDefn>
  <DataId>4790</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4791</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact08</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 8
Raptor Specific:
Input Contact Isolator Board Number 1, Contact Number 8</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5656</DescriptionTextId>   <!--  5656 => "User programmable string for external input contact 8"  -->
 <LabelTextId>5655</LabelTextId>   <!--  5655 => "User Label for Input Contact 8"  -->
 <TextDefn>
  <DataId>4791</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4792</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact09</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 9
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 1</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5658</DescriptionTextId>   <!--  5658 => "User programmable string for external input contact 9"  -->
 <LabelTextId>5657</LabelTextId>   <!--  5657 => "User Label for Input Contact 9"  -->
 <TextDefn>
  <DataId>4792</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4793</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact10</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 10
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 2</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5660</DescriptionTextId>   <!--  5660 => "User programmable string for external input contact 10"  -->
 <LabelTextId>5659</LabelTextId>   <!--  5659 => "User Label for Input Contact 10"  -->
 <TextDefn>
  <DataId>4793</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4794</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact11</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 11
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 3</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5662</DescriptionTextId>   <!--  5662 => "User programmable string for external input contact 11"  -->
 <LabelTextId>5661</LabelTextId>   <!--  5661 => "User Label for Input Contact 11"  -->
 <TextDefn>
  <DataId>4794</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4795</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact12</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 12
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 4</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5664</DescriptionTextId>   <!--  5664 => "User programmable string for external input contact 12"  -->
 <LabelTextId>5663</LabelTextId>   <!--  5663 => "User Label for Input Contact 12"  -->
 <TextDefn>
  <DataId>4795</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4796</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact13</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 13
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 5</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5666</DescriptionTextId>   <!--  5666 => "User programmable string for external input contact 13"  -->
 <LabelTextId>5665</LabelTextId>   <!--  5665 => "User Label for Input Contact 13"  -->
 <TextDefn>
  <DataId>4796</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4797</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact14</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 14
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 6</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5668</DescriptionTextId>   <!--  5668 => "User programmable string for external input contact 14"  -->
 <LabelTextId>5667</LabelTextId>   <!--  5667 => "User Label for Input Contact 14"  -->
 <TextDefn>
  <DataId>4797</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4798</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact15</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 15
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 7</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5670</DescriptionTextId>   <!--  5670 => "User programmable string for external input contact 15"  -->
 <LabelTextId>5669</LabelTextId>   <!--  5669 => "User Label for Input Contact 15"  -->
 <TextDefn>
  <DataId>4798</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4799</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_inpContact16</ProgrammaticName>
 <EngineeringDescription>User Label for Input Contact 16
Raptor Specific:
Input Contact Isolator Board Number 2, Contact Number 8</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5672</DescriptionTextId>   <!--  5672 => "User programmable string for external input contact 16"  -->
 <LabelTextId>5671</LabelTextId>   <!--  5671 => "User Label for Input Contact 16"  -->
 <TextDefn>
  <DataId>4799</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4800</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_na_ratedModuleCount</ProgrammaticName>
 <EngineeringDescription>The rated number of modules in the multi-module system. In a single module system, this value is one.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>4503</DescriptionTextId>   <!--  4503 => ""  -->
 <LabelTextId>4504</LabelTextId>   <!--  4504 => ""  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4801</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ep_outRmsPhsAB</ProgrammaticName>
 <EngineeringDescription>The multi-module system output RMS voltage between Phase A and Phase B.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is averaged from the individual voltage measurements
For N+1 this average voltage is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5674</DescriptionTextId>   <!--  5674 => "Multi-module system output RMS voltage between phases A and B"  -->
 <LabelTextId>5673</LabelTextId>   <!--  5673 => "Multi-module System Output Voltage RMS A-B"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4802</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ep_outRmsPhsBC</ProgrammaticName>
 <EngineeringDescription>The multi-module system output RMS voltage between Phase B and Phase C.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is averaged from the individual voltage measurements
For N+1 this average voltage is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5676</DescriptionTextId>   <!--  5676 => "Multi-module system output RMS voltage between phases B and C"  -->
 <LabelTextId>5675</LabelTextId>   <!--  5675 => "Multi-module System Output Voltage RMS B-C"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4803</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ep_outRmsPhsCA</ProgrammaticName>
 <EngineeringDescription>The multi-module system output RMS voltage between Phase C and Phase A.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is averaged from the individual voltage measurements
For N+1 this average voltage is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5678</DescriptionTextId>   <!--  5678 => "Multi-module system output RMS voltage between phases C and A"  -->
 <LabelTextId>5677</LabelTextId>   <!--  5677 => "Multi-module System Output Voltage RMS C-A"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4804</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ep_outRmsPhsAN</ProgrammaticName>
 <EngineeringDescription>The multi-module system output RMS voltage between Phase A and Neutral.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is averaged from the individual voltage measurements
For N+1 this average voltage is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5680</DescriptionTextId>   <!--  5680 => "Multi-module system output RMS voltage between phase B and Neutral"  -->
 <LabelTextId>5679</LabelTextId>   <!--  5679 => "Multi-module System Output Voltage RMS A-N"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4805</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ep_outRmsPhsBN</ProgrammaticName>
 <EngineeringDescription>The multi-module system output RMS voltage between Phase B and Neutral.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is averaged from the individual voltage measurements
For N+1 this average voltage is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5680</DescriptionTextId>   <!--  5680 => "Multi-module system output RMS voltage between phase B and Neutral"  -->
 <LabelTextId>5681</LabelTextId>   <!--  5681 => "Multi-module System Output Voltage RMS B-N"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4806</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ep_outRmsPhsCN</ProgrammaticName>
 <EngineeringDescription>The multi-module system output RMS voltage between Phase C and Neutral.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is averaged from the individual voltage measurements
For N+1 this average voltage is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5683</DescriptionTextId>   <!--  5683 => "Multi-module system output RMS voltage between phase C and Neutral"  -->
 <LabelTextId>5682</LabelTextId>   <!--  5682 => "Multi-module System Output Voltage RMS C-N"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4807</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ec_outRmsPhsA</ProgrammaticName>
 <EngineeringDescription>The sum of the System Output RMS currents Phs A. The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is summed from the individual current measurements
For N+1 this summed current is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5685</DescriptionTextId>   <!--  5685 => "The sum of the multi-module system output RMS currents for phase A"  -->
 <LabelTextId>5684</LabelTextId>   <!--  5684 => "Sum of MMS Output RMS Currents for Phase A"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4808</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ec_outRmsPhsB</ProgrammaticName>
 <EngineeringDescription>The sum of the System Output RMS currents Phs B. The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is summed from the individual current measurements
For N+1 this summed current is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5687</DescriptionTextId>   <!--  5687 => "The sum of the multi-module system output RMS currents for phase B"  -->
 <LabelTextId>5686</LabelTextId>   <!--  5686 => "Sum of MMS Output RMS Currents for Phase B"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4809</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ec_outRmsPhsC</ProgrammaticName>
 <EngineeringDescription>The sum of the System Output RMS currents Phs C. The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is summed from the individual current measurements
For N+1 this summed current is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5689</DescriptionTextId>   <!--  5689 => "The sum of the multi-module system output RMS currents for phase C"  -->
 <LabelTextId>5688</LabelTextId>   <!--  5688 => "Sum of MMS Output RMS Currents for Phase C"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4810</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_freq_out</ProgrammaticName>
 <EngineeringDescription>The multi-module system output frequency. The system output is defined as the critical bus supporting the load.
Raptor specific:
For N+1 the frequency is measured at the system output terminals
For 1+N the frequency is measured at the modules.</EngineeringDescription>
 <EngineeringReference>Caliber[136019]</EngineeringReference>
 <DescriptionTextId>5691</DescriptionTextId>   <!--  5691 => "The multi-module system output frequency"  -->
 <LabelTextId>5690</LabelTextId>   <!--  5690 => "MMS Output Frequency"  -->
 <NumericDefn>
  <MeasureBaseId>9</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4811</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pwr_out</ProgrammaticName>
 <EngineeringDescription>The total output power of the multi-module system.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 the output power is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5693</DescriptionTextId>   <!--  5693 => "The sum total power of all system output modules"  -->
 <LabelTextId>5692</LabelTextId>   <!--  5692 => "MMS Output Power"  -->
 <NumericDefn>
  <MeasureBaseId>6</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4812</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ap_out</ProgrammaticName>
 <EngineeringDescription>The total output kVA (apparent power) of the multi-module system.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 the output power is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5695</DescriptionTextId>   <!--  5695 => "The sum total apparent power of all system output modules"  -->
 <LabelTextId>5694</LabelTextId>   <!--  5694 => "MMS Output Apparent Power"  -->
 <NumericDefn>
  <MeasureBaseId>4</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4813</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_outPwrFactPhsA</ProgrammaticName>
 <EngineeringDescription>The multi-module system output power factor for Phase A.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is derived from the individual power measurements
For N+1 this is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5697</DescriptionTextId>   <!--  5697 => "The multi-module system output power factor for phase A"  -->
 <LabelTextId>5696</LabelTextId>   <!--  5696 => "MMS Output Power Factor Phase A"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4814</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_outPwrFactPhsB</ProgrammaticName>
 <EngineeringDescription>The multi-module system output power factor for Phase B.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is derived from the individual power measurements
For N+1 this is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5699</DescriptionTextId>   <!--  5699 => "The multi-module system output power factor for phase B"  -->
 <LabelTextId>5698</LabelTextId>   <!--  5698 => "MMS Output Power Factor Phase B"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4815</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_outPwrFactPhsC</ProgrammaticName>
 <EngineeringDescription>The multi-module system output power factor for Phase C.   The system output is defined as the critical bus supporting the load.
Raptor specific:
For 1+N this is derived from the individual power measurements
For N+1 this is measured directly.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5701</DescriptionTextId>   <!--  5701 => "The multi-module system output power factor for phase C"  -->
 <LabelTextId>5700</LabelTextId>   <!--  5700 => "MMS Output Power Factor Phase C"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4816</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pct_outPwrPhsAN</ProgrammaticName>
 <EngineeringDescription>The total output power of the multi-module system on phase A as a percentage of the rated capacity.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 this value is not available</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5703</DescriptionTextId>   <!--  5703 => "The multi-module system output power on phase A as a percentage of the rated capacity"  -->
 <LabelTextId>5702</LabelTextId>   <!--  5702 => "MMS Output Pct Power Phase A"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4817</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pct_outPwrPhsBN</ProgrammaticName>
 <EngineeringDescription>The total output power of the multi-module system on phase B as a percentage of the rated capacity.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 this value is not available</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5705</DescriptionTextId>   <!--  5705 => "The multi-module system output power on phase B as a percentage of the rated capacity"  -->
 <LabelTextId>5704</LabelTextId>   <!--  5704 => "MMS Output Pct Power Phase B"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4818</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pct_outPwrPhsCN</ProgrammaticName>
 <EngineeringDescription>The total output power of the multi-module system on phase C as a percentage of the rated capacity.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 this value is not available</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5707</DescriptionTextId>   <!--  5707 => "The multi-module system output power on phase C as a percentage of the rated capacity"  -->
 <LabelTextId>5706</LabelTextId>   <!--  5706 => "MMS Output Pct Power Phase C"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4819</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pct_outVaPhsA</ProgrammaticName>
 <EngineeringDescription>The total output kVA (apparent power) of the multi-module system on phase A as a percentage of the rated capacity.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 this value is not available</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5709</DescriptionTextId>   <!--  5709 => "The multi-module system output apparent power on phase A as a percentage of the rated capacity"  -->
 <LabelTextId>5708</LabelTextId>   <!--  5708 => "MMS Output Pct Apparent Pwr (kVA) Phase A"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4820</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pct_outVaPhsB</ProgrammaticName>
 <EngineeringDescription>The total output kVA (apparent power) of the multi-module system on phase B as a percentage of the rated capacity.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 this value is not available</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5711</DescriptionTextId>   <!--  5711 => "The multi-module system output apparent power on phase B as a percentage of the rated capacity"  -->
 <LabelTextId>5710</LabelTextId>   <!--  5710 => "MMS Output Pct Apparent Pwr (kVA) Phase B"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4821</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pct_outVaPhsC</ProgrammaticName>
 <EngineeringDescription>The total output kVA (apparent power) of the multi-module system on phase C as a percentage of the rated capacity.
Raptor specific:
For 1+N this is summed from the individual power measurements
For N+1 this value is not available</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5713</DescriptionTextId>   <!--  5713 => "The multi-module system output apparent power on phase C as a percentage of the rated capacity"  -->
 <LabelTextId>5712</LabelTextId>   <!--  5712 => "MMS Output Pct Apparent Pwr (kVA) Phase C"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4822</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_redundModules</ProgrammaticName>
 <EngineeringDescription>The number of Redundant Modules in a multi-module collective.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5715</DescriptionTextId>   <!--  5715 => "The number of redundant modules in a multi-module collective."  -->
 <LabelTextId>5714</LabelTextId>   <!--  5714 => "Number of Redundant Modules"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4823</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_parCommWarn</ProgrammaticName>
 <EngineeringDescription>One of the paralleling control communication busses is no longer communicating within the system. This event recovers when all of the communications busses are communicating.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID320</EngineeringReference>
 <DescriptionTextId>5717</DescriptionTextId>   <!--  5717 => "Parallel communication bus warning"  -->
 <LabelTextId>5716</LabelTextId>   <!--  5716 => "Parallel Comm Warning"  -->
 <EventDefn>
  <DataId>4823</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4824</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_sysCommFail</ProgrammaticName>
 <EngineeringDescription>The control has detected a communication failure of a device on the multi-module communication bus. Event will recover when all causal faults have cleared.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID321</EngineeringReference>
 <DescriptionTextId>5719</DescriptionTextId>   <!--  5719 => "Failure of a device on the multi-module system communication bus"  -->
 <LabelTextId>5718</LabelTextId>   <!--  5718 => "System Comm Fail"  -->
 <EventDefn>
  <DataId>4824</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4825</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_lossRedundancy</ProgrammaticName>
 <EngineeringDescription>The multi-module system has been programmed as a redundant, but has an insufficient number of modules to provide the redundancy. (event 330)</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID330</EngineeringReference>
 <DescriptionTextId>5721</DescriptionTextId>   <!--  5721 => "The multi-module collection doesn't have enough modules to redundantly support the load"  -->
 <LabelTextId>5720</LabelTextId>   <!--  5720 => "Loss of Redundancy"  -->
 <EventDefn>
  <DataId>4825</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4826</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_bpssStartInhibit</ProgrammaticName>
 <EngineeringDescription>The Bypass Static Switch Startup is Inhibited because there are not enough bypasses to support the rated capacity. Will recover when there are a sufficient number of bypasses to support the rated capacity.
Raptor Specific:
This only applies to 1+N systems.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID333</EngineeringReference>
 <DescriptionTextId>5723</DescriptionTextId>   <!--  5723 => "The Bypass Static Switch startup is inhibited"  -->
 <LabelTextId>5722</LabelTextId>   <!--  5722 => "BPSS Startup Inhibit"  -->
 <EventDefn>
  <DataId>4826</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4827</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_xfer_inhibit</ProgrammaticName>
 <EngineeringDescription>In a Multi-Module System, the critical load can not be manually transferred from inverter to bypass. Recovers when the conditions preventing the transfer are resolved.
Raptor Specific:
With the collective on UPS, Module Output Breaker (MOB) Open is active or Output Isolator (QE) Open is active or Manual Transfer Inhibit is active or not enough BPSSs are available to support the measured load or any module's BPSS is connected to the collective.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID101</EngineeringReference>
 <DescriptionTextId>5725</DescriptionTextId>   <!--  5725 => "The critical load can not be manually transferred from inverter to bypass"  -->
 <LabelTextId>5724</LabelTextId>   <!--  5724 => "MMS Transfer Inhibit"  -->
 <EventDefn>
  <DataId>4827</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4828</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_rexfer_inhibit</ProgrammaticName>
 <EngineeringDescription>In a Multi-Module System, the critical load can not be manually retransferred from bypass to inverter. Recovers when the conditions preventing the retransfer are resolved.
Raptor Specific:
With the collective not on UPS, Module Output Breaker (MOB) Open is active or Output Isolator (QE) Open is active or Manual Retransfer Inhibit is active or not enough inverters are available to support the measured load or any module's inverter is connected to the collective.</EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID112</EngineeringReference>
 <DescriptionTextId>5727</DescriptionTextId>   <!--  5727 => "The critical load can not be manually retransferred from bypass to inverter"  -->
 <LabelTextId>5726</LabelTextId>   <!--  5726 => "MMS Retransfer Inhibit"  -->
 <EventDefn>
  <DataId>4828</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4829</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_moduleNumber</ProgrammaticName>
 <EngineeringDescription>MMS Module Number.
Raptor Specific:
For SMS this data point is unsupported.
For 1+N the module number can be from 1 - 8.
For N+1 the module number can be from 1 - 6, or 0 for the SCC.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5729</DescriptionTextId>   <!--  5729 => "MMS module number"  -->
 <LabelTextId>5728</LabelTextId>   <!--  5728 => "MMS Module Number"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4830</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_syncLoss</ProgrammaticName>
 <EngineeringDescription>A module in a MMS has detected that there is no longer a sync pulse being generated. Recovery from this alarm involves recycling power on all modules in the collective.</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event126</EngineeringReference>
 <DescriptionTextId>5731</DescriptionTextId>   <!--  5731 => "Multi-module system loss of sync pulse"  -->
 <LabelTextId>5730</LabelTextId>   <!--  5730 => "MMS Loss of Sync Pulse"  -->
 <EventDefn>
  <DataId>4830</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4831</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_systemOverload</ProgrammaticName>
 <EngineeringDescription>Multi-Module System Overload. One or more modules in a multi-module system is reporting an overload on at least one phase. Cleared when the overload condition is removed from all modules.</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event140</EngineeringReference>
 <DescriptionTextId>5733</DescriptionTextId>   <!--  5733 => "Multi-module system overload"  -->
 <LabelTextId>5732</LabelTextId>   <!--  5732 => "MMS Overload"  -->
 <EventDefn>
  <DataId>4831</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4832</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_mms_scc_monitoringAccessURL</ProgrammaticName>
 <EngineeringDescription>A URL set by the monitoring card of the SCC in a multi-module system that specifies URL access for the monitoring card.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5735</DescriptionTextId>   <!--  5735 => "URL for the monitoring card of the SCC in a multi-module system."  -->
 <LabelTextId>5734</LabelTextId>   <!--  5734 => "MMS SCC Monitoring Card Access URL"  -->
 <TextDefn>
  <DataId>4832</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4833</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_numberOfModules</ProgrammaticName>
 <EngineeringDescription>The number of modules installed in a multi-module system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5737</DescriptionTextId>   <!--  5737 => "The number of modules in a multi-module system"  -->
 <LabelTextId>5736</LabelTextId>   <!--  5736 => "Number of Modules in a MMS"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4834</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_onBatt</ProgrammaticName>
 <EngineeringDescription>The number of modules on battery exceeds the number of redundant modules on line.. Will clear when no modules on battery. @todo investigate recovery</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event191</EngineeringReference>
 <DescriptionTextId>5739</DescriptionTextId>   <!--  5739 => "The multi-module system is on battery"  -->
 <LabelTextId>5738</LabelTextId>   <!--  5738 => "MMS On Battery"  -->
 <EventDefn>
  <DataId>4834</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4835</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_lowBatt</ProgrammaticName>
 <EngineeringDescription>When the number of modules on battery exceed the number of redundant modules on line and any one module has a Battery Low Warning event active Will recover when no module in the system has a Battery Low Warning event active. @todo investigate recovery</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event195</EngineeringReference>
 <DescriptionTextId>5741</DescriptionTextId>   <!--  5741 => "Multi-module system low battery warning"  -->
 <LabelTextId>5740</LabelTextId>   <!--  5740 => "MMS Low Battery Warning"  -->
 <EventDefn>
  <DataId>4835</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4836</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr1</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 1 (MOB1)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5743</DescriptionTextId>   <!--  5743 => "Module output breaker for module 1 (MOB1)"  -->
 <LabelTextId>5742</LabelTextId>   <!--  5742 => "Module Output Breaker for Module 1 (MOB1)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4837</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr2</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 2 (MOB2)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5745</DescriptionTextId>   <!--  5745 => "Module output breaker for module 2 (MOB2)"  -->
 <LabelTextId>5744</LabelTextId>   <!--  5744 => "Module Output Breaker for Module 2 (MOB2)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4838</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr3</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 3 (MOB3)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5747</DescriptionTextId>   <!--  5747 => "Module output breaker for module 3 (MOB3)"  -->
 <LabelTextId>5746</LabelTextId>   <!--  5746 => "Module Output Breaker for Module 3 (MOB3)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4839</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr4</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 4 (MOB4)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5749</DescriptionTextId>   <!--  5749 => "Module output breaker for module 4 (MOB4)"  -->
 <LabelTextId>5748</LabelTextId>   <!--  5748 => "Module Output Breaker for Module 4 (MOB4)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4840</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr5</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 5 (MOB5)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5751</DescriptionTextId>   <!--  5751 => "Module output breaker for module 5 (MOB5)"  -->
 <LabelTextId>5750</LabelTextId>   <!--  5750 => "Module Output Breaker for Module 5 (MOB5)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4841</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr6</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 6 (MOB6)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5753</DescriptionTextId>   <!--  5753 => "Module output breaker for module 6 (MOB6)"  -->
 <LabelTextId>5752</LabelTextId>   <!--  5752 => "Module Output Breaker for Module 6 (MOB6)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4842</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr7</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 7 (MOB7)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5755</DescriptionTextId>   <!--  5755 => "Module output breaker for module 7 (MOB7)"  -->
 <LabelTextId>5754</LabelTextId>   <!--  5754 => "Module Output Breaker for Module 7 (MOB7)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4843</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_modOutBrkr8</ProgrammaticName>
 <EngineeringDescription>Module Output Breaker of Module 8 (MOB8)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5757</DescriptionTextId>   <!--  5757 => "Module output breaker for module 8 (MOB8)"  -->
 <LabelTextId>5756</LabelTextId>   <!--  5756 => "Module Output Breaker for Module 8 (MOB8)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4844</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr1</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 1 (BIB1)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5759</DescriptionTextId>   <!--  5759 => "Bypass isolation breaker for module 1 (BIB1)"  -->
 <LabelTextId>5758</LabelTextId>   <!--  5758 => "Bypass Isolation Breaker for Module 1 (BIB1)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4845</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr2</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 2 (BIB2)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5761</DescriptionTextId>   <!--  5761 => "Bypass isolation breaker for module 2 (BIB2)"  -->
 <LabelTextId>5760</LabelTextId>   <!--  5760 => "Bypass Isolation Breaker for Module 2 (BIB2)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4846</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr3</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 3 (BIB3)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5763</DescriptionTextId>   <!--  5763 => "Bypass isolation breaker for module 3 (BIB3)"  -->
 <LabelTextId>5762</LabelTextId>   <!--  5762 => "Bypass Isolation Breaker for Module 3 (BIB3)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4847</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr4</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 4 (BIB4)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5765</DescriptionTextId>   <!--  5765 => "Bypass isolation breaker for module 4 (BIB4)"  -->
 <LabelTextId>5764</LabelTextId>   <!--  5764 => "Bypass Isolation Breaker for Module 4 (BIB4)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4848</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr5</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 5 (BIB5)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5767</DescriptionTextId>   <!--  5767 => "Bypass isolation breaker for module 5 (BIB5)"  -->
 <LabelTextId>5766</LabelTextId>   <!--  5766 => "Bypass Isolation Breaker for Module 5 (BIB5)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4849</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr6</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 6 (BIB6)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5769</DescriptionTextId>   <!--  5769 => "Bypass isolation breaker for module 6 (BIB6)"  -->
 <LabelTextId>5768</LabelTextId>   <!--  5768 => "Bypass Isolation Breaker for Module 6 (BIB6)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4850</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr7</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 7 (BIB7)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5771</DescriptionTextId>   <!--  5771 => "Bypass isolation breaker for module 7 (BIB7)"  -->
 <LabelTextId>5770</LabelTextId>   <!--  5770 => "Bypass Isolation Breaker for Module 7 (BIB7)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4851</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inpBrkr8</ProgrammaticName>
 <EngineeringDescription>Maintenance Bypass Cabinet - Bypass Isolation Breaker for Module 8 (BIB8)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5773</DescriptionTextId>   <!--  5773 => "Bypass isolation breaker for module 8 (BIB8)"  -->
 <LabelTextId>5772</LabelTextId>   <!--  5772 => "Bypass Isolation Breaker for Module 8 (BIB8)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4852</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_sysOutBrkr</ProgrammaticName>
 <EngineeringDescription>System Output Breaker (UOB)
Raptor specific:
Only present in the SCC configuration</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5775</DescriptionTextId>   <!--  5775 => "System output breaker (UOB)"  -->
 <LabelTextId>5774</LabelTextId>   <!--  5774 => "System Output Breaker (UOB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4853</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_loadBankBrkr</ProgrammaticName>
 <EngineeringDescription>System Load Bank Breaker (LBB)
Raptor specific:
Available on SCC only.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5777</DescriptionTextId>   <!--  5777 => "System load bank breaker (LBB)"  -->
 <LabelTextId>5776</LabelTextId>   <!--  5776 => "System Load Bank Breaker (LBB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4854</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_isoOutBreaker</ProgrammaticName>
 <EngineeringDescription>System Isolation Output Breaker (IOB)
Raptor Specific:
When module output breaker CB2 is located remotely in the System Control Cabinet, it is called IOB.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5779</DescriptionTextId>   <!--  5779 => "System isolation output breaker (IOB)"  -->
 <LabelTextId>5778</LabelTextId>   <!--  5778 => "System Isolation Output Breaker (IOB)"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4135</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4855</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_scc_eventSummary</ProgrammaticName>
 <EngineeringDescription>Event Status of the System Control Cabinet (SCC) in a Multi-Module System.  This is the summary of any active user alarms or faults. Possible states are: None, Fault, Alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5781</DescriptionTextId>   <!--  5781 => "Summary of any active user alarms or faults on the SCC"  -->
 <LabelTextId>5780</LabelTextId>   <!--  5780 => "SCC Event Summary"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4137</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4856</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_commsSummary</ProgrammaticName>
 <EngineeringDescription>Multi-module Inter-module communication status summary for this module in multi-module system.
Valid states are Failed or Normal.
Raptor Specific:
Summary of miscellaneous board comm fail events internal to the module.</EngineeringDescription>
 <EngineeringReference>OP 153332</EngineeringReference>
 <DescriptionTextId>5786</DescriptionTextId>   <!--  5786 => "Inter-module communication status of this module in a multi-module system"  -->
 <LabelTextId>5785</LabelTextId>   <!--  5785 => "MMS Inter-Module Comm Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4138</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4857</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_eventSummary</ProgrammaticName>
 <EngineeringDescription>Multi-module event status of this module (Summary of Any Active User Alarms or Faults) in a Multi-Module System. Possible states are: None, Fault Summary, Alarm Summary.</EngineeringDescription>
 <EngineeringReference>OP 153332</EngineeringReference>
 <DescriptionTextId>5790</DescriptionTextId>   <!--  5790 => "Summary of any active user alarm or fault of this module in a multi-module system"  -->
 <LabelTextId>5789</LabelTextId>   <!--  5789 => "MMS Event Summary"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4137</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4858</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_inv_opState</ProgrammaticName>
 <EngineeringDescription>Multi-module inverter status of this module (On/Off)</EngineeringDescription>
 <EngineeringReference>OP 153332</EngineeringReference>
 <DescriptionTextId>5792</DescriptionTextId>   <!--  5792 => "Multi-module inverter status of this module (on/off)"  -->
 <LabelTextId>5791</LabelTextId>   <!--  5791 => "MMS Module Inverter Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4859</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_out_qualification</ProgrammaticName>
 <EngineeringDescription>Multi-module output voltage status of this module (Normal, Marginal, Failed)</EngineeringDescription>
 <EngineeringReference>OP 153332</EngineeringReference>
 <DescriptionTextId>5794</DescriptionTextId>   <!--  5794 => "Output voltage status of this module in multi-module system"  -->
 <LabelTextId>5793</LabelTextId>   <!--  5793 => "MMS Module Output Voltage Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4132</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4860</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_sys_outputSource</ProgrammaticName>
 <EngineeringDescription>The module's output power source (off, normal, bypass, or maintenance bypass).</EngineeringDescription>
 <EngineeringReference>OP 153332</EngineeringReference>
 <DescriptionTextId>5796</DescriptionTextId>   <!--  5796 => "Module output source in a multi-module system (normal/bypass/maintenance bypass/off)"  -->
 <LabelTextId>5795</LabelTextId>   <!--  5795 => "MMS Module Output Source"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4134</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4861</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_pwr_mod</ProgrammaticName>
 <EngineeringDescription>Total kW output of this module in a multi-module system</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5798</DescriptionTextId>   <!--  5798 => "Total kW output of this module in a multi-module system"  -->
 <LabelTextId>5797</LabelTextId>   <!--  5797 => "MMS Module Total kW Output"  -->
 <NumericDefn>
  <MeasureBaseId>6</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4862</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_ap_mod</ProgrammaticName>
 <EngineeringDescription>Total kVA output of this module in a multi module system</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5800</DescriptionTextId>   <!--  5800 => "Total kVA output of this module in a multi-module system"  -->
 <LabelTextId>5799</LabelTextId>   <!--  5799 => "MMS Module Total kVA Output"  -->
 <NumericDefn>
  <MeasureBaseId>4</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4863</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_dcb_ep_dcbus</ProgrammaticName>
 <EngineeringDescription>The voltage between the positive and negative terminals of the DC bus of this module in a multi-module system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5802</DescriptionTextId>   <!--  5802 => "DC bus voltage of this module in a multi-module system"  -->
 <LabelTextId>5801</LabelTextId>   <!--  5801 => "MMS Module DC Bus Voltage"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4864</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_dcb_ec_dcbus</ProgrammaticName>
 <EngineeringDescription>The current at the battery input terminals of this module in a multi-module system. DC bus current can be either charging or discharging. In charging mode, the current will be a positive value. In discharging mode, the current will be a negative value.

If there are multiple battery strings that comprise the system battery, then this current is for the system battery (i.e. it includes all of the batteries in the system).

If a fly wheel is used instead of a battery, then this is the current flowing into or out of the fly wheel source.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5804</DescriptionTextId>   <!--  5804 => "Battery current of this module in a multi-module system"  -->
 <LabelTextId>5803</LabelTextId>   <!--  5803 => "MMS Module Battery Current"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4865</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_bat_tm_remaining</ProgrammaticName>
 <EngineeringDescription>The calculated available time on battery of this module in a multi-module system. Raptor Specific:
If the battery is not discharging, then a special value is used to indicate that the value is unavailable.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5806</DescriptionTextId>   <!--  5806 => "Battery time remaining for this module in a multi-module system"  -->
 <LabelTextId>5805</LabelTextId>   <!--  5805 => "MMS Module Battery Time Remaining"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4866</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_mms_monitoringAccessURL</ProgrammaticName>
 <EngineeringDescription>A URL set by the monitoring card of this module in a multi-module system that specifies URL access for the monitoring card.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5808</DescriptionTextId>   <!--  5808 => "URL for the monitoring card of this module in a multi-module system."  -->
 <LabelTextId>5807</LabelTextId>   <!--  5807 => "MMS Module URL Address"  -->
 <TextDefn>
  <DataId>4866</DataId>
 </TextDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_XP.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4867</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_dewPnt</ProgrammaticName>
 <EngineeringDescription>Dew point temperature, using the highest reading from all sensors.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DEW_TD_R_T</EngineeringReference>
 <DescriptionTextId>5811</DescriptionTextId>   <!--  5811 => "Dew point temperature, using the highest reading from all sensors."  -->
 <LabelTextId>5810</LabelTextId>   <!--  5810 => "Dew Point Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4868</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tm_nextMaintMonth</ProgrammaticName>
 <EngineeringDescription>Calculated month of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Year].  This is a value from 1 to 12, where 1 = January and 12 = December.

iCOM Specific: The next maintenance is continuously calculated from individual system component parameters.  These parameters may include, but are not limited to, operating hours, number of starts, average running time, and the occurrence of certain alarms and warnings.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SERV_MON</EngineeringReference>
 <DescriptionTextId>5813</DescriptionTextId>   <!--  5813 => "Calculated month of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Year]."  -->
 <LabelTextId>5812</LabelTextId>   <!--  5812 => "Calculated Next Maintenance Month"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4869</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tm_nextMaintYear</ProgrammaticName>
 <EngineeringDescription>Calculated year of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Month]. For example, a value of 2009 is provided to indicate the year 2009 (a value of '09' does NOT represent 2009).

            iCOM Specific: The next maintenance is continuously calculated from individual system component parameters.  These parameters may include, but are not limited to, operating hours, number of starts, average running time, and the occurrence of certain alarms and warnings.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SERV_YE4</EngineeringReference>
 <DescriptionTextId>5815</DescriptionTextId>   <!--  5815 => "Calculated year of the next scheduled maintenance.  Used in conjunction with [Calculated Next Maintenance Month]."  -->
 <LabelTextId>5814</LabelTextId>   <!--  5814 => "Calculated Next Maintenance Year"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4870</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_maintenanceRamp</ProgrammaticName>
 <EngineeringDescription>Percentage of calculated operations interval that has elapsed before next maintenance is required.

          iCOM Specific: The calculation of this estimate is based upon the run hours, number of starts, and number of alarms logged for each individual component in the system.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_SERV</EngineeringReference>
 <DescriptionTextId>5817</DescriptionTextId>   <!--  5817 => "The ratio of operations performed to the calculated operations available between maintenance intervals."  -->
 <LabelTextId>5816</LabelTextId>   <!--  5816 => "Maintenance Ramp"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'RaptrHMI-090325.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4871</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_bat_upsBattStatus</ProgrammaticName>
 <EngineeringDescription>Battery Status for this UPS. Valid states are (Unknown, Normal, Low, and Depleted)
This datapoint is intended to support the rfc1628 mib object upsBatteryStatus.
For a multi-module system the st_mms_upsBattStatus datapoint should be used.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5819</DescriptionTextId>   <!--  5819 => "UPS battery status"  -->
 <LabelTextId>5818</LabelTextId>   <!--  5818 => "UPS Battery Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4139</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4872</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_upsOutputSource</ProgrammaticName>
 <EngineeringDescription>UPS Output Source. Valid states are (Other, Off, Normal, Bypass, Battery, Booster, and Reducer)
This datapoint is intended to support the rfc1628 mib object upsOutputSource.
For a multi-module system the st_mms_upsOutputSource datapoint should be used.
Raptor specific:
Only the states (Off, Normal, Bypass, and Battery) are supported.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5825</DescriptionTextId>   <!--  5825 => "UPS output source"  -->
 <LabelTextId>5824</LabelTextId>   <!--  5824 => "UPS Output Source"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4140</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4873</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_upsBattStatus</ProgrammaticName>
 <EngineeringDescription>Multi-module Battery Status for this system. Valid states are (Unknown, Normal, Low, and Depleted)
This datapoint is intended to support the rfc1628 mib object upsBatteryStatus.
For a single-module system the st_bat_upsBattStatus datapoint should be used.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5834</DescriptionTextId>   <!--  5834 => "Multi-module UPS battery status"  -->
 <LabelTextId>5833</LabelTextId>   <!--  5833 => "MMS UPS Battery Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4139</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4874</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_upsOutputSource</ProgrammaticName>
 <EngineeringDescription>Multi-module UPS Output Source. Valid states are (Other, Off, Normal, Bypass, Battery, Booster, and Reducer)
This datapoint is intended to support the rfc1628 mib object upsOutputSource.
For a single-module system the st_sys_upsOutputSource datapoint should be used.
Raptor specific:
Only the states (Off, Normal, Bypass, and Battery) are supported.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5836</DescriptionTextId>   <!--  5836 => "Multi-module UPS output source"  -->
 <LabelTextId>5835</LabelTextId>   <!--  5835 => "MMS UPS Output Source"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4140</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'BDSU.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4875</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstName</ProgrammaticName>
 <EngineeringDescription>The name of the customer the device belongs to. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5838</DescriptionTextId>   <!--  5838 => "The name of the customer the device belongs to."  -->
 <LabelTextId>5837</LabelTextId>   <!--  5837 => "Customer's Name"  -->
 <TextDefn>
  <DataId>4875</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4876</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstStreetAddress</ProgrammaticName>
 <EngineeringDescription>The street address of the customer.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5840</DescriptionTextId>   <!--  5840 => "The street address where the customer is located."  -->
 <LabelTextId>5839</LabelTextId>   <!--  5839 => "Customer's Street Address"  -->
 <TextDefn>
  <DataId>4876</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4877</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstCity</ProgrammaticName>
 <EngineeringDescription>The city where the customer is located.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5842</DescriptionTextId>   <!--  5842 => "The city where the customer is located."  -->
 <LabelTextId>5841</LabelTextId>   <!--  5841 => "Customer's City"  -->
 <TextDefn>
  <DataId>4877</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4878</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstState</ProgrammaticName>
 <EngineeringDescription>The state where the customer is located.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5844</DescriptionTextId>   <!--  5844 => "The state where the customer is located."  -->
 <LabelTextId>5843</LabelTextId>   <!--  5843 => "Customer's State"  -->
 <TextDefn>
  <DataId>4878</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4879</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstZipCode</ProgrammaticName>
 <EngineeringDescription>The ZIP code where the customer is located.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5846</DescriptionTextId>   <!--  5846 => "The ZIP code where the customer is located."  -->
 <LabelTextId>5845</LabelTextId>   <!--  5845 => "Customer's ZIP Code"  -->
 <TextDefn>
  <DataId>4879</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4880</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstContactPerson</ProgrammaticName>
 <EngineeringDescription>The customer contact person . Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5848</DescriptionTextId>   <!--  5848 => "The contact person for the customer."  -->
 <LabelTextId>5847</LabelTextId>   <!--  5847 => "Customer's Contact Person"  -->
 <TextDefn>
  <DataId>4880</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4881</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstPhoneNumber</ProgrammaticName>
 <EngineeringDescription>The phone number of the customer's contact person. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5850</DescriptionTextId>   <!--  5850 => "The phone number of the customer's contact person."  -->
 <LabelTextId>5849</LabelTextId>   <!--  5849 => "Customer's Phone Number"  -->
 <TextDefn>
  <DataId>4881</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4882</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstPhoneExtension</ProgrammaticName>
 <EngineeringDescription>The customer contact person's phone number extension, if applicable. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5852</DescriptionTextId>   <!--  5852 => "The phone number extension of the customer's contact person, if applicable."  -->
 <LabelTextId>5851</LabelTextId>   <!--  5851 => "Customer's Phone Extension"  -->
 <TextDefn>
  <DataId>4882</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4883</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstCellPhoneNumber</ProgrammaticName>
 <EngineeringDescription>The cell phone number of the customer's contact person.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5854</DescriptionTextId>   <!--  5854 => "The cell phone number of the customer's contact person."  -->
 <LabelTextId>5853</LabelTextId>   <!--  5853 => "Customer's Cell Phone Number"  -->
 <TextDefn>
  <DataId>4883</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4884</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstFaxNumber</ProgrammaticName>
 <EngineeringDescription>The FAX number of the customer's contact person.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5856</DescriptionTextId>   <!--  5856 => "The FAX number of the customer's contact person."  -->
 <LabelTextId>5855</LabelTextId>   <!--  5855 => "Customer's FAX Number"  -->
 <TextDefn>
  <DataId>4884</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4885</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_cstEMailAddress</ProgrammaticName>
 <EngineeringDescription>The e-mail address of the customer's contact person. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5858</DescriptionTextId>   <!--  5858 => "The e-mail address of the customer's contact person."  -->
 <LabelTextId>5857</LabelTextId>   <!--  5857 => "Customer's E-mail Address"  -->
 <TextDefn>
  <DataId>4885</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4886</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locName</ProgrammaticName>
 <EngineeringDescription>Name of the location where the unit resides. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5860</DescriptionTextId>   <!--  5860 => "Name of the site where the unit is located."  -->
 <LabelTextId>5859</LabelTextId>   <!--  5859 => "Location Name"  -->
 <TextDefn>
  <DataId>4886</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4887</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locStreetAddress</ProgrammaticName>
 <EngineeringDescription>Street address where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5862</DescriptionTextId>   <!--  5862 => "Street address where the unit resides."  -->
 <LabelTextId>5861</LabelTextId>   <!--  5861 => "Location Street Address"  -->
 <TextDefn>
  <DataId>4887</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4888</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locCity</ProgrammaticName>
 <EngineeringDescription>City where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5864</DescriptionTextId>   <!--  5864 => "City where the unit resides."  -->
 <LabelTextId>5863</LabelTextId>   <!--  5863 => "Location City"  -->
 <TextDefn>
  <DataId>4888</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4889</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locState</ProgrammaticName>
 <EngineeringDescription>State where the unit resides.  Client Assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5866</DescriptionTextId>   <!--  5866 => "State where the unit resides."  -->
 <LabelTextId>5865</LabelTextId>   <!--  5865 => "Location State"  -->
 <TextDefn>
  <DataId>4889</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4890</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locZipCode</ProgrammaticName>
 <EngineeringDescription>ZIP code where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5868</DescriptionTextId>   <!--  5868 => "ZIP code where the unit resides."  -->
 <LabelTextId>5867</LabelTextId>   <!--  5867 => "Location ZIP Code"  -->
 <TextDefn>
  <DataId>4890</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4891</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locContactPerson</ProgrammaticName>
 <EngineeringDescription>Contact person at the location where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5870</DescriptionTextId>   <!--  5870 => "Contact person at the location where the unit resides."  -->
 <LabelTextId>5869</LabelTextId>   <!--  5869 => "Location Contact Person"  -->
 <TextDefn>
  <DataId>4891</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4892</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locPhoneNumber</ProgrammaticName>
 <EngineeringDescription>Phone number of contact person at the location where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5872</DescriptionTextId>   <!--  5872 => "Phone number of contact person at the location where the unit resides."  -->
 <LabelTextId>5871</LabelTextId>   <!--  5871 => "Location Phone Number"  -->
 <TextDefn>
  <DataId>4892</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4893</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locPhoneExtension</ProgrammaticName>
 <EngineeringDescription>Phone extension of the contact person at the location where the unit resides. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5874</DescriptionTextId>   <!--  5874 => "Phone extension of the contact person at the location where the unit resides."  -->
 <LabelTextId>5873</LabelTextId>   <!--  5873 => "Location Phone Extension"  -->
 <TextDefn>
  <DataId>4893</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4894</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locCellPhoneNumber</ProgrammaticName>
 <EngineeringDescription>Cell phone number of the contact person at the location where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5876</DescriptionTextId>   <!--  5876 => "Cell phone number of the contact person at the location where the unit resides."  -->
 <LabelTextId>5875</LabelTextId>   <!--  5875 => "Location Cell Phone Number"  -->
 <TextDefn>
  <DataId>4894</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4895</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locFaxNumber</ProgrammaticName>
 <EngineeringDescription>FAX number of the contact person at the location where the unit resides.    Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5878</DescriptionTextId>   <!--  5878 => "FAX number of the contact person at the location where the unit resides."  -->
 <LabelTextId>5877</LabelTextId>   <!--  5877 => "Location FAX Number"  -->
 <TextDefn>
  <DataId>4895</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4896</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_locEMailAddress</ProgrammaticName>
 <EngineeringDescription>E-mail address of the contact person at the location where the unit resides.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5880</DescriptionTextId>   <!--  5880 => "E-mail address of the contact person at the location where the unit resides."  -->
 <LabelTextId>5879</LabelTextId>   <!--  5879 => "Location E-mail Address"  -->
 <TextDefn>
  <DataId>4896</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4897</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bat_batteryName</ProgrammaticName>
 <EngineeringDescription>A name string providing a meaningful reference to the battery. Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5882</DescriptionTextId>   <!--  5882 => "A name string providing a meaningful reference to the battery."  -->
 <LabelTextId>5881</LabelTextId>   <!--  5881 => "Battery Name"  -->
 <TextDefn>
  <DataId>4897</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4898</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bat_batteryRating</ProgrammaticName>
 <EngineeringDescription>Total Amp-hour rating of all parallel strings in the battery.  Client assigned.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5884</DescriptionTextId>   <!--  5884 => "Total rating of all parallel strings in the battery."  -->
 <LabelTextId>5883</LabelTextId>   <!--  5883 => "Battery Rating"  -->
 <NumericDefn>
  <MeasureBaseId>12</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4899</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_ambientTemperature</ProgrammaticName>
 <EngineeringDescription>Ambient temperature reading(s) for the battery string.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5886</DescriptionTextId>   <!--  5886 => "Ambient temperature reading(s) for the battery string."  -->
 <LabelTextId>5885</LabelTextId>   <!--  5885 => "String Ambient Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4900</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_overallVoltage</ProgrammaticName>
 <EngineeringDescription>Overall voltage of a battery string. Calculated by adding all cell voltages within the string or a full potential measurement.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5888</DescriptionTextId>   <!--  5888 => "Overall voltage of a battery string."  -->
 <LabelTextId>5887</LabelTextId>   <!--  5887 => "String Overall Voltage"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4901</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_stringCurrent</ProgrammaticName>
 <EngineeringDescription>Discharge or charge current of a battery string (current is negative during discharge, positive during charge).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5890</DescriptionTextId>   <!--  5890 => "Discharge(-) or charge(+) current of a battery string."  -->
 <LabelTextId>5889</LabelTextId>   <!--  5889 => "String Current"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4902</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_floatCurrent</ProgrammaticName>
 <EngineeringDescription>The current drawn by a battery string that is being float charged.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5892</DescriptionTextId>   <!--  5892 => "The current drawn by a battery string that is being float charged."  -->
 <LabelTextId>5891</LabelTextId>   <!--  5891 => "Float Current"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4903</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_rippleCurrent</ProgrammaticName>
 <EngineeringDescription>A measure of the AC current on a string.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5894</DescriptionTextId>   <!--  5894 => "Ripple current on a string."  -->
 <LabelTextId>5893</LabelTextId>   <!--  5893 => "Ripple Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4904</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_totalActiveAlarmsOnString</ProgrammaticName>
 <EngineeringDescription>The number of active alarms (maintenance or critical) on a battery string.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5896</DescriptionTextId>   <!--  5896 => "The number of active alarms (maintenance or critical) on a battery string."  -->
 <LabelTextId>5895</LabelTextId>   <!--  5895 => "Total Active Alarms on a Battery String"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4905</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_bstg_resetAlarmsOnString</ProgrammaticName>
 <EngineeringDescription>Initiates a reset/clear of all latched alarms on a battery string.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5898</DescriptionTextId>   <!--  5898 => "Initiates a reset/clear of all latched alarms on a battery string."  -->
 <LabelTextId>5897</LabelTextId>   <!--  5897 => "Battery String Alarm Reset"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4101</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4906</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_lowAmbientTemperature</ProgrammaticName>
 <EngineeringDescription>The system has detected a low ambient temperature condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the ambient temperature is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_ambientTemperatureLowGlobalThreshold or val_bstg_tmp_ambientTemperatureLowIndvThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_lowAmbientTemperatureEnable. The latch/unlatch for this event is st_bstg_lowAmbientTemperatureLatch. Reporting for this event is configurable via st_bstg_lowAmbientTemperatureAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_lowAmbientTemperature.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5900</DescriptionTextId>   <!--  5900 => "The system has detected a low ambient temperature condition."  -->
 <LabelTextId>5899</LabelTextId>   <!--  5899 => "Low Ambient Temperature"  -->
 <EventDefn>
  <DataId>4906</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4907</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_highAmbientTemperature</ProgrammaticName>
 <EngineeringDescription>The system has detected a high ambient temperature condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the ambient temperature is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_ambientTemperatureHighGlobalThreshold or val_bstg_tmp_ambientTemperatureHighIndvThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_highAmbientTemperatureEnable. The latch/unlatch for this event is st_bstg_highAmbientTemperatureLatch. Alarm reporting for this event is configurable via st_bstg_highAmbientTemperatureAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highAmbientTemperature.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5902</DescriptionTextId>   <!--  5902 => "The system has detected a high ambient temperature condition."  -->
 <LabelTextId>5901</LabelTextId>   <!--  5901 => "High Ambient Temperature"  -->
 <EventDefn>
  <DataId>4907</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4908</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_lowOverallVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a low battery string overall voltage condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the overall voltage is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_overallVoltageLowThreshold. The enable/disable for this event is a local point st_bstg_lowOverallVoltageEnable. The latch/unlatch for this event is st_bstg_lowOverallVoltageLatch. Reporting for this event is configurable via st_bstg_lowOverallVoltageAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_lowOverallVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5904</DescriptionTextId>   <!--  5904 => "The system has detected a low battery string overall voltage condition."  -->
 <LabelTextId>5903</LabelTextId>   <!--  5903 => "Low Overall Voltage"  -->
 <EventDefn>
  <DataId>4908</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4909</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_highOverallVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a high battery string overall voltage condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the overall voltage is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_overallVoltageHighThreshold. The enable/disable for this event is a local point st_bstg_highOverallVoltageEnable. The latch/unlatch for this event is st_bstg_highOverallVoltageLatch. Reporting for this event is configurable via st_bstg_highOverallVoltageAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highOverallVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5906</DescriptionTextId>   <!--  5906 => "The system has detected a high battery string overall voltage condition."  -->
 <LabelTextId>5905</LabelTextId>   <!--  5905 => "High Overall Voltage"  -->
 <EventDefn>
  <DataId>4909</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4910</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_highStringCurrent</ProgrammaticName>
 <EngineeringDescription>The system has detected a high battery string current condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the current is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ec_stringCurrentHighThreshold. The enable/disable for this event is a local point st_bstg_highStringCurrentEnable. The latch/unlatch for this event is st_bstg_highStringCurrentLatch. Reporting for this event is configurable via st_bstg_highStringCurrentAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highStringCurrentContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5908</DescriptionTextId>   <!--  5908 => "The system has detected a high battery string current condition."  -->
 <LabelTextId>5907</LabelTextId>   <!--  5907 => "High Battery String Current"  -->
 <EventDefn>
  <DataId>4910</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4911</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_lowFloatCurrent</ProgrammaticName>
 <EngineeringDescription>The system has detected a low battery string float current condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the float current is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ec_floatCurrentLowThreshold. The enable/disable for this event is a local point st_bstg_lowFloatCurrentEnable. The latch/unlatch for this event is st_bstg_lowFloatCurrentLatch. Reporting for this event is configurable via st_bstg_lowFloatCurrentAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_lowFloatCurrentContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5910</DescriptionTextId>   <!--  5910 => "The system has detected a low battery string float current condition."  -->
 <LabelTextId>5909</LabelTextId>   <!--  5909 => "Low Battery String Float Current"  -->
 <EventDefn>
  <DataId>4911</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4912</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_highFloatCurrent</ProgrammaticName>
 <EngineeringDescription>The system has detected a high battery string float current condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the float current is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ec_floatCurrentHighThreshold. The enable/disable for this event is a local point st_bstg_highFloatCurrentEnable. The latch/unlatch for this event is st_bstg_highFloatCurrentLatch. Reporting for this event is configurable via st_bstg_highFloatCurrentAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highFloatCurrentContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5912</DescriptionTextId>   <!--  5912 => "The system has detected a high battery string float current condition."  -->
 <LabelTextId>5911</LabelTextId>   <!--  5911 => "High Battery String Float Current"  -->
 <EventDefn>
  <DataId>4912</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4913</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_highRippleCurrent</ProgrammaticName>
 <EngineeringDescription>The system has detected a high battery string ripple current condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the ripple current is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ec_rippleCurrentHighThreshold. The enable/disable for this event is a local point st_bstg_highRippleCurrentEnable. The latch/unlatch for this event is st_bstg_highRippleCurrentLatch. Reporting for this event is configurable via st_bstg_highRippleCurrentAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highRippleCurrentContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5914</DescriptionTextId>   <!--  5914 => "The system has detected a high battery string ripple current condition."  -->
 <LabelTextId>5913</LabelTextId>   <!--  5913 => "High Battery String Ripple Current"  -->
 <EventDefn>
  <DataId>4913</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4914</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_dischargeDetected</ProgrammaticName>
 <EngineeringDescription>The system has detected a battery string discharge condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears by comparing one or more measured parameters (current, voltage, etc.) against set trigger points. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ec_dischargeCurrentTrigger if current mode detection is used or val_bstg_ep_dischargeVoltageTrigger if voltage mode detection is used. The enable/disable for this event is a local point st_bstg_dischargeDetectedEnable. The latch/unlatch for this event is st_bstg_dischargeDetectedLatch. Reporting for this event is configurable via st_bstg_dischargeDetectedReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_dischargeDetectedContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5916</DescriptionTextId>   <!--  5916 => "The system has detected a battery string discharge condition."  -->
 <LabelTextId>5915</LabelTextId>   <!--  5915 => "Battery String Discharge Detected"  -->
 <EventDefn>
  <DataId>4914</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4915</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_dischargeMaxTimeExceeded</ProgrammaticName>
 <EngineeringDescription>The system has detected an excessive discharge time condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once battery string discharge ends. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tm_maxDischargeTimeAllowedThreshold. The enable/disable for this event is a local point st_bstg_dischargeMaxTimeExceededEnable. The latch/unlatch for this event is st_bstg_dischargeMaxTimeExceededLatch. Reporting for this event is configurable via st_bstg_dischargeMaxTimeExceededReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_dischargeMaxTimeExceededContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5918</DescriptionTextId>   <!--  5918 => "The system has detected an excessive discharge time condition."  -->
 <LabelTextId>5917</LabelTextId>   <!--  5917 => "Maximum Discharge Time Exceeded"  -->
 <EventDefn>
  <DataId>4915</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4916</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_dischargeLowOverallVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a low battery string overall voltage condition during a discharge. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the overall voltage is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_lowOverallVoltageDuringDischargeThreshold. The enable/disable for this event is a local point st_bstg_dischargeLowOverallVoltageEnable. The latch/unlatch for this event is st_bstg_dischargeLowOverallVoltageLatch. Reporting for this event is configurable via st_bstg_dischargeLowOverallVoltageReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_dischargeLowOverallVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5920</DescriptionTextId>   <!--  5920 => "The system has detected a low battery string overall voltage condition during a discharge."  -->
 <LabelTextId>5919</LabelTextId>   <!--  5919 => "Discharge Low Overall Voltage"  -->
 <EventDefn>
  <DataId>4916</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4917</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_dischargeLowCellVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a low cell voltage condition during a discharge. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell voltage is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_lowCellVoltageThresholdDuringDischarge. The enable/disable for this event is a local point st_bstg_dischargeLowCellVoltageEnable. The latch/unlatch for this event is st_bstg_dischargeLowCellVoltageLatch. Reporting for this event is configurable via st_bstg_dischargeLowCellVoltageReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_dischargeLowCellVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5922</DescriptionTextId>   <!--  5922 => "The system has detected a low cell voltage condition during a discharge."  -->
 <LabelTextId>5921</LabelTextId>   <!--  5921 => " Discharge Low Cell Voltage"  -->
 <EventDefn>
  <DataId>4917</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4918</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_DischargeHighStringCurrent</ProgrammaticName>
 <EngineeringDescription>The system has detected a high battery string current condition during a discharge. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the current is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ec_stringCurrentHighDuringDischargeThreshold. The enable/disable for this event is a local point st_bstg_DischargeHighStringCurrentEnable. The latch/unlatch for this event is st_bstg_DischargeHighStringCurrentLatch. Reporting for this event is configurable via st_bstg_DischargeHighStringCurrentReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_DischargeHighStringCurrentContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5924</DescriptionTextId>   <!--  5924 => "The system has detected a high battery string current condition during a discharge."  -->
 <LabelTextId>5923</LabelTextId>   <!--  5923 => "Discharge High Battery String Current"  -->
 <EventDefn>
  <DataId>4918</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4919</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_maxCellToCellTemperatureDeviationExceeded</ProgrammaticName>
 <EngineeringDescription>The system has detected an excessive cell to cell temperature deviation condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell to cell temperature difference is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_maxCellToCellTemperatureDeviationThreshold. The enable/disable for this event is a local point st_bstg_maxCellToCellTemperatureDeviationEnable. The latch/unlatch for this event is st_bstg_maxCellToCellTemperatureDeviationLatch. Reporting for this event is configurable via st_bstg_maxCellToCellTemperatureDeviationReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_maxCellToCellTemperatureDeviationContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5926</DescriptionTextId>   <!--  5926 => "The system has detected an excessive cell to cell temperature deviation condition."  -->
 <LabelTextId>5925</LabelTextId>   <!--  5925 => "Excessive Cell to Cell Temperature Deviation"  -->
 <EventDefn>
  <DataId>4919</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4920</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_maxCellToAmbientTemperatureDeviationExceeded</ProgrammaticName>
 <EngineeringDescription>The system has detected an excessive cell to ambient temperature deviation condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell to ambient temperature difference is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_maxCellToAmbientTemperatureDeviationThreshold. The enable/disable for this event is a local point st_bstg_maxCellToAmbientTemperatureDeviationEnable. The latch/unlatch for this event is st_bstg_maxCellToAmbientTemperatureDeviationLatch. Reporting for this event is configurable via st_bstg_maxCellToAmbientTemperatureDeviationReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_maxCellToAmbientTemperatureDeviationContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5928</DescriptionTextId>   <!--  5928 => "The system has detected an excessive cell to ambient temperature deviation condition."  -->
 <LabelTextId>5927</LabelTextId>   <!--  5927 => "Excessive Cell to Ambient Temperature Deviation"  -->
 <EventDefn>
  <DataId>4920</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4921</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_ambientTemperatureLowGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string ambient temperature is below this global threshold a low ambient temperature event is triggered; see evt_bstg_lowAmbientTemperature. The event remains active until the ambient temperature is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_bstg_tmp_ambientTemperatureLowIndvThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5930</DescriptionTextId>   <!--  5930 => "If the battery string ambient temperature is below this global threshold a low ambient temperature event is triggered."  -->
 <LabelTextId>5929</LabelTextId>   <!--  5929 => "Low Ambient Temperature Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4922</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_ambientTemperatureHighGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string ambient temperature is above this global threshold a high ambient temperature event is triggered; see evt_bstg_highAmbientTemperature. The event remains active until the ambient temperature is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_bstg_tmp_ambientTemperatureHighIndvThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5932</DescriptionTextId>   <!--  5932 => "If the battery string ambient temperature is above this global threshold a high ambient temperature event is triggered"  -->
 <LabelTextId>5931</LabelTextId>   <!--  5931 => "High Ambient Temperature Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4923</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_overallVoltageLowThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string overall voltage is below this value a low overall voltage event is triggered; see evt_bstg_lowOverallVoltage. The event remains active until the overall voltage is more than the threshold plus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5934</DescriptionTextId>   <!--  5934 => "If the battery string overall voltage is below this value a low overall voltage event is triggered"  -->
 <LabelTextId>5933</LabelTextId>   <!--  5933 => "Battery String Overall Voltage Low Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4924</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_overallVoltageHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string overall voltage is above this value a high overall voltage event is triggered; see evt_bstg_highOverallVoltage. The event remains active until the overall voltage is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5936</DescriptionTextId>   <!--  5936 => "If the battery string overall voltage is above this value a high overall voltage event is triggered."  -->
 <LabelTextId>5935</LabelTextId>   <!--  5935 => "Battery String Overall Voltage High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4925</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_stringCurrentHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string current is above this value a high string current event is triggered; see evt_bstg_highStringCurrent. The event remains active until the string current is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5938</DescriptionTextId>   <!--  5938 => "If the battery string current is above this value a high string current event is triggered."  -->
 <LabelTextId>5937</LabelTextId>   <!--  5937 => "Battery String Current High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4926</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_floatCurrentLowThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string float current is below this value a low float current event is triggered; see evt_bstg_lowFloatCurrent. The event remains active until the float current is more than the threshold plus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5940</DescriptionTextId>   <!--  5940 => "If the battery string float current is below this value a low float current event is triggered."  -->
 <LabelTextId>5939</LabelTextId>   <!--  5939 => "Battery String Float Current Low Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4927</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_floatCurrentHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string float current is above this value a high float current event is triggered; see evt_bstg_highFloatCurrent. The event remains active until the float current is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5942</DescriptionTextId>   <!--  5942 => "If the battery string float current is above this value a high float current event is triggered."  -->
 <LabelTextId>5941</LabelTextId>   <!--  5941 => "Battery String Float Current High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4928</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_rippleCurrentHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string ripple current is above this value a high ripple current event is triggered; see evt_bstg_highRippleCurrent. The event remains active until the ripple current is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5944</DescriptionTextId>   <!--  5944 => "If the battery string ripple current is above this value a high ripple current event is triggered."  -->
 <LabelTextId>5943</LabelTextId>   <!--  5943 => "Battery String Ripple Current High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4929</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_cellVoltageLowGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell voltage is below this global threshold a low cell voltage event is triggered; see evt_cell_lowCellVoltage. The event remains active until the cell voltage is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_ep_cellVoltageLowThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5946</DescriptionTextId>   <!--  5946 => "If the cell voltage is below this global threshold a low cell voltage event is triggered."  -->
 <LabelTextId>5945</LabelTextId>   <!--  5945 => "Cell Voltage Low Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4930</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_cellVoltageHighGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell voltage is above this global threshold a high cell voltage event is triggered; see evt_cell_highCellVoltage. The event remains active until the cell voltage is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_ep_cellVoltageHighThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5948</DescriptionTextId>   <!--  5948 => "If the cell voltage is above this global threshold a high cell voltage event is triggered."  -->
 <LabelTextId>5947</LabelTextId>   <!--  5947 => "Cell Voltage High Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4931</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_cellTemperatureLowGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell temperature is below this global threshold a low cell temperature event is triggered; see evt_cell_lowCellTemperature. The event remains active until the cell temperature is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_tmp_cellTemperatureLowThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5950</DescriptionTextId>   <!--  5950 => "If the cell temperature is below this global threshold a low cell temperature event is triggered."  -->
 <LabelTextId>5949</LabelTextId>   <!--  5949 => "Cell Temperature Low Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4932</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_cellTemperatureHighGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell temperature is above this global threshold a high cell temperature event is triggered; see evt_cell_highCellTemperature. The event remains active until the cell temperature is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_tmp_cellTemperatureHighThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5952</DescriptionTextId>   <!--  5952 => "If the cell temperature is above this global threshold a high cell temperature event is triggered."  -->
 <LabelTextId>5951</LabelTextId>   <!--  5951 => "Cell Temperature High Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4933</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_internalResistanceLowGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the internal cell resistance is below this global threshold a low internal cell resistance event is triggered; see evt_cell_lowInternalCellResistance. The event remains active until the internal cell resistance is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_internalResistanceLowThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5954</DescriptionTextId>   <!--  5954 => "If the internal cell resistance is below this global threshold a low internal cell resistance event is triggered."  -->
 <LabelTextId>5953</LabelTextId>   <!--  5953 => "Internal Resistance Low Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4934</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_internalResistanceHighGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the internal cell resistance is above this global threshold a high internal cell resistance event is triggered; see evt_cell_highInternalCellResistance. The event remains active until the internal cell resistance is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_internalResistanceHighThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5956</DescriptionTextId>   <!--  5956 => "If the internal cell resistance is above this global threshold a high internal cell resistance event is triggered."  -->
 <LabelTextId>5955</LabelTextId>   <!--  5955 => "Internal Resistance High Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4935</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_interCellResistanceHighGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the intercell resistance is above this global threshold a high intercell resistance event is triggered; see evt_cell_highInterCellResistance. The event remains active until the intercell resistance is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_cell_interCellResistanceHighThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5958</DescriptionTextId>   <!--  5958 => "If the intercell resistance is above this global threshold a high intercell resistance event is triggered."  -->
 <LabelTextId>5957</LabelTextId>   <!--  5957 => "Intercell Resistance High Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4936</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_interTierResistanceHighGlobalThreshold</ProgrammaticName>
 <EngineeringDescription>If the intertier resistance is above this global threshold a high intertier resistance event is triggered; see evt_it_highInterTierResistance. The event remains active until the intertier resistance is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold is replaced by val_it_interTierResistanceHighThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5960</DescriptionTextId>   <!--  5960 => "If the intertier resistance is above this global threshold a high intertier resistance event is triggered."  -->
 <LabelTextId>5959</LabelTextId>   <!--  5959 => "Intertier Resistance High Global Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4937</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_maxCellToCellTemperatureDeviationThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell to cell temperature difference is above this value an excessive cell to cell temperature deviation event is triggered; see evt_bstg_maxCellToCellTemperatureDeviationExceeded. The event remains active until the cell to cell temperature difference is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5962</DescriptionTextId>   <!--  5962 => "If the cell to cell temperature difference is above this value an excessive cell to cell temperature deviation event is triggered."  -->
 <LabelTextId>5961</LabelTextId>   <!--  5961 => "Cell to Cell Temperature Deviation Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4938</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tmp_maxCellToAmbientTemperatureDeviationThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell to ambient temperature difference is above this value an excessive cell to ambient temperature deviation event is triggered; see evt_bstg_maxCellToAmbientTemperatureDeviationExceeded. The event remains active until the cell to ambient temperature difference is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5964</DescriptionTextId>   <!--  5964 => "If the cell to ambient temperature difference is above this value an excessive cell to ambient temperature deviation event is triggered"  -->
 <LabelTextId>5963</LabelTextId>   <!--  5963 => "Cell to Ambient Temperature Deviation Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4939</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_stringName</ProgrammaticName>
 <EngineeringDescription>A name to uniquely identify the battery string. Assigned by client.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5966</DescriptionTextId>   <!--  5966 => "A name to uniquely identify the battery string."  -->
 <LabelTextId>5965</LabelTextId>   <!--  5965 => "Battery String Name"  -->
 <TextDefn>
  <DataId>4939</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4940</DataId>
 <DefnType>TimeDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tm_installationDate</ProgrammaticName>
 <EngineeringDescription>Installation date of battery string.  Assigned by client.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5968</DescriptionTextId>   <!--  5968 => "Installation date of battery string"  -->
 <LabelTextId>5967</LabelTextId>   <!--  5967 => "Installation Date"  -->
 <TimeDefn>
  <DataId>4940</DataId>
  <Epoch_Id>0</Epoch_Id>  <!-- FDM Spec. indicates that the default is 0 .. the FDM may override -->
 </TimeDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4941</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_cellMonoblocModelNumber</ProgrammaticName>
 <EngineeringDescription>Model Number of the Cell/Monobloc. Assigned by client.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5970</DescriptionTextId>   <!--  5970 => "Model Number of the Cell/Monobloc"  -->
 <LabelTextId>5969</LabelTextId>   <!--  5969 => "Cell/Monobloc Model Number"  -->
 <TextDefn>
  <DataId>4941</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4942</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_cellMonoblocManufacturer</ProgrammaticName>
 <EngineeringDescription>Manufacturer of the Cell/Monobloc. Assigned by client.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5972</DescriptionTextId>   <!--  5972 => "Manufacturer of the Cell/Monobloc."  -->
 <LabelTextId>5971</LabelTextId>   <!--  5971 => "Cell/Monobloc Manufacturer"  -->
 <TextDefn>
  <DataId>4942</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4943</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_cellMonoblocRating</ProgrammaticName>
 <EngineeringDescription>Name plate capacity rating of the Cell/Monobloc. Assigned by client.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5974</DescriptionTextId>   <!--  5974 => "Name plate capacity rating of the Cell/Monobloc."  -->
 <LabelTextId>5973</LabelTextId>   <!--  5973 => "Cell/Monobloc Rating"  -->
 <NumericDefn>
  <MeasureBaseId>12</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4944</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_bstg_dischargeStatus</ProgrammaticName>
 <EngineeringDescription>Current discharge state of battery string - either in progress (indicating an active discharge condition) or not in progress (indicating a discharge is not active).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5976</DescriptionTextId>   <!--  5976 => "Current discharge state of battery string."  -->
 <LabelTextId>5975</LabelTextId>   <!--  5975 => "Discharge State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4141</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4945</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tm_stringTimeToGo</ProgrammaticName>
 <EngineeringDescription>Time remaining (time-to-go) of battery string during a discharge (the estimated remaining time that the battery string can deliver power at the present discharge rate). Unavailable if battery string is not in discharge.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5980</DescriptionTextId>   <!--  5980 => "Time remaining (time-to-go) of battery string during a discharge."  -->
 <LabelTextId>5979</LabelTextId>   <!--  5979 => "Battery String Time-To-Go"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4946</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ampHoursRemainingOnString</ProgrammaticName>
 <EngineeringDescription>Capacity (Amp-Hours) remaining in battery string.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5982</DescriptionTextId>   <!--  5982 => "Capacity (Amp-Hours) remaining in battery string."  -->
 <LabelTextId>5981</LabelTextId>   <!--  5981 => "Amp-Hours Remaining in Battery String."  -->
 <NumericDefn>
  <MeasureBaseId>12</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4947</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tm_discharge</ProgrammaticName>
 <EngineeringDescription>Total time the battery string is in discharge.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5984</DescriptionTextId>   <!--  5984 => "Total time the battery string is in discharge."  -->
 <LabelTextId>5983</LabelTextId>   <!--  5983 => "Battery String Discharge Time"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4948</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_lowCellVoltageDuringDischargeThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell voltage is below this value during a discharge a low cell voltage during discharge event is triggered; see evt_bstg_dischargeLowCellVoltage. The event remains active until the cell voltage is more than the threshold plus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5986</DescriptionTextId>   <!--  5986 => "If the cell voltage is below this value during a discharge a low cell voltage during discharge event is triggered."  -->
 <LabelTextId>5985</LabelTextId>   <!--  5985 => "Discharge Low Cell Voltage Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4949</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ep_lowOverallVoltageDuringDischargeThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string overall voltage is below this value during a discharge a low battery string overall voltage during discharge event is triggered; see evt_bstg_dischargeLowOverallVoltage. The event remains active until the battery string overall voltage is more than the threshold plus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5988</DescriptionTextId>   <!--  5988 => "If the battery string overall voltage is below this value during a discharge a low battery string overall voltage during discharge event is triggered."  -->
 <LabelTextId>5987</LabelTextId>   <!--  5987 => "Discharge Low Overall Voltage Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4950</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_ec_stringCurrentHighDuringDischargeThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string current is above this value during a discharge a high battery string current during discharge event is triggered; see evt_bstg_DischargeHighStringCurrent. The event remains active until the string current is less than the threshold minus hysteresis.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5990</DescriptionTextId>   <!--  5990 => "If the battery string current is above this value during a discharge a high battery string current during discharge event is triggered."  -->
 <LabelTextId>5989</LabelTextId>   <!--  5989 => "Discharge Battery String Current High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>14</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4951</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tm_maxDischargeTimeAllowedThreshold</ProgrammaticName>
 <EngineeringDescription>If the battery string is in discharge for a time greater than this value an excessive discharge time event is triggered; see evt_bstg_dischargeMaxTimeExceeded. The event remains active until the battery string discharge ends.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5992</DescriptionTextId>   <!--  5992 => "If the battery string is in discharge for a time greater than this value an excessive discharge time event is triggered."  -->
 <LabelTextId>5991</LabelTextId>   <!--  5991 => "Discharge Maximum Time"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4952</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupEngineerName</ProgrammaticName>
 <EngineeringDescription>The name of the engineer responsible for startup of the battery monitoring system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5994</DescriptionTextId>   <!--  5994 => "The name of the engineer responsible for startup of the battery monitoring system."  -->
 <LabelTextId>5993</LabelTextId>   <!--  5993 => "Startup Engineer's Name"  -->
 <TextDefn>
  <DataId>4952</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4953</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupCompanyName</ProgrammaticName>
 <EngineeringDescription>The name of the company responsible for startup of the battery monitoring system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5996</DescriptionTextId>   <!--  5996 => "The name of the company responsible for startup of the battery monitoring system."  -->
 <LabelTextId>5995</LabelTextId>   <!--  5995 => "Startup Company's Name"  -->
 <TextDefn>
  <DataId>4953</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4954</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupCompanyStreetAddress</ProgrammaticName>
 <EngineeringDescription>The street address of the company responsible for startup of the battery monitoring system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5998</DescriptionTextId>   <!--  5998 => "The street address of the company responsible for startup."  -->
 <LabelTextId>5997</LabelTextId>   <!--  5997 => "Startup Company's Street Address"  -->
 <TextDefn>
  <DataId>4954</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4955</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupCompanyCity</ProgrammaticName>
 <EngineeringDescription>The city where the company responsible for startup of the battery monitoring system is located.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6000</DescriptionTextId>   <!--  6000 => "The city where the company responsible for startup of the battery monitoring system is located."  -->
 <LabelTextId>5999</LabelTextId>   <!--  5999 => "Startup Company's City"  -->
 <TextDefn>
  <DataId>4955</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4956</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupCompanyState</ProgrammaticName>
 <EngineeringDescription>The state where the company responsible for startup of the battery monitoring system is located.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6002</DescriptionTextId>   <!--  6002 => "The state where the company responsible for startup of the battery monitoring system is located."  -->
 <LabelTextId>6001</LabelTextId>   <!--  6001 => "Startup Company's State."  -->
 <TextDefn>
  <DataId>4956</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4957</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupCompanyZipCode</ProgrammaticName>
 <EngineeringDescription>The ZIP code of the company responsible for startup of the battery monitoring system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6004</DescriptionTextId>   <!--  6004 => "The ZIP code of the company responsible for startup of the battery monitoring system."  -->
 <LabelTextId>6003</LabelTextId>   <!--  6003 => "Startup Company's ZIP Code"  -->
 <TextDefn>
  <DataId>4957</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4958</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupEngineerPhoneNumber</ProgrammaticName>
 <EngineeringDescription>Telephone number of the engineer responsible for startup of the battery monitoring system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6006</DescriptionTextId>   <!--  6006 => "Telephone number of the engineer responsible for startup of the battery monitoring system."  -->
 <LabelTextId>6005</LabelTextId>   <!--  6005 => "Startup Engineer's Phone Number"  -->
 <TextDefn>
  <DataId>4958</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4959</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startEngineerEMailAddress</ProgrammaticName>
 <EngineeringDescription>E-mail address of the engineer responsible for startup of the battery monitoring system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6008</DescriptionTextId>   <!--  6008 => "E-mail address of the engineer responsible for startup of the battery monitoring system."  -->
 <LabelTextId>6007</LabelTextId>   <!--  6007 => "Startup Engineer's E-mail Address"  -->
 <TextDefn>
  <DataId>4959</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4960</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_bstg_startupPOnumber</ProgrammaticName>
 <EngineeringDescription>Reference Purchase Order/Ticket Number for the battery monitoring system startup work.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6010</DescriptionTextId>   <!--  6010 => "Reference Purchase Order/Ticket Number for the battery monitoring system startup work."  -->
 <LabelTextId>6009</LabelTextId>   <!--  6009 => "Startup Purchase Order"  -->
 <TextDefn>
  <DataId>4960</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4961</DataId>
 <DefnType>TimeDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_bstg_tm_startupDate</ProgrammaticName>
 <EngineeringDescription>Startup date of monitoring system for this battery string.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6012</DescriptionTextId>   <!--  6012 => "Startup date of monitoring system for this battery string."  -->
 <LabelTextId>6011</LabelTextId>   <!--  6011 => "Startup Date."  -->
 <TimeDefn>
  <DataId>4961</DataId>
  <Epoch_Id>0</Epoch_Id>  <!-- FDM Spec. indicates that the default is 0 .. the FDM may override -->
 </TimeDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4962</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_ep_cellVoltage</ProgrammaticName>
 <EngineeringDescription>Voltage reading of a Cell within a BAM device.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6014</DescriptionTextId>   <!--  6014 => "Voltage reading of a Cell within a BAM device."  -->
 <LabelTextId>6013</LabelTextId>   <!--  6013 => "Cell Voltage"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4963</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_tmp_cellTemperature</ProgrammaticName>
 <EngineeringDescription>Temperature reading of a Cell within a BAM device.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6016</DescriptionTextId>   <!--  6016 => "Temperature reading of a Cell within a BAM device."  -->
 <LabelTextId>6015</LabelTextId>   <!--  6015 => "Cell Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4964</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_lowCellVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a low cell voltage condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell voltage is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_cellVoltageLowGlobalThreshold or val_cell_ep_cellVoltageLowThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_lowCellVoltageEnable. The latch/unlatch for this event is st_bstg_lowCellVoltageLatch. Reporting for this event is configurable via st_bstg_lowCellVoltageAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_lowCellVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6018</DescriptionTextId>   <!--  6018 => "The system has detected a low cell voltage condition."  -->
 <LabelTextId>6017</LabelTextId>   <!--  6017 => "Low Cell Voltage"  -->
 <EventDefn>
  <DataId>4964</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4965</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_highCellVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a high cell voltage condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell voltage is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_cellVoltageHighGlobalThreshold or val_cell_ep_cellVoltageHighThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_highCellVoltageEnable. The latch/unlatch for this event is st_bstg_highCellVoltageLatch. Reporting for this event is configurable via st_bstg_highCellVoltageAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highCellVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6020</DescriptionTextId>   <!--  6020 => "The system has detected a high cell voltage condition."  -->
 <LabelTextId>6019</LabelTextId>   <!--  6019 => "High Cell Voltage"  -->
 <EventDefn>
  <DataId>4965</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4966</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_lowCellTemperature</ProgrammaticName>
 <EngineeringDescription>The system has detected a low cell temperature condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell temperature is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_cellTemperatureLowGlobalThreshold or val_cell_tmp_cellTemperatureLowThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_lowCellTemperatureEnable. The latch/unlatch for this event is st_bstg_lowCellTemperatureLatch. Reporting for this event is configurable via st_bstg_lowCellTemperatureAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_lowCellTemperatureContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6022</DescriptionTextId>   <!--  6022 => "The system has detected a low cell temperature condition."  -->
 <LabelTextId>6021</LabelTextId>   <!--  6021 => "Low Cell Temperature"  -->
 <EventDefn>
  <DataId>4966</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4967</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_highCellTemperature</ProgrammaticName>
 <EngineeringDescription>The system has detected a high cell temperature condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell temperature is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_cellTemperatureHighGlobalThreshold or val_cell_tmp_cellTemperatureHighThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_highCellTemperatureEnable. The latch/unlatch for this event is st_bstg_highCellTemperatureLatch. Reporting for this event is configurable via st_bstg_highCellTemperatureAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highCellTemperatureContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6024</DescriptionTextId>   <!--  6024 => "The system has detected a high cell temperature condition."  -->
 <LabelTextId>6023</LabelTextId>   <!--  6023 => "High Cell Temperature"  -->
 <EventDefn>
  <DataId>4967</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4968</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_lowInternalCellResistance</ProgrammaticName>
 <EngineeringDescription>The system has detected a low internal resistance condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the internal resistance is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_internalResistanceLowGlobalThreshold or val_cell_internalResistanceLowThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_lowCellResistanceEnable. The latch/unlatch for this event is st_bstg_lowCellResistanceLatch. Reporting for this event is configurable via st_bstg_lowCellResistanceAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_lowCellResistanceContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6026</DescriptionTextId>   <!--  6026 => "The system has detected a low internal resistance condition."  -->
 <LabelTextId>6025</LabelTextId>   <!--  6025 => "Low Internal Resistance"  -->
 <EventDefn>
  <DataId>4968</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4969</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_highInternalCellResistance</ProgrammaticName>
 <EngineeringDescription>The system has detected a high internal resistance condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the internal resistance is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_internalResistanceHighGlobalThreshold or val_cell_internalResistanceHighThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_highCellResistanceEnable. The latch/unlatch for this event is st_bstg_highCellResistanceLatch. Reporting for this event is configurable via st_bstg_highCellResistanceAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highCellResistanceContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6028</DescriptionTextId>   <!--  6028 => "The system has detected a high internal resistance condition."  -->
 <LabelTextId>6027</LabelTextId>   <!--  6027 => "High Internal Resistance"  -->
 <EventDefn>
  <DataId>4969</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4970</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_highInterCellResistance</ProgrammaticName>
 <EngineeringDescription>The system has detected a high intercell resistance condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the intercell resistance is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_interCellResistanceHighGlobalThreshold or val_cell_interCellResistanceHighThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_highInterCellResistanceEnable. The latch/unlatch for this event is st_bstg_highInterCellResistanceLatch. Reporting for this event is configurable via st_bstg_highInterCellResistanceAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highInterCellResistanceContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6030</DescriptionTextId>   <!--  6030 => "The system has detected a high intercell resistance condition."  -->
 <LabelTextId>6029</LabelTextId>   <!--  6029 => "High Intercell Resistance"  -->
 <EventDefn>
  <DataId>4970</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4971</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_ep_cellVoltageLowThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell voltage is below this value a low cell voltage event is triggered; see evt_cell_lowCellVoltage. The event remains active until the cell voltage is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_ep_cellVoltageLowGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6032</DescriptionTextId>   <!--  6032 => "If the cell voltage is below this value a low cell voltage event is triggered"  -->
 <LabelTextId>6031</LabelTextId>   <!--  6031 => "Cell Voltage Low Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4972</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_ep_cellVoltageHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell voltage is above this value a high cell voltage event is triggered; see evt_cell_highCellVoltage. The event remains active until the cell voltage is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_ep_cellVoltageHighGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6034</DescriptionTextId>   <!--  6034 => "If the cell voltage is above this value a high cell voltage event is triggered"  -->
 <LabelTextId>6033</LabelTextId>   <!--  6033 => "Cell Voltage High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>13</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4973</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_tmp_cellTemperatureLowThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell temperature is below this value a low cell temperature event is triggered; see evt_cell_lowCellTemperature. The event remains active until the cell temperature is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_tmp_cellTemperatureLowGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6036</DescriptionTextId>   <!--  6036 => "If the cell temperature is below this value a low cell temperature event is triggered."  -->
 <LabelTextId>6035</LabelTextId>   <!--  6035 => "Cell Temperature Low Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4974</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_tmp_cellTemperatureHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the cell temperature is above this value a high cell temperature event is triggered; see evt_cell_highCellTemperature. The event remains active until the cell temperature is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_tmp_cellTemperatureHighGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6038</DescriptionTextId>   <!--  6038 => "If the cell temperature is above this value a high cell temperature event is triggered."  -->
 <LabelTextId>6037</LabelTextId>   <!--  6037 => "Cell Temperature High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4975</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_internalResistanceLowThreshold</ProgrammaticName>
 <EngineeringDescription>If the internal cell resistance is below this value a low internal cell resistance event is triggered; see evt_cell_lowInternalCellResistance. The event remains active until the internal cell resistance is more than the threshold plus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_internalResistanceLowGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6040</DescriptionTextId>   <!--  6040 => "If the internal cell resistance is below this value a low internal cell resistance event is triggered."  -->
 <LabelTextId>6039</LabelTextId>   <!--  6039 => "Internal Resistance Low Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4976</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_internalResistanceHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the internal cell resistance is above this value a high internal cell resistance event is triggered; see evt_cell_highInternalCellResistance. The event remains active until the internal cell resistance is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_internalResistanceHighGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6042</DescriptionTextId>   <!--  6042 => "If the internal cell resistance is above this value a high internal cell resistance event is triggered."  -->
 <LabelTextId>6041</LabelTextId>   <!--  6041 => "Internal Resistance High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4977</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_interCellResistanceHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the intercell resistance is above this value a high intercell resistance event is triggered; see evt_cell_highInterCellResistance. The event remains active until the intercell resistance is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_interCellResistanceHighGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6044</DescriptionTextId>   <!--  6044 => "If the intercell resistance is above this value a high intercell resistance event is triggered."  -->
 <LabelTextId>6043</LabelTextId>   <!--  6043 => "Intercell Resistance High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4978</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_it_highInterTierResistance</ProgrammaticName>
 <EngineeringDescription>The system has detected a high intertier resistance condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the intertier resistance is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_interTierResistanceHighGlobalThreshold or val_it_interTierResistanceHighThreshold if Individual Threshold is enabled. The enable/disable for this event is a local point st_bstg_highInterTierResistanceEnable. The latch/unlatch for this event is st_bstg_highInterTierResistanceLatch. Reporting for this event is configurable via st_bstg_highInterTierResistanceAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_highInterTierResistanceContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6046</DescriptionTextId>   <!--  6046 => "The system has detected a high intertier resistance condition."  -->
 <LabelTextId>6045</LabelTextId>   <!--  6045 => "Intertier Resistance High"  -->
 <EventDefn>
  <DataId>4978</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4979</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_it_interTierResistanceHighThreshold</ProgrammaticName>
 <EngineeringDescription>If the intertier resistance is above this value a high intertier resistance event is triggered; see evt_it_highInterTierResistance. The event remains active until the intertier resistance is less than the threshold minus hysteresis.

ALBER BDSU SPECIFIC: This threshold replaces val_bstg_interTierResistanceHighGlobalThreshold if Individual Threshold is enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6048</DescriptionTextId>   <!--  6048 => "If the intertier resistance is above this value a high intertier resistance event is triggered."  -->
 <LabelTextId>6047</LabelTextId>   <!--  6047 => "Intertier Resistance High Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_XPCray.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>4980</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_flowLossSupplyCW</ProgrammaticName>
 <EngineeringDescription>Supply chilled water flow is too low.  The event is deactivated when flow is re-established.

iCOM Specific - This is the chilled water being supplied TO this unit for use in heat rejection.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WALC</EngineeringReference>
 <DescriptionTextId>6050</DescriptionTextId>   <!--  6050 => "Supply chilled water flow is too low."  -->
 <LabelTextId>6049</LabelTextId>   <!--  6049 => "Supply Chilled Water Loss of Flow"  -->
 <EventDefn>
  <DataId>4980</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4981</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supRfgSetPt</ProgrammaticName>
 <EngineeringDescription>Desired supply refrigerant temperature.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_REFTEMPSET</EngineeringReference>
 <DescriptionTextId>6052</DescriptionTextId>   <!--  6052 => "Desired supply refrigerant temperature."  -->
 <LabelTextId>6051</LabelTextId>   <!--  6051 => "Supply Refrig Temp Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4982</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supRfgBand1</ProgrammaticName>
 <EngineeringDescription>Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point].

If [Supply Refrigerant Temperature] is greater than the upper threshold, a [Supply Refrig Over Temp Band 1] event is generated.

If [Supply Refrigerant Temperature] is less than the lower threshold, a [Supply Refrig Under Temp Band 1] event is generated.

Example :
[Supply Refrig Temp Set Point] is set to 50 degrees.
[Supply Refrig Temp Band 1] is set to 4 degrees.
If [Supply Refrigerant Temperature] is greater than 52 degrees, a [Supply Refrig Over Temp Band 1] event is generated.
If [Supply Refrigerant Temperature] is less than 48 degrees, a [Supply Refrig Under Temp Band 1] event is generated.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RT_BAND1</EngineeringReference>
 <DescriptionTextId>6054</DescriptionTextId>   <!--  6054 => "Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point]."  -->
 <LabelTextId>6053</LabelTextId>   <!--  6053 => "Supply Refrig Temp Band 1"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4983</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupRfgOverBand1</ProgrammaticName>
 <EngineeringDescription>[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 1].  The event is deactivated when the temperature is below the upper threshold.

Temperature band value is specified by val_clng_tmp_supRfgBand1.
Value used in comparison against band limits is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgOverBandEnbl_1
st_clng_tmpSupRfgOverBandType1

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HILMTB1</EngineeringReference>
 <DescriptionTextId>6056</DescriptionTextId>   <!--  6056 => "[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 1]."  -->
 <LabelTextId>6055</LabelTextId>   <!--  6055 => "Supply Refrig Over Temp Band 1"  -->
 <EventDefn>
  <DataId>4983</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4984</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgOverBandEnbl_1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrig Over Temp Band 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgOverBand1.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_115</EngineeringReference>
 <DescriptionTextId>6058</DescriptionTextId>   <!--  6058 => "Enable/disable the activation of the [Supply Refrig Over Temp Band 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6057</LabelTextId>   <!--  6057 => "Supply Refrig Over Temp Band 1 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4985</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgOverBandType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrig Over Temp Band 1] event.
Event types are message, warning, alarm, and fault.
See event evt_clng_tmpSupRfgOverBand1.

iCOM specific:
iCOM only supports message, warning, and alarm.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HILMTB1_et</EngineeringReference>
 <DescriptionTextId>6060</DescriptionTextId>   <!--  6060 => "The event type for the [Supply Refrig Over Temp Band 1] event."  -->
 <LabelTextId>6059</LabelTextId>   <!--  6059 => "Supply Refrig Over Temp Band 1 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4986</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupRfgUnderBand1</ProgrammaticName>
 <EngineeringDescription>[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 1].  The event is deactivated when the temperature is above the lower threshold.

Temperature band value is specified by val_clng_tmp_supRfgBand1.
Value used in comparison against band limits is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgUnderBandEnbl_1
st_clng_tmpSupRfgUnderBandType1

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_LOLMTB1</EngineeringReference>
 <DescriptionTextId>6062</DescriptionTextId>   <!--  6062 => "[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 1]."  -->
 <LabelTextId>6061</LabelTextId>   <!--  6061 => "Supply Refrig Under Temp Band 1"  -->
 <EventDefn>
  <DataId>4986</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4987</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgUnderBandEnbl_1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrig Under Temp Band 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgUnderBand1.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_116</EngineeringReference>
 <DescriptionTextId>6064</DescriptionTextId>   <!--  6064 => "Enable/disable the activation of the [Supply Refrig Under Temp Band 1] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6063</LabelTextId>   <!--  6063 => "Supply Refrig Under Temp Band 1 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4988</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgUnderBandType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrig Under Temp Band 1] event.
Event types are message, warning, alarm, and fault.
See event evt_clng_tmpSupRfgUnderBand1.

iCOM specific:
iCOM only supports message, warning, and alarm.
iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_LOLMTB1_et</EngineeringReference>
 <DescriptionTextId>6066</DescriptionTextId>   <!--  6066 => "The event type for the [Supply Refrig Under Temp Band 1] event."  -->
 <LabelTextId>6065</LabelTextId>   <!--  6065 => "Supply Refrig Under Temp Band 1 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4989</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supRfgBand2</ProgrammaticName>
 <EngineeringDescription>Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point].

If [Supply Refrigerant Temperature] is greater than the upper threshold, a [Supply Refrig Over Temp Band 2] event is generated.

If [Supply Refrigerant Temperature] is less than the lower threshold, a [Supply Refrig Under Temp Band 2] event is generated.

Example :
[Supply Refrig Temp Set Point] is set to 50 degrees.
[Supply Refrig Temp Band 2] is set to 4 degrees.
If [Supply Refrigerant Temperature] is greater than 52 degrees, a [Supply Refrig Over Temp Band 2] event is generated.
If [Supply Refrigerant Temperature] is less than 48 degrees, a [Supply Refrig Under Temp Band 2] event is generated.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RT_BAND2</EngineeringReference>
 <DescriptionTextId>6068</DescriptionTextId>   <!--  6068 => "Value that is divided evenly to form an upper and lower threshold around [Supply Refrig Temp Set Point]."  -->
 <LabelTextId>6067</LabelTextId>   <!--  6067 => "Supply Refrig Temp Band 2"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4990</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupRfgOverBand2</ProgrammaticName>
 <EngineeringDescription>[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 2].  The event is deactivated when the temperature is below the upper threshold.

Temperature band value is specified by val_clng_tmp_supRfgBand2.
Value used in comparison against band limits is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgOverBandEnbl_2
st_clng_tmpSupRfgOverBandType2

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HILMTB2</EngineeringReference>
 <DescriptionTextId>6070</DescriptionTextId>   <!--  6070 => "[Supply Refrigerant Temperature] is above the upper threshold specified by [Supply Refrig Temp Band 2]."  -->
 <LabelTextId>6069</LabelTextId>   <!--  6069 => "Supply Refrig Over Temp Band 2"  -->
 <EventDefn>
  <DataId>4990</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4991</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgOverBandEnbl_2</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrig Over Temp Band 2] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgOverBand2.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_117</EngineeringReference>
 <DescriptionTextId>6072</DescriptionTextId>   <!--  6072 => "Enable/disable the activation of the [Supply Refrig Over Temp Band 2] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6071</LabelTextId>   <!--  6071 => "Supply Refrig Over Temp Band 2 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4992</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgOverBandType2</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrig Over Temp Band 2] event.
Event types are message, warning, alarm, and fault.
See event evt_clng_tmpSupRfgOverBand2.

iCOM specific:
iCOM only supports message, warning, and alarm.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HILMTB2_et</EngineeringReference>
 <DescriptionTextId>6074</DescriptionTextId>   <!--  6074 => "The event type for the [Supply Refrig Over Temp Band 2] event."  -->
 <LabelTextId>6073</LabelTextId>   <!--  6073 => "Supply Refrig Over Temp Band 2 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4993</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpSupRfgUnderBand2</ProgrammaticName>
 <EngineeringDescription>[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 2].  The event is deactivated when the temperature is above the lower threshold.

Temperature band value is specified by val_clng_tmp_supRfgBand2.
Value used in comparison against band limits is specified in val_clng_tmp_supRfg.

The behavior of this event may optionally be modified by:
st_clng_tmpSupRfgUnderBandEnbl_2
st_clng_tmpSupRfgUnderBandType2

iCOM specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_LOLMTB2</EngineeringReference>
 <DescriptionTextId>6076</DescriptionTextId>   <!--  6076 => "[Supply Refrigerant Temperature] is below the lower threshold specified by [Supply Refrig Temp Band 2]."  -->
 <LabelTextId>6075</LabelTextId>   <!--  6075 => "Supply Refrig Under Temp Band 2"  -->
 <EventDefn>
  <DataId>4993</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4994</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgUnderBandEnbl_2</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Refrig Under Temp Band 2] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_clng_tmpSupRfgUnderBand2.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_118</EngineeringReference>
 <DescriptionTextId>6078</DescriptionTextId>   <!--  6078 => "Enable/disable the activation of the [Supply Refrig Under Temp Band 2] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6077</LabelTextId>   <!--  6077 => "Supply Refrig Under Temp Band 2 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4995</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpSupRfgUnderBandType2</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Refrig Under Temp Band 2] event.
Event types are message, warning, alarm, and fault.
See event evt_clng_tmpSupRfgUnderBand2.

iCOM specific:
iCOM only supports message, warning, and alarm.

iCOM Specific - This is the refrigerant being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_LOLMTB2_et</EngineeringReference>
 <DescriptionTextId>6080</DescriptionTextId>   <!--  6080 => "The event type for the [Supply Refrig Under Temp Band 2] event."  -->
 <LabelTextId>6079</LabelTextId>   <!--  6079 => "Supply Refrig Under Temp Band 2 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4996</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_inverterShortCycle1</ProgrammaticName>
 <EngineeringDescription>Inverter for pump 1 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period.  The event is automatically deactivated after a certain time period has expired.

The behavior of this event may optionally be modified by:
st_pump_inverterShortCycleEnable1
st_pump_inverterShortCycleType1

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ME_SHCYCI1</EngineeringReference>
 <DescriptionTextId>6082</DescriptionTextId>   <!--  6082 => "Inverter for pump 1 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period."  -->
 <LabelTextId>6081</LabelTextId>   <!--  6081 => "Inverter 1 Short Cycle"  -->
 <EventDefn>
  <DataId>4996</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4997</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_inverterShortCycleEnable1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Inverter 1 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_pump_inverterShortCycle1.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_119</EngineeringReference>
 <DescriptionTextId>6084</DescriptionTextId>   <!--  6084 => "Enable/disable the activation of the [Inverter 1 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6083</LabelTextId>   <!--  6083 => "Inverter 1 Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4998</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_inverterShortCycleType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Inverter 1 Short Cycle] event.
Event types are message, warning, alarm, and fault.
See event evt_pump_inverterShortCycle1.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ME_SHCYCI1_et</EngineeringReference>
 <DescriptionTextId>6086</DescriptionTextId>   <!--  6086 => "The event type for the [Inverter 1 Short Cycle] event."  -->
 <LabelTextId>6085</LabelTextId>   <!--  6085 => "Inverter 1 Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>4999</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_inverterShortCycle2</ProgrammaticName>
 <EngineeringDescription>Inverter for pump 2 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period.  The event is automatically deactivated after a certain time period has expired.

The behavior of this event may optionally be modified by:
st_pump_inverterShortCycleEnable2
st_pump_inverterShortCycleType2

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ME_SHCYCI2</EngineeringReference>
 <DescriptionTextId>6088</DescriptionTextId>   <!--  6088 => "Inverter for pump 2 has short cycled and is temporarily locked out from further operation to protect from thermal overload.  A short cycle is defined as powering on and off a number of times over a set time period."  -->
 <LabelTextId>6087</LabelTextId>   <!--  6087 => "Inverter 2 Short Cycle"  -->
 <EventDefn>
  <DataId>4999</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5000</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_inverterShortCycleEnable2</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Inverter 2 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_pump_inverterShortCycle2.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_120</EngineeringReference>
 <DescriptionTextId>6090</DescriptionTextId>   <!--  6090 => "Enable/disable the activation of the [Inverter 2 Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6089</LabelTextId>   <!--  6089 => "Inverter 2 Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5001</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pump_inverterShortCycleType2</ProgrammaticName>
 <EngineeringDescription>The event type for the [Inverter 2 Short Cycle] event.
Event types are message, warning, alarm, and fault.
See event evt_pump_inverterShortCycle2.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ME_SHCYCI2_et</EngineeringReference>
 <DescriptionTextId>6092</DescriptionTextId>   <!--  6092 => "The event type for the [Inverter 2 Short Cycle] event."  -->
 <LabelTextId>6091</LabelTextId>   <!--  6091 => "Inverter 2 Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_CR.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5002</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airSupply</ProgrammaticName>
 <EngineeringDescription>Air temperature measured at the outlet of the unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_PTC_SUP_TE</EngineeringReference>
 <DescriptionTextId>6094</DescriptionTextId>   <!--  6094 => "Air temperature measured at the outlet of the unit."  -->
 <LabelTextId>6093</LabelTextId>   <!--  6093 => "Supply Air Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5003</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Deprecated</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airRet</ProgrammaticName>
 <EngineeringDescription>DON'T USE this point, use val_sys_temp_inletAir.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HT_TEMP</EngineeringReference>
 <DescriptionTextId>6096</DescriptionTextId>   <!--  6096 => "Air temperature measured at the inlet of the unit."  -->
 <LabelTextId>6095</LabelTextId>   <!--  6095 => "Return Air Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5004</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_dewPntRet</ProgrammaticName>
 <EngineeringDescription>Dew point temperature measured at the inlet of the unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HT_DEW</EngineeringReference>
 <DescriptionTextId>6098</DescriptionTextId>   <!--  6098 => "Dew point temperature measured at the inlet of the unit."  -->
 <LabelTextId>6097</LabelTextId>   <!--  6097 => "Return Dew Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5005</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_remSnsrMin</ProgrammaticName>
 <EngineeringDescription>Minimum value of remote sensor temperature measurements.

iCOM Specific: Only sensors that are set to 'Control' in st_ext_remSnsrFunc will be included in this calculation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RACKTE_MIN</EngineeringReference>
 <DescriptionTextId>6100</DescriptionTextId>   <!--  6100 => "Minimum value of remote sensor temperature measurements."  -->
 <LabelTextId>6099</LabelTextId>   <!--  6099 => "Remote Sensor Minimum Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5006</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_remSnsrMax</ProgrammaticName>
 <EngineeringDescription>Maximum value of remote sensor temperature measurements.

iCOM Specific: Only sensors that are set to 'Control' in st_ext_remSnsrFunc will be included in this calculation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RACKTE_MAX</EngineeringReference>
 <DescriptionTextId>6102</DescriptionTextId>   <!--  6102 => "Maximum value of remote sensor temperature measurements."  -->
 <LabelTextId>6101</LabelTextId>   <!--  6101 => "Remote Sensor Maximum Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5007</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_remSnsrAvg</ProgrammaticName>
 <EngineeringDescription>Average value of remote sensor temperature measurements.

iCOM Specific: Only sensors that are set to 'Control' in st_ext_remSnsrFunc will be included in this calculation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RACKTE_AVG</EngineeringReference>
 <DescriptionTextId>6104</DescriptionTextId>   <!--  6104 => "Average value of remote sensor temperature measurements."  -->
 <LabelTextId>6103</LabelTextId>   <!--  6103 => "Remote Sensor Average Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5008</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airSetPt</ProgrammaticName>
 <EngineeringDescription>Desired air temperature.

iCOM Specific: This value will be used as a comparison against sensor temperature measurements in order to determine the amount of cooling or heating required.  The sensor is selectable and includes remote, supply (outlet), and return (inlet) temperature sensor.
See st_sys_tmpSnsrAirControl</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPSET</EngineeringReference>
 <DescriptionTextId>6106</DescriptionTextId>   <!--  6106 => "Desired air temperature."  -->
 <LabelTextId>6105</LabelTextId>   <!--  6105 => "Air Temperature Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5009</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airCoolingPropBand</ProgrammaticName>
 <EngineeringDescription>Temperature control band above [Air Temperature Set Point].  If measured air temperature is within this band, cooling operations are proportionally controlled.

Non-zero values of [Air Temperature Dead Band] will shift this control band away from the set point (see val_sys_tmp_airDeadBand).

Example 1:
[Air Temperature Set Point] is set to 70 degrees.
[Cooling Proportional Band] is set to 8 degrees.
[Air Temperature Dead Band] is set to 0 degrees.
When measured air temperature is between 70 and 78 degrees, the unit will perform proportional cooling operations.

Example 2: See val_sys_tmp_airDeadBand</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPPROP</EngineeringReference>
 <DescriptionTextId>6108</DescriptionTextId>   <!--  6108 => "Temperature control band above [Air Temperature Set Point].  If measured air temperature is within this band, cooling operations are proportionally controlled."  -->
 <LabelTextId>6107</LabelTextId>   <!--  6107 => "Cooling Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5010</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airHeatingPropBand</ProgrammaticName>
 <EngineeringDescription>Temperature control band below [Air Temperature Set Point].  If measured air temperature is within this band, heating operations are proportionally controlled.

Non-zero values of [Air Temperature Dead Band] will shift this control band away from the set point (see val_sys_tmp_airDeadBand).

Example 1:
[Air Temperature Set Point] is set to 70 degrees.
[Heating Proportional Band] is set to 8 degrees.
[Air Temperature Dead Band] is set to 0 degrees.
When measured air temperature is between 62 and 70 degrees, the unit will perform proportional heating operations.

Example 2: See val_sys_tmp_airDeadBand</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPPROP</EngineeringReference>
 <DescriptionTextId>6110</DescriptionTextId>   <!--  6110 => "Temperature control band below [Air Temperature Set Point].  If measured air temperature is within this band, heating operations are proportionally controlled."  -->
 <LabelTextId>6109</LabelTextId>   <!--  6109 => "Heating Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5011</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airDeadBand</ProgrammaticName>
 <EngineeringDescription>Value that is divided evenly to form a temperature range above and below [Air Temperature Set Point].  If measured air temperature is within this range, no heating or cooling will occur.

Example 1:
[Air Temperature Set Point] is set to 70 degrees.
[Cooling Proportional Band] is set to 6 degrees.
[Heating Proportional Band] is set to 6 degrees.
[Air Temperature Dead Band] is set to 2 degrees.

When measured air temperature is between 69 and 71 degrees, no heating or cooling will occur.
When measured air temperature is between 71 and 77 degrees, the unit will perform proportional cooling operations.
When measured air temperature is between 63 and 69 degrees, the unit will perform proportional heating operations.

See val_sys_tmp_airCoolingPropBand, val_sys_tmp_airHeatingPropBand, and val_sys_tmp_airPropBand for other examples.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HEAT_DEADB</EngineeringReference>
 <DescriptionTextId>6112</DescriptionTextId>   <!--  6112 => "Value that is divided evenly to form a temperature range above and below [Air Temperature Set Point].  If measured air temperature is within this range, no heating or cooling will occur."  -->
 <LabelTextId>6111</LabelTextId>   <!--  6111 => "Air Temperature Dead Band"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5012</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpSnsrAirControl</ProgrammaticName>
 <EngineeringDescription>Sensor from which air temperature measurements will be used for cooling and heating control.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPSENSTY</EngineeringReference>
 <DescriptionTextId>6114</DescriptionTextId>   <!--  6114 => "Sensor from which air temperature measurements will be used for cooling and heating control. "  -->
 <LabelTextId>6113</LabelTextId>   <!--  6113 => "Air Temperature Control Sensor"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4142</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5013</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_tmpRemSnsrCalc</ProgrammaticName>
 <EngineeringDescription>Calculation method applied to temperature readings from the remote sensors to determine a single temperature measurement value for cooling and heating control.

iCOM Specific: This value is used for control purposes only when st_sys_tmpSnsrAirControl is set to 'Remote Sensor'.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CRR_CO_MAX</EngineeringReference>
 <DescriptionTextId>6119</DescriptionTextId>   <!--  6119 => "Calculation method applied to temperature readings from the remote sensors to determine a single temperature measurement value for cooling and heating control."  -->
 <LabelTextId>6118</LabelTextId>   <!--  6118 => "Remote Sensor Temperature Calculation"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4143</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5014</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airSupplyOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Supply Air Over Temperature] event.
See event evt_sys_tmpAirSupplyOver.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HITEMP</EngineeringReference>
 <DescriptionTextId>6123</DescriptionTextId>   <!--  6123 => "Threshold value used in the [Supply Air Over Temperature] event."  -->
 <LabelTextId>6122</LabelTextId>   <!--  6122 => "Supply Air Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5015</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_tmpAirSupplyOver</ProgrammaticName>
 <EngineeringDescription>[Supply Air Temperature] has exceeded [Supply Air Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_sys_tmp_airSupplyOverThrshld.
Value used in comparison against threshold is specified in val_sys_tmp_airSupply.

The behavior of this event may optionally be modified by:
st_sys_tmpAirSupplyOverEnable
st_sys_tmpAirSupplyOverType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_HISUPTE</EngineeringReference>
 <DescriptionTextId>6125</DescriptionTextId>   <!--  6125 => "[Supply Air Temperature] has exceeded [Supply Air Over Temp Threshold]."  -->
 <LabelTextId>6124</LabelTextId>   <!--  6124 => "Supply Air Over Temperature"  -->
 <EventDefn>
  <DataId>5015</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5016</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirSupplyOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Air Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_tmpAirSupplyOver.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6127</DescriptionTextId>   <!--  6127 => "Enable/disable the activation of the [Supply Air Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6126</LabelTextId>   <!--  6126 => "Supply Air Over Temperature - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5017</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirSupplyOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Air Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_tmpAirSupplyOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6129</DescriptionTextId>   <!--  6129 => "The event type for the [Supply Air Over Temperature] event."  -->
 <LabelTextId>6128</LabelTextId>   <!--  6128 => "Supply Air Over Temperature - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5018</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airSupplyUnderThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Supply Air Under Temperature] event.
See event evt_sys_tmpAirSupplyUnder.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LOTEMP</EngineeringReference>
 <DescriptionTextId>6131</DescriptionTextId>   <!--  6131 => "Threshold value used in the [Supply Air Under Temperature] event."  -->
 <LabelTextId>6130</LabelTextId>   <!--  6130 => "Supply Air Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5019</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_tmpAirSupplyUnder</ProgrammaticName>
 <EngineeringDescription>[Supply Air Temperature] has dropped below [Supply Air Under Temp Threshold].  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_sys_tmp_airSupplyUnderThrshld.
Value used in comparison against threshold is specified in val_sys_tmp_airSupply.

The behavior of this event may optionally be modified by:
st_sys_tmpAirSupplyUnderEnable
st_sys_tmpAirSupplyUnderType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_LOSUPTE</EngineeringReference>
 <DescriptionTextId>6133</DescriptionTextId>   <!--  6133 => "[Supply Air Temperature] has dropped below [Supply Air Under Temp Threshold]."  -->
 <LabelTextId>6132</LabelTextId>   <!--  6132 => "Supply Air Under Temperature"  -->
 <EventDefn>
  <DataId>5019</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5020</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirSupplyUnderEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Supply Air Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_tmpAirSupplyUnder.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6135</DescriptionTextId>   <!--  6135 => "Enable/disable the activation of the [Supply Air Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6134</LabelTextId>   <!--  6134 => "Supply Air Under Temperature - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5021</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirSupplyUnderType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Supply Air Under Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_tmpAirSupplyUnder.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6137</DescriptionTextId>   <!--  6137 => "The event type for the [Supply Air Under Temperature] event."  -->
 <LabelTextId>6136</LabelTextId>   <!--  6136 => "Supply Air Under Temperature - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5022</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airRetOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Return Air Over Temperature] event.
See event evt_sys_tmpAirRetOver.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HITEMPE</EngineeringReference>
 <DescriptionTextId>6139</DescriptionTextId>   <!--  6139 => "Threshold value used in the [Return Air Over Temperature] event."  -->
 <LabelTextId>6138</LabelTextId>   <!--  6138 => "Return Air Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5023</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_tmpAirRetOver</ProgrammaticName>
 <EngineeringDescription>[Return Air Temperature] has exceeded [Return Air Over Temp Threshold].  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_sys_tmp_airRetOverThrshld.
Value used in comparison against threshold is specified in val_sys_tmp_airRet.

The annunciation of this event may optionally be modified by:
st_sys_tmpAirRetOverEnable
st_sys_tmpAirRetOverType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_HIRETE</EngineeringReference>
 <DescriptionTextId>6141</DescriptionTextId>   <!--  6141 => "[Return Air Temperature] has exceeded [Return Air Over Temp Threshold]."  -->
 <LabelTextId>6140</LabelTextId>   <!--  6140 => "Return Air Over Temperature"  -->
 <EventDefn>
  <DataId>5023</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5024</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirRetOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Return Air Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_tmpAirRetOver.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6143</DescriptionTextId>   <!--  6143 => "Enable/disable the activation of the [Return Air Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6142</LabelTextId>   <!--  6142 => "Return Air Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5025</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirRetOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Return Air Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_tmpAirRetOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6145</DescriptionTextId>   <!--  6145 => "The event type for the [Return Air Over Temperature] event."  -->
 <LabelTextId>6144</LabelTextId>   <!--  6144 => "Return Air Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5026</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_snsrSupplyAirIssue</ProgrammaticName>
 <EngineeringDescription>The air sensor at the outlet of the unit is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAPTC</EngineeringReference>
 <DescriptionTextId>6147</DescriptionTextId>   <!--  6147 => "The air sensor at the outlet of the unit is disconnected or the signal is out of range."  -->
 <LabelTextId>6146</LabelTextId>   <!--  6146 => "Supply Air Sensor Issue"  -->
 <EventDefn>
  <DataId>5026</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5027</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_airSupply</ProgrammaticName>
 <EngineeringDescription>Relative humidity at the outlet of the unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HT_HUMISUP</EngineeringReference>
 <DescriptionTextId>6149</DescriptionTextId>   <!--  6149 => "Relative humidity at the outlet of the unit."  -->
 <LabelTextId>6148</LabelTextId>   <!--  6148 => "Supply Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5028</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_airRet</ProgrammaticName>
 <EngineeringDescription>Relative humidity measured at the inlet of the unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HT_HUMI</EngineeringReference>
 <DescriptionTextId>6151</DescriptionTextId>   <!--  6151 => "Relative humidity measured at the inlet of the unit."  -->
 <LabelTextId>6150</LabelTextId>   <!--  6150 => "Return Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5029</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_setPt</ProgrammaticName>
 <EngineeringDescription>Desired relative humidity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUMISET</EngineeringReference>
 <DescriptionTextId>6153</DescriptionTextId>   <!--  6153 => "Desired relative humidity."  -->
 <LabelTextId>6152</LabelTextId>   <!--  6152 => "Humidity Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5030</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_hmdPropBand</ProgrammaticName>
 <EngineeringDescription>Humidity control band below [Humidity Set Point].  If measured humidity is within this band, humidification operations are proportionally controlled.

Non-zero values of [Humidity Dead Band] will shift this control band away from the set point (see val_sys_rh_deadBand).

Example 1:
[Humidity Set Point] is set to 40%.
[Humidification Proportional Band] is set to 3%.
[Humidity Dead Band] is set to 0%.
When measured humidity is between 37% and 40%, the unit will perform proportional humidification operations.

Example 2: See val_sys_rh_deadBand</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUMIPROP</EngineeringReference>
 <DescriptionTextId>6155</DescriptionTextId>   <!--  6155 => "Humidity control band below [Humidity Set Point].  If measured humidity is within this band, humidification operations are proportionally controlled."  -->
 <LabelTextId>6154</LabelTextId>   <!--  6154 => "Humidification Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5031</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_dhmdPropBand</ProgrammaticName>
 <EngineeringDescription>Humidity control band above [Humidity Set Point].  If measured humidity is within this band, dehumidification operations are proportionally controlled.

Non-zero values of [Humidity Dead Band] will shift this control band away from the set point (see val_sys_rh_deadBand).

Example 1:
[Humidity Set Point] is set to 40%.
[Dehumidification Proportional Band] is set to 4%.
[Humidity Dead Band] is set to 0%.
When measured humidity is between 40% and 44%, the unit will perform proportional dehumidification operations.

Example 2: See val_sys_rh_deadBand</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUMIPROP</EngineeringReference>
 <DescriptionTextId>6157</DescriptionTextId>   <!--  6157 => "Humidity control band above [Humidity Set Point].  If measured humidity is within this band, dehumidification operations are proportionally controlled."  -->
 <LabelTextId>6156</LabelTextId>   <!--  6156 => "Dehumidification Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5032</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_deadBand</ProgrammaticName>
 <EngineeringDescription>Value that is divided evenly to form a range above and below [Return Humidity Set Point].  If [Return Humidity] is within this range, no humidification or dehumidification will occur.

Example1:
[Return Humidity Set Point] is set to 40%.
[Return Humidity Proportional Band] is set to 8%.
[Return Humidity Dead Band] is set to 2%.
When [Return Humidity] is between 39% and 41%, no humidification or dehumidification will occur.
When [Return Humidity] is between 41% and 45%, the unit will perform proportional dehumidification operations.
When [Return Humidity] is between 35% and 39%, the unit will perform proportional humidification operations.

See val_sys_rh_hmdPropBand, val_sys_rh_dhmdPropBand, and val_sys_rh_propBand for other examples.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUM_DEADB</EngineeringReference>
 <DescriptionTextId>6159</DescriptionTextId>   <!--  6159 => "Value that is divided evenly to form a range above and below [Humidity Set Point].  If measured humidity is within this range, no humidification or dehumidification will occur."  -->
 <LabelTextId>6158</LabelTextId>   <!--  6158 => "Humidity Dead Band"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5033</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_airRetOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [High Return Humidity] event.
See event evt_sys_rhAirRetOver.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HIHUMI</EngineeringReference>
 <DescriptionTextId>6161</DescriptionTextId>   <!--  6161 => "Threshold value used in the [High Return Humidity] event."  -->
 <LabelTextId>6160</LabelTextId>   <!--  6160 => "High Return Humidity Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5034</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_rhAirRetOver</ProgrammaticName>
 <EngineeringDescription>[Return Humidity] has exceeded [High Return Humidity Threshold].  The event is deactivated when the humidity drops below the threshold.

Event threshold is specified in val_sys_rh_airRetOverThrshld.
Value used in comparison against threshold is specified in val_sys_rh_airRet.

The behavior of this event may optionally be modified by:
st_sys_rhAirRetOverEnable
st_sys_rhAirRetOverType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_HIRETHU</EngineeringReference>
 <DescriptionTextId>6163</DescriptionTextId>   <!--  6163 => "[Return Humidity] has exceeded [High Return Humidity Threshold]."  -->
 <LabelTextId>6162</LabelTextId>   <!--  6162 => "High Return Humidity"  -->
 <EventDefn>
  <DataId>5034</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5035</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_airRetUnderThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Low Return Humidity] event.
See event evt_sys_rhAirRetUnder.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LOHUMI</EngineeringReference>
 <DescriptionTextId>6165</DescriptionTextId>   <!--  6165 => "Threshold value used in the [Low Return Humidity] event."  -->
 <LabelTextId>6164</LabelTextId>   <!--  6164 => "Low Return Humidity Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5036</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_rhAirRetUnder</ProgrammaticName>
 <EngineeringDescription>[Return Humidity] has dropped below [Low Return Humidity Threshold].  The event is deactivated when the humidity rises above the threshold.

Event threshold is specified in val_sys_rh_airRetUnderThrshld.
Value used in comparison against threshold is specified in val_sys_rh_airRet.

The behavior of this event may optionally be modified by:
st_sys_rhAirRetUnderEnable
st_sys_rhAirRetUnderType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_LORETHU</EngineeringReference>
 <DescriptionTextId>6167</DescriptionTextId>   <!--  6167 => "[Return Humidity] has dropped below [Low Return Humidity Threshold]."  -->
 <LabelTextId>6166</LabelTextId>   <!--  6166 => "Low Return Humidity"  -->
 <EventDefn>
  <DataId>5036</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5037</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_hmd_hrsExceeded</ProgrammaticName>
 <EngineeringDescription>Operating hours for the humidifier have exceeded the threshold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAHUMIHOU</EngineeringReference>
 <DescriptionTextId>6169</DescriptionTextId>   <!--  6169 => "Operating hours for the humidifier have exceeded the threshold."  -->
 <LabelTextId>6168</LabelTextId>   <!--  6168 => "Humidifier Hours Exceeded"  -->
 <EventDefn>
  <DataId>5037</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5038</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_dhmd_hrsExceeded</ProgrammaticName>
 <EngineeringDescription>Operating hours for the dehumidifier have exceeded the threshold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WADEHUMHO</EngineeringReference>
 <DescriptionTextId>6171</DescriptionTextId>   <!--  6171 => "Operating hours for the dehumidifier have exceeded the threshold."  -->
 <LabelTextId>6170</LabelTextId>   <!--  6170 => "Dehumidifier Hours Exceeded"  -->
 <EventDefn>
  <DataId>5038</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5039</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_hmd_ecUnder</ProgrammaticName>
 <EngineeringDescription>The electrical current to the humidifier has dropped below its lower threshold.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_PEXCUFA</EngineeringReference>
 <DescriptionTextId>6173</DescriptionTextId>   <!--  6173 => "The electrical current to the humidifier has dropped below its lower threshold."  -->
 <LabelTextId>6172</LabelTextId>   <!--  6172 => "Humidifier Under Current"  -->
 <EventDefn>
  <DataId>5039</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5040</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_hmd_ecOver</ProgrammaticName>
 <EngineeringDescription>The electrical current to the humidifier has exceeded its upper threshold.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_PEXHICU</EngineeringReference>
 <DescriptionTextId>6175</DescriptionTextId>   <!--  6175 => "The electrical current to the humidifier has exceeded its upper threshold."  -->
 <LabelTextId>6174</LabelTextId>   <!--  6174 => "Humidifier Over Current"  -->
 <EventDefn>
  <DataId>5040</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5041</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_hmd_waterLevelLow</ProgrammaticName>
 <EngineeringDescription>The water level in the humidifier has dropped below its threshold.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_PEXLOWA</EngineeringReference>
 <DescriptionTextId>6177</DescriptionTextId>   <!--  6177 => "The water level in the humidifier has dropped below its threshold."  -->
 <LabelTextId>6176</LabelTextId>   <!--  6176 => "Humidifier Low Water"  -->
 <EventDefn>
  <DataId>5041</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5042</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_hmd_cylinderWorn</ProgrammaticName>
 <EngineeringDescription>Humidifier cylinder is not operating properly and needs to be replaced.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_HUMICYL</EngineeringReference>
 <DescriptionTextId>6179</DescriptionTextId>   <!--  6179 => "Humidifier cylinder is not operating properly and needs to be replaced."  -->
 <LabelTextId>6178</LabelTextId>   <!--  6178 => "Humidifier Cylinder Worn"  -->
 <EventDefn>
  <DataId>5042</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5043</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_hmd_issue</ProgrammaticName>
 <EngineeringDescription>Humidifier issue detected, causing it to be locked out.  The event is deactivated when the condition has cleared.

The behavior of this event may optionally be modified by:
st_hmd_issueEnable
st_hmd_issueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Some of the possible causes include, but are not limited to the following: Humidifier over temperature condition, Humidifier high water level</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALHUMHITE</EngineeringReference>
 <DescriptionTextId>6181</DescriptionTextId>   <!--  6181 => "Humidifier issue detected, causing it to be locked out."  -->
 <LabelTextId>6180</LabelTextId>   <!--  6180 => "Humidifier Issue"  -->
 <EventDefn>
  <DataId>5043</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5044</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_hmdLockout</ProgrammaticName>
 <EngineeringDescription>The humidifier is shut down and disabled by an external input signal.  The event is deactivated when the signal is inactive

The annunciation of this event may optionally be modified by:
st_ext_hmdLockoutEnable
st_ext_hmdLockoutType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEHUMILOCK</EngineeringReference>
 <DescriptionTextId>6183</DescriptionTextId>   <!--  6183 => "The humidifier is shut down and disabled by an external input signal."  -->
 <LabelTextId>6182</LabelTextId>   <!--  6182 => "Ext Humidifier Lockout"  -->
 <EventDefn>
  <DataId>5044</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5045</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_hmdCtrlBdNotDetected</ProgrammaticName>
 <EngineeringDescription>Humidifier control board is required to be connected, but no signal is detected.  The event is deactivated when signal is detected.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HCB_NC</EngineeringReference>
 <DescriptionTextId>6185</DescriptionTextId>   <!--  6185 => "Humidifier control board is required to be connected, but no signal is detected."  -->
 <LabelTextId>6184</LabelTextId>   <!--  6184 => "Humidifier Control Board Not Detected"  -->
 <EventDefn>
  <DataId>5045</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5046</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_rh_outOfPropBand</ProgrammaticName>
 <EngineeringDescription>[Return Humidity] has exceeded the upper limit of [Dehumidification Proportional Band], or has dropped below the lower limit of [Humidification Proportional Band], for an extended period of time.

iCOM Specific: This is a notification event and doesn't require deactivation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_ROOMHUM</EngineeringReference>
 <DescriptionTextId>6187</DescriptionTextId>   <!--  6187 => "[Return Humidity] has exceeded the upper limit of [Dehumidification Proportional Band], or has dropped below the lower limit of [Humidification Proportional Band] ], for an extended period of time."  -->
 <LabelTextId>6186</LabelTextId>   <!--  6186 => "Return Humidity Out Of Proportional Band"  -->
 <EventDefn>
  <DataId>5046</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5047</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_controlMode</ProgrammaticName>
 <EngineeringDescription>Fan control mode.
Allowable modes:
Auto - Fan speed is controlled via internal algorithms.
Manual - Fan will operate at a fixed speed.

iCOM Specific: If set to manual, see val_fan_manSetPt.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FANVSD_TYP</EngineeringReference>
 <DescriptionTextId>6189</DescriptionTextId>   <!--  6189 => "Fan control mode."  -->
 <LabelTextId>6188</LabelTextId>   <!--  6188 => "Fan Control Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4130</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5048</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_tmp_propBand</ProgrammaticName>
 <EngineeringDescription>Temperature control band above the temperature set point calculated for proportional fan speed control.  If measured air temperature is within this band, fan speed operations are proportionally controlled.

Example:
Temperature set point for proportional fan speed control is set to 70 degrees.
[Fan Speed Proportional Band] is set to 10 degrees.
[When measured air temperature is between 70 and 80 degrees, the unit will perform proportional fan speed control.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FANVSD_PRP</EngineeringReference>
 <DescriptionTextId>6191</DescriptionTextId>   <!--  6191 => "Temperature control band above the temperature set point calculated for proportional fan speed control.  If measured air temperature is within this band, fan speed operations are proportionally controlled."  -->
 <LabelTextId>6190</LabelTextId>   <!--  6190 => "Fan Speed Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5049</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_pct_manSetPt</ProgrammaticName>
 <EngineeringDescription>Manual fan speed.

When [Fan Control Mode] is supported and is set to 'Manual', the fan speed remains constant at this value.

See st_fan_controlMode.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FANVSD_NOP</EngineeringReference>
 <DescriptionTextId>6193</DescriptionTextId>   <!--  6193 => "Manual fan speed."  -->
 <LabelTextId>6192</LabelTextId>   <!--  6192 => "Fan Speed Manual Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5050</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_pct_maxSetPt</ProgrammaticName>
 <EngineeringDescription>Maximum fan speed.

When [Fan Control Mode] is supported and is set to 'Auto', the fan speed can vary between this value and [Fan Speed Minimum Set Point].

See st_fan_controlMode.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FANVSD_SPE</EngineeringReference>
 <DescriptionTextId>6195</DescriptionTextId>   <!--  6195 => "Maximum fan speed."  -->
 <LabelTextId>6194</LabelTextId>   <!--  6194 => "Fan Speed Maximum Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5051</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_pct_minSetPt</ProgrammaticName>
 <EngineeringDescription>Minimum fan speed.
When [Fan Control Mode] is supported and is set to ‘Auto’, the fan speed can vary between this value and [Fan Speed Maximum Set Point].
See st_fan_controlMode.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FANVSD_MIN</EngineeringReference>
 <DescriptionTextId>6197</DescriptionTextId>   <!--  6197 => "Minimum fan speed."  -->
 <LabelTextId>6196</LabelTextId>   <!--  6196 => "Fan Speed Minimum Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5052</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_snsrSpeedControl</ProgrammaticName>
 <EngineeringDescription>Sensor from which air temperature measurements will be used for fan speed control.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FAN_SENSTY</EngineeringReference>
 <DescriptionTextId>6199</DescriptionTextId>   <!--  6199 => "Sensor from which air temperature measurements will be used for fan speed control."  -->
 <LabelTextId>6198</LabelTextId>   <!--  6198 => "Fan Control Sensor"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4142</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5053</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_flowLossAir</ProgrammaticName>
 <EngineeringDescription>No air flow through the unit due to failure of all fans.  The event is deactivated when the failure condition is cleared.

NOTE: This is not a failure of the fans that are cooling the system internal components.  It is a failure of the environmental unit's blower fans.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALLOSSAIRF</EngineeringReference>
 <DescriptionTextId>6201</DescriptionTextId>   <!--  6201 => "No air flow through the unit due to failure of all fans."  -->
 <LabelTextId>6200</LabelTextId>   <!--  6200 => "Loss of Air Flow"  -->
 <EventDefn>
  <DataId>5053</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5054</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_fan_hrsExceeded</ProgrammaticName>
 <EngineeringDescription>Operating hours for the unit blower fan have exceeded the threshold.

Event threshold is specified in val_fan_tm_opThreshold.
Value used in comparison against threshold is specified in val_fan_tm_op.

iCOM Specific: This event will deactivate when val_fan_tm_op is manually reset to zero.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACONDHOU</EngineeringReference>
 <DescriptionTextId>6203</DescriptionTextId>   <!--  6203 => "Operating hours for the unit blower fan have exceeded the threshold."  -->
 <LabelTextId>6202</LabelTextId>   <!--  6202 => "Fan Hours Exceeded"  -->
 <EventDefn>
  <DataId>5054</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5055</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_fan_issueTop</ProgrammaticName>
 <EngineeringDescription>The top fan is not operating within its normal parameters.   The event is deactivated when the fan returns to normal operation.
NOTE: This is not a failure of a fan that is cooling the system internal components.  It is a failure of an environmental unit blower fan.

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALLOSSAIR2</EngineeringReference>
 <DescriptionTextId>6205</DescriptionTextId>   <!--  6205 => "The top fan is not operating within its normal parameters."  -->
 <LabelTextId>6204</LabelTextId>   <!--  6204 => "Top Fan Issue"  -->
 <EventDefn>
  <DataId>5055</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5056</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_fan_issueBottom</ProgrammaticName>
 <EngineeringDescription>The bottom fan is not operating within its normal parameters.   The event is deactivated when the fan returns to normal operation.
NOTE: This is not a failure of a fan that is cooling the system internal components.  It is a failure of an environmental unit blower fan.

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_BOTFANF</EngineeringReference>
 <DescriptionTextId>6207</DescriptionTextId>   <!--  6207 => "The bottom fan is not operating within its normal parameters."  -->
 <LabelTextId>6206</LabelTextId>   <!--  6206 => "Bottom Fan Issue"  -->
 <EventDefn>
  <DataId>5056</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5057</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_remSnsrName</ProgrammaticName>
 <EngineeringDescription>Name assigned to remote sensor.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RACKNAM_mm</EngineeringReference>
 <DescriptionTextId>6209</DescriptionTextId>   <!--  6209 => "Name assigned to remote sensor."  -->
 <LabelTextId>6208</LabelTextId>   <!--  6208 => "Remote Sensor Name"  -->
 <TextDefn>
  <DataId>5057</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5058</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_remSnsrFunc</ProgrammaticName>
 <EngineeringDescription>Function assigned to remote sensor.
Available values are:
(0) Disable - sensor is disabled
(1) Reference - sensor will not be used in calculation of remote sensor temperature, but is enabled
(2) Control - sensor will be used in calculation of remote sensor temperature that may be used for heating and cooling control

See st_fan_snsrSpeedControl and st_sys_tmpSnsrAirControl</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RACKFUN_mm</EngineeringReference>
 <DescriptionTextId>6211</DescriptionTextId>   <!--  6211 => "Function assigned to remote sensor."  -->
 <LabelTextId>6210</LabelTextId>   <!--  6210 => "Remote Sensor Function"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4144</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5059</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_remSnsr</ProgrammaticName>
 <EngineeringDescription>Air temperature as measured by remote sensor.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_RACKTE_S_mm</EngineeringReference>
 <DescriptionTextId>6216</DescriptionTextId>   <!--  6216 => "Air temperature as measured by remote sensor."  -->
 <LabelTextId>6215</LabelTextId>   <!--  6215 => "Remote Sensor Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5060</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_remSnsrIssue</ProgrammaticName>
 <EngineeringDescription>Remote sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_RACKS_mm</EngineeringReference>
 <DescriptionTextId>6218</DescriptionTextId>   <!--  6218 => "Remote sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>6217</LabelTextId>   <!--  6217 => "Remote Sensor Issue"  -->
 <EventDefn>
  <DataId>5060</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5061</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Deprecated</EntryStatus>
 <ProgrammaticName>evt_comp_prsHigh1</ProgrammaticName>
 <EngineeringDescription>DON'T USE, use evt_comp_prsHigh1A instead. Compressor 1 high head pressure.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALHP</EngineeringReference>
 <DescriptionTextId>6220</DescriptionTextId>   <!--  6220 => "Compressor 1 high head pressure."  -->
 <LabelTextId>6219</LabelTextId>   <!--  6219 => "Compressor 1 High Head Pressure"  -->
 <EventDefn>
  <DataId>5061</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5062</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsLow1</ProgrammaticName>
 <EngineeringDescription>Compressor 1 low suction pressure.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALLP</EngineeringReference>
 <DescriptionTextId>6222</DescriptionTextId>   <!--  6222 => "Compressor 1 low suction pressure."  -->
 <LabelTextId>6221</LabelTextId>   <!--  6221 => "Compressor 1 Low Suction Pressure"  -->
 <EventDefn>
  <DataId>5062</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5063</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_hrsExceeded1</ProgrammaticName>
 <EngineeringDescription>Operating hours for compressor 1 have exceeded the threshold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACOMPHOU</EngineeringReference>
 <DescriptionTextId>6224</DescriptionTextId>   <!--  6224 => "Operating hours for compressor 1 have exceeded the threshold."  -->
 <LabelTextId>6223</LabelTextId>   <!--  6223 => "Compressor 1 Hours Exceeded"  -->
 <EventDefn>
  <DataId>5063</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5064</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_tmpSnsrDigScroll_1</ProgrammaticName>
 <EngineeringDescription>Digital scroll compressor 1 temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALDISCRSE1</EngineeringReference>
 <DescriptionTextId>6226</DescriptionTextId>   <!--  6226 => "Digital scroll compressor 1 temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>6225</LabelTextId>   <!--  6225 => "Dig Scroll Comp 1 Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5064</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5065</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_tmpDigScrollOver1</ProgrammaticName>
 <EngineeringDescription>Digital scroll compressor 1 shut off because its head temperature has exceeded the upper threshold.  The event is deactivated when temperature drops below the threshold.

The behavior of this event may optionally be modified by:
st_comp_tmpDigScrollOverEnable1
st_comp_tmpDigScrollOverType1

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALSCROHIT1</EngineeringReference>
 <DescriptionTextId>6228</DescriptionTextId>   <!--  6228 => "Digital scroll compressor 1 shut off because its head temperature has exceeded the upper threshold."  -->
 <LabelTextId>6227</LabelTextId>   <!--  6227 => "Dig Scroll Comp 1 Over Temp"  -->
 <EventDefn>
  <DataId>5065</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5066</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_lowPrsXdcrIssue1</ProgrammaticName>
 <EngineeringDescription>Compressor 1 low pressure transducer is disconnected or the signal is out of range.   The event is deactivated when transducer signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_SUCTR1</EngineeringReference>
 <DescriptionTextId>6230</DescriptionTextId>   <!--  6230 => "Compressor 1 low pressure transducer is disconnected or the signal is out of range."  -->
 <LabelTextId>6229</LabelTextId>   <!--  6229 => "Compressor 1 Low Pressure Transducer Issue"  -->
 <EventDefn>
  <DataId>5066</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5067</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_compLockout</ProgrammaticName>
 <EngineeringDescription>The compressor is shut down and disabled by an external input signal.  The event is deactivated when the signal is inactive.

The annunciation of this event may optionally be modified by:
st_ext_compLockoutEnable
st_ext_compLockoutType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MECOMPLOCK</EngineeringReference>
 <DescriptionTextId>6232</DescriptionTextId>   <!--  6232 => "The compressor is shut down and disabled by an external input signal."  -->
 <LabelTextId>6231</LabelTextId>   <!--  6231 => "Ext Compressor Lockout"  -->
 <EventDefn>
  <DataId>5067</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5068</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_heat_tmpOver</ProgrammaticName>
 <EngineeringDescription>The temperature of the reheater has exceeded its threshold.  The event is deactivated when the temperature drops below its threshold.

iCOM specific: The threshold value is internally set and not subject to change.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAEHO</EngineeringReference>
 <DescriptionTextId>6234</DescriptionTextId>   <!--  6234 => "The temperature of the reheater has exceeded its threshold."  -->
 <LabelTextId>6233</LabelTextId>   <!--  6233 => "Reheater Over Temperature"  -->
 <EventDefn>
  <DataId>5068</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5069</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_heat_hrsExceeded1</ProgrammaticName>
 <EngineeringDescription>Operating hours for electric reheater 1 have exceeded the threshold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAHOHEATE1</EngineeringReference>
 <DescriptionTextId>6236</DescriptionTextId>   <!--  6236 => "Operating hours for electric reheater 1 have exceeded the threshold."  -->
 <LabelTextId>6235</LabelTextId>   <!--  6235 => "Electric Reheater 1 Hours Exceeded"  -->
 <EventDefn>
  <DataId>5069</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5070</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_reheatLockout</ProgrammaticName>
 <EngineeringDescription>The reheater is shut down and disabled by an external input signal.  The event is deactivated when the signal is inactive.

The annunciation of this event may optionally be modified by:
st_ext_reheatLockoutEnable
st_ext_reheatLockoutType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEHEATLOCK</EngineeringReference>
 <DescriptionTextId>6238</DescriptionTextId>   <!--  6238 => "The reheater is shut down and disabled by an external input signal."  -->
 <LabelTextId>6237</LabelTextId>   <!--  6237 => "Ext Reheat Lockout"  -->
 <EventDefn>
  <DataId>5070</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5071</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cndsr_issue1</ProgrammaticName>
 <EngineeringDescription>Condenser 1 is not operating within its normal parameters.   The event is deactivated when condenser returns to normal operation..

The annunciation of this event may optionally be modified by:
st_cndsr_issueEnable1
st_cndsr_issueType1

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_CONDEN1</EngineeringReference>
 <DescriptionTextId>6240</DescriptionTextId>   <!--  6240 => "Condenser 1 is not operating within its normal parameters."  -->
 <LabelTextId>6239</LabelTextId>   <!--  6239 => "Condenser 1 Issue"  -->
 <EventDefn>
  <DataId>5071</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5072</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cndsr_vfdIssue</ProgrammaticName>
 <EngineeringDescription>The condenser fan Variable Frequency Drive is offline.  The event is deactivated by manual reset or when the condition has cleared.

The annunciation of this event may optionally be modified by:
st_cndsr_vfdIssueEnable
st_cndsr_vfdIssueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HEATVFD</EngineeringReference>
 <DescriptionTextId>6242</DescriptionTextId>   <!--  6242 => "The condenser fan Variable Frequency Drive is offline."  -->
 <LabelTextId>6241</LabelTextId>   <!--  6241 => "Condenser VFD Issue"  -->
 <EventDefn>
  <DataId>5072</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5073</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cndsr_tvssIssue</ProgrammaticName>
 <EngineeringDescription>The condenser Transient Voltage Surge Suppressor device has failed.  The event is deactivated by manual reset.

The annunciation of this event may optionally be modified by:
st_cndsr_tvssIssueEnable
st_cndsr_tvssIssueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HEATTVS</EngineeringReference>
 <DescriptionTextId>6244</DescriptionTextId>   <!--  6244 => "The condenser Transient Voltage Surge Suppressor device has failed."  -->
 <LabelTextId>6243</LabelTextId>   <!--  6243 => "Condenser TVSS Issue"  -->
 <EventDefn>
  <DataId>5073</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5074</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_operatingReason</ProgrammaticName>
 <EngineeringDescription>The reason the system is in the current operating state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_STA_REASON</EngineeringReference>
 <DescriptionTextId>6246</DescriptionTextId>   <!--  6246 => "The reason the system is in the current operating state."  -->
 <LabelTextId>6245</LabelTextId>   <!--  6245 => "System Operating State Reason"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4145</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5075</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tm_bmsTimeout</ProgrammaticName>
 <EngineeringDescription>Timeframe within which the Building Management System (or external monitoring system) must communicate with the system to avoid a timeout condition.

Note: Velocity is not considered a BMS.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BMS_HANDSH</EngineeringReference>
 <DescriptionTextId>6255</DescriptionTextId>   <!--  6255 => "Timeframe within which the Building Management System (or external monitoring system) must communicate with the system to avoid a timeout.

"  -->
 <LabelTextId>6254</LabelTextId>   <!--  6254 => "BMS Timeout Period"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5076</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_opEff</ProgrammaticName>
 <EngineeringDescription>The ratio of cooling energy provided to the amount of total energy being used.  This equates to a value in the range of 0 to 100%.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CALCEFF_P1</EngineeringReference>
 <DescriptionTextId>6257</DescriptionTextId>   <!--  6257 => "The ratio of cooling energy provided to the amount of total energy being used."  -->
 <LabelTextId>6256</LabelTextId>   <!--  6256 => "Operating Efficiency"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5077</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_pct_speed</ProgrammaticName>
 <EngineeringDescription>Fan speed expressed as a percentage of the maximum rated speed.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_FAN</EngineeringReference>
 <DescriptionTextId>6259</DescriptionTextId>   <!--  6259 => "Fan speed expressed as a percentage of the maximum rated speed."  -->
 <LabelTextId>6258</LabelTextId>   <!--  6258 => "Fan Speed"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5078</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_comp_pct_utlztn</ProgrammaticName>
 <EngineeringDescription>Present compressor utilization expressed as a percentage of the maximum rated capacity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_COOL</EngineeringReference>
 <DescriptionTextId>6261</DescriptionTextId>   <!--  6261 => "Present compressor utilization expressed as a percentage of the maximum rated capacity."  -->
 <LabelTextId>6260</LabelTextId>   <!--  6260 => "Compressor Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5079</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_dhmd_pct_utlztn</ProgrammaticName>
 <EngineeringDescription>Present dehumidifier utilization expressed as a percentage of the maximum rated capacity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_DEH</EngineeringReference>
 <DescriptionTextId>6263</DescriptionTextId>   <!--  6263 => "Present dehumidifier utilization expressed as a percentage of the maximum rated capacity."  -->
 <LabelTextId>6262</LabelTextId>   <!--  6262 => "Dehumidifier Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5080</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_heat_pct_utlztn</ProgrammaticName>
 <EngineeringDescription>Present reheating utilization expressed as a percentage of the maximum rated capacity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_HEATE</EngineeringReference>
 <DescriptionTextId>6265</DescriptionTextId>   <!--  6265 => "Present reheating utilization expressed as a percentage of the maximum rated capacity."  -->
 <LabelTextId>6264</LabelTextId>   <!--  6264 => "Reheat Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5081</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_hmd_pct_utlztn</ProgrammaticName>
 <EngineeringDescription>Present humidifier utilization expressed as a percentage of the maximum rated capacity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_HUM</EngineeringReference>
 <DescriptionTextId>6267</DescriptionTextId>   <!--  6267 => "Present humidifier utilization expressed as a percentage of the maximum rated capacity."  -->
 <LabelTextId>6266</LabelTextId>   <!--  6266 => "Humidifier Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5082</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_flowLossEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_ext_flowLoss.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_107</EngineeringReference>
 <DescriptionTextId>6269</DescriptionTextId>   <!--  6269 => "Enable/disable the activation of the [Ext Loss of Flow] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6268</LabelTextId>   <!--  6268 => "Ext Loss of Flow - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5083</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_flowLossType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Loss of Flow] event.
Event types are message, warning, alarm, and fault.
See event evt_ext_flowLoss.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_3_et</EngineeringReference>
 <DescriptionTextId>6271</DescriptionTextId>   <!--  6271 => "The event type for the [Ext Loss of Flow] event."  -->
 <LabelTextId>6270</LabelTextId>   <!--  6270 => "Ext Loss of Flow - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5084</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_reheatLockoutEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Reheat Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_reheatLockout.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_143</EngineeringReference>
 <DescriptionTextId>6273</DescriptionTextId>   <!--  6273 => "Enable/disable the activation of the [Ext Reheat Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6272</LabelTextId>   <!--  6272 => "Ext Reheat Lockout - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5085</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_reheatLockoutType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Reheat Lockout] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_reheatLockout.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEHEATLOCK_et</EngineeringReference>
 <DescriptionTextId>6275</DescriptionTextId>   <!--  6275 => "The event type for the [Ext Reheat Lockout] event."  -->
 <LabelTextId>6274</LabelTextId>   <!--  6274 => "Ext Reheat Lockout - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5086</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_hmdLockoutEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Humidifier Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_hmdLockout.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_145</EngineeringReference>
 <DescriptionTextId>6277</DescriptionTextId>   <!--  6277 => "Enable/disable the activation of the [Ext Humidifier Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6276</LabelTextId>   <!--  6276 => "Ext Humidifier Lockout - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5087</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_hmdLockoutType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Humidifier Lockout] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_hmdLockout.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEHUMILOCK_et</EngineeringReference>
 <DescriptionTextId>6279</DescriptionTextId>   <!--  6279 => "The event type for the [Ext Humidifier Lockout] event."  -->
 <LabelTextId>6278</LabelTextId>   <!--  6278 => "Ext Humidifier Lockout - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5088</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_compLockoutEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Compressor Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_compLockout.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_147</EngineeringReference>
 <DescriptionTextId>6281</DescriptionTextId>   <!--  6281 => "Enable/disable the activation of the [Ext Compressor Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6280</LabelTextId>   <!--  6280 => "Ext Compressor Lockout - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5089</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_compLockoutType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Compressor Lockout] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_compLockout.
.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MECOMPLOCK_et</EngineeringReference>
 <DescriptionTextId>6283</DescriptionTextId>   <!--  6283 => "The event type for the [Ext Compressor Lockout] event."  -->
 <LabelTextId>6282</LabelTextId>   <!--  6282 => "Ext Compressor Lockout - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5090</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_overTempEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_overTemp.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_016</EngineeringReference>
 <DescriptionTextId>6285</DescriptionTextId>   <!--  6285 => "Enable/disable the activation of the [Ext Over Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6284</LabelTextId>   <!--  6284 => "Ext Over Temperature - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5091</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_overTempType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Over Temperature] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_overTemp.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MECUSINP15_et</EngineeringReference>
 <DescriptionTextId>6287</DescriptionTextId>   <!--  6287 => "The event type for the [Ext Over Temperature] event."  -->
 <LabelTextId>6286</LabelTextId>   <!--  6286 => "Ext Over Temperature - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5092</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_vfdIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Condenser VFD Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
          See event evt_cndsr_vfdIssue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_144</EngineeringReference>
 <DescriptionTextId>6289</DescriptionTextId>   <!--  6289 => "Enable/disable the activation of the [Condenser VFD Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6288</LabelTextId>   <!--  6288 => "Condenser VFD Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5093</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_vfdIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Condenser VFD Issue] event.
          Event types are message, warning, alarm, and failure.
          See event evt_cndsr_vfdIssue.

          iCOM specific:
          iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HEATVFD_et</EngineeringReference>
 <DescriptionTextId>6291</DescriptionTextId>   <!--  6291 => "The event type for the [Condenser VFD Issue] event."  -->
 <LabelTextId>6290</LabelTextId>   <!--  6290 => "Condenser VFD Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5094</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_tvssIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Condenser TVSS Issue] event (Transient Voltage Surge Suppressor).  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
          See event evt_cndsr_tvssIssue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_146</EngineeringReference>
 <DescriptionTextId>6293</DescriptionTextId>   <!--  6293 => "Enable/disable the activation of the [Condenser TVSS Issue] event (Transient Voltage Surge Suppressor).  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6292</LabelTextId>   <!--  6292 => "Condenser TVSS Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5095</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_tvssIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Condenser TVSS Issue] event (Transient Voltage Surge Suppressor).
          Event types are message, warning, alarm, and failure.
          See event evt_cndsr_tvssIssue.

          iCOM specific:
          iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_HEATTVS_et</EngineeringReference>
 <DescriptionTextId>6295</DescriptionTextId>   <!--  6295 => "The event type for the [Condenser TVSS Issue] event (Transient Voltage Surge Suppressor)."  -->
 <LabelTextId>6294</LabelTextId>   <!--  6294 => "Condenser TVSS Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5096</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_issueEnable1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Condenser 1 Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_cndsr_issue1.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_175</EngineeringReference>
 <DescriptionTextId>6297</DescriptionTextId>   <!--  6297 => "Enable/disable the activation of the [Condenser 1 Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6296</LabelTextId>   <!--  6296 => "Condenser 1 Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5097</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_issueType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Condenser 1 Issue] event.
          Event types are message, warning, alarm, and failure.
          See event evt_cndsr_issue1.

          iCOM specific:
          iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_CONDEN1_et</EngineeringReference>
 <DescriptionTextId>6299</DescriptionTextId>   <!--  6299 => "The event type for the [Condenser 1 Issue] event."  -->
 <LabelTextId>6298</LabelTextId>   <!--  6298 => "Condenser 1 Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5098</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactEnable02</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Input Contact 02] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_inpContact02</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_010</EngineeringReference>
 <DescriptionTextId>6301</DescriptionTextId>   <!--  6301 => "Enable/disable the activation of the [Input Contact 02] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6300</LabelTextId>   <!--  6300 => "Input Contact 02 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5099</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactType02</ProgrammaticName>
 <EngineeringDescription>The event type for the [Input Contact 02] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_inpContact02.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_7_et</EngineeringReference>
 <DescriptionTextId>6303</DescriptionTextId>   <!--  6303 => "The event type for the [Input Contact 02] event."  -->
 <LabelTextId>6302</LabelTextId>   <!--  6302 => "Input Contact 02 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5100</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactEnable03</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Input Contact 03] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_inpContact03.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_011</EngineeringReference>
 <DescriptionTextId>6305</DescriptionTextId>   <!--  6305 => "Enable/disable the activation of the [Input Contact 03] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6304</LabelTextId>   <!--  6304 => "Input Contact 03 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5101</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactType03</ProgrammaticName>
 <EngineeringDescription>The event type for the [Input Contact 03] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_inpContact03.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_8_et</EngineeringReference>
 <DescriptionTextId>6307</DescriptionTextId>   <!--  6307 => "The event type for the [Input Contact 03] event."  -->
 <LabelTextId>6306</LabelTextId>   <!--  6306 => "Input Contact 03 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5102</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactEnable04</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Input Contact 04] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_inpContact04</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_012</EngineeringReference>
 <DescriptionTextId>6309</DescriptionTextId>   <!--  6309 => "Enable/disable the activation of the [Input Contact 04] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6308</LabelTextId>   <!--  6308 => "Input Contact 04 - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5103</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_inpContactType04</ProgrammaticName>
 <EngineeringDescription>The event type for the [Input Contact 04] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_inpContact04.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_9_et</EngineeringReference>
 <DescriptionTextId>6311</DescriptionTextId>   <!--  6311 => "The event type for the [Input Contact 04] event."  -->
 <LabelTextId>6310</LabelTextId>   <!--  6310 => "Input Contact 04 - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5104</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_overTemp</ProgrammaticName>
 <EngineeringDescription>A temperature has exceeded its threshold, as indicated by an external input signal.  The event is deactivated when the signal is inactive.

          The annunciation of this event may optionally be modified by:
          st_ext_overTempEnable
          st_ext_overTempType

          iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MECUSINP15</EngineeringReference>
 <DescriptionTextId>6313</DescriptionTextId>   <!--  6313 => "A temperature has exceeded its threshold, as indicated by an external input signal.  "  -->
 <LabelTextId>6312</LabelTextId>   <!--  6312 => "Ext Over Temperature"  -->
 <EventDefn>
  <DataId>5104</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5105</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_flowLoss</ProgrammaticName>
 <EngineeringDescription>Loss of flow is detected, as indicated by an external input signal.  The event is deactivated when the signal is inactive.

          The behavior of this event may optionally be modified by:
          st_ext_flowLossEnable
          st_ext_flowLossType

          This is customer defined and may or may not be associated with an internal flow.


          iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_3</EngineeringReference>
 <DescriptionTextId>6315</DescriptionTextId>   <!--  6315 => "Loss of flow is detected, as indicated by an external input signal."  -->
 <LabelTextId>6314</LabelTextId>   <!--  6314 => "Ext Loss of Flow"  -->
 <EventDefn>
  <DataId>5105</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5106</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_cndsrPumpHighWater</ProgrammaticName>
 <EngineeringDescription>High water is detected in the condenser, as indicated by an external input signal.  The event is deactivated when the signal is inactive.

The behavior of this event may optionally be modified by:
st_ext_cndsrPumpHighWaterEnable
st_ext_cndsrPumpHighWaterType

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_2</EngineeringReference>
 <DescriptionTextId>6317</DescriptionTextId>   <!--  6317 => "High water is detected in the condenser, as indicated by an external input signal."  -->
 <LabelTextId>6316</LabelTextId>   <!--  6316 => "Ext Condenser Pump High Water"  -->
 <EventDefn>
  <DataId>5106</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5107</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_stdbyGlycolPumpOn</ProgrammaticName>
 <EngineeringDescription>The standby glycol pump is on, as indicated by an external input signal.   The event is deactivated when the signal is inactive.

The behavior of this event may optionally be modified by:
st_ext_stdbyGlycolPumpOnEnable
st_ext_stdbyGlycolPumpOnType

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_4</EngineeringReference>
 <DescriptionTextId>6319</DescriptionTextId>   <!--  6319 => "The standby glycol pump is on, as indicated by an external input signal."  -->
 <LabelTextId>6318</LabelTextId>   <!--  6318 => "Ext Standby Glycol Pump On"  -->
 <EventDefn>
  <DataId>5107</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5108</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_fireDetect</ProgrammaticName>
 <EngineeringDescription>Fire detected, as indicated by an external input signal.  The event is deactivated when the signal is inactive.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_FIRE</EngineeringReference>
 <DescriptionTextId>6321</DescriptionTextId>   <!--  6321 => "Fire detected, as indicated by an external input signal."  -->
 <LabelTextId>6320</LabelTextId>   <!--  6320 => "External Fire Detected"  -->
 <EventDefn>
  <DataId>5108</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5109</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_unitOn</ProgrammaticName>
 <EngineeringDescription>Unit was turned on.

          iCOM Specific: This is a notification event and doesn't require deactivation.  See st_sys_operatingReason.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEUNITON</EngineeringReference>
 <DescriptionTextId>6323</DescriptionTextId>   <!--  6323 => "Unit was turned on."  -->
 <LabelTextId>6322</LabelTextId>   <!--  6322 => "Unit On"  -->
 <EventDefn>
  <DataId>5109</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5110</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_unitOff</ProgrammaticName>
 <EngineeringDescription>Unit was turned off.

          iCOM Specific: This is a notification event and doesn't require deactivation.  See st_sys_operatingReason.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEUNITOFF</EngineeringReference>
 <DescriptionTextId>6325</DescriptionTextId>   <!--  6325 => "Unit was turned off."  -->
 <LabelTextId>6324</LabelTextId>   <!--  6324 => "Unit Off"  -->
 <EventDefn>
  <DataId>5110</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5111</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_unitStandby</ProgrammaticName>
 <EngineeringDescription>Unit was placed in standby mode.

          iCOM Specific: This is a notification event and doesn't require deactivation.  See st_sys_operatingReason.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MESTANDBY</EngineeringReference>
 <DescriptionTextId>6327</DescriptionTextId>   <!--  6327 => "Unit was placed in standby mode."  -->
 <LabelTextId>6326</LabelTextId>   <!--  6326 => "Unit Standby"  -->
 <EventDefn>
  <DataId>5111</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5112</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_partialShutdown</ProgrammaticName>
 <EngineeringDescription>An event has occurred requiring some system components to be shutdown and disabled.

          iCOM Specific: This is a notification event and doesn't require deactivation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEUNITDISA</EngineeringReference>
 <DescriptionTextId>6329</DescriptionTextId>   <!--  6329 => "An event has occurred requiring some system components to be shutdown and disabled."  -->
 <LabelTextId>6328</LabelTextId>   <!--  6328 => "Unit Partial Shutdown"  -->
 <EventDefn>
  <DataId>5112</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5113</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_shutdown</ProgrammaticName>
 <EngineeringDescription>An event has occurred requiring the unit to be shutdown and disabled to prevent damage to the system.

          iCOM Specific: This is a notification event and doesn't require deactivation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEUNSHUTDO</EngineeringReference>
 <DescriptionTextId>6331</DescriptionTextId>   <!--  6331 => "An event has occurred requiring the unit to be shutdown and disabled to prevent damage to the system."  -->
 <LabelTextId>6330</LabelTextId>   <!--  6330 => "Unit Shutdown"  -->
 <EventDefn>
  <DataId>5113</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5114</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_snsrWaterLeakDetectIssue</ProgrammaticName>
 <EngineeringDescription>The water leakage detector sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_WATERSE</EngineeringReference>
 <DescriptionTextId>6333</DescriptionTextId>   <!--  6333 => "The water leakage detector sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>6332</LabelTextId>   <!--  6332 => "Water Leakage Detector Sensor Issue"  -->
 <EventDefn>
  <DataId>5114</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5115</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_bmsCommTimeout</ProgrammaticName>
 <EngineeringDescription>Building Management System (or external monitoring system) has not communicated with the system within the expected timeframe.  The event is deactivated when communication resumes.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_BMS_TIM</EngineeringReference>
 <DescriptionTextId>6335</DescriptionTextId>   <!--  6335 => "Building Management System (or external monitoring system) has not communicated with the system within the expected timeframe."  -->
 <LabelTextId>6334</LabelTextId>   <!--  6334 => "BMS Communications Timeout"  -->
 <EventDefn>
  <DataId>5115</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5116</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_maintDue</ProgrammaticName>
 <EngineeringDescription>The calculated maintenance date has been reached.

          iCOM Specific: This is a notification event and doesn't require deactivation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEDOMAINT</EngineeringReference>
 <DescriptionTextId>6337</DescriptionTextId>   <!--  6337 => "The calculated maintenance date has been reached."  -->
 <LabelTextId>6336</LabelTextId>   <!--  6336 => "Maintenance Due"  -->
 <EventDefn>
  <DataId>5116</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5117</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_maintCompleted</ProgrammaticName>
 <EngineeringDescription>Maintenance has been completed on the unit.

          iCOM Specific: This is a notification event and doesn't require deactivation.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEMAINDONE</EngineeringReference>
 <DescriptionTextId>6339</DescriptionTextId>   <!--  6339 => "Maintenance has been completed on the unit."  -->
 <LabelTextId>6338</LabelTextId>   <!--  6338 => "Maintenance Completed"  -->
 <EventDefn>
  <DataId>5117</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5118</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_cloggedAirFilter</ProgrammaticName>
 <EngineeringDescription>Air filter is dirty and needs to be (cleaned or) replaced.

The behavior of this event may optionally be modified by:
st_sys_cloggedAirFilterEnable
st_sys_cloggedAirFilterType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACF</EngineeringReference>
 <DescriptionTextId>6341</DescriptionTextId>   <!--  6341 => "Air filter is dirty and needs to be (cleaned or) replaced."  -->
 <LabelTextId>6340</LabelTextId>   <!--  6340 => "Clogged Air Filter"  -->
 <EventDefn>
  <DataId>5118</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5119</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ramBatteryIssue</ProgrammaticName>
 <EngineeringDescription>RAM or RAM backup battery is not operating correctly.  The event is deactivated when operation returns to normal.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_BATFAIL</EngineeringReference>
 <DescriptionTextId>6343</DescriptionTextId>   <!--  6343 => "RAM or RAM backup battery is not operating correctly.  "  -->
 <LabelTextId>6342</LabelTextId>   <!--  6342 => "RAM Battery Issue"  -->
 <EventDefn>
  <DataId>5119</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5120</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_masterCommLost</ProgrammaticName>
 <EngineeringDescription>Communication with master unit has been lost.  The event is deactivated when communication is re-established.

The behavior of this event may optionally be modified by:
st_sys_masterCommLostEnable
st_sys_masterCommLostType

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WANETMAST</EngineeringReference>
 <DescriptionTextId>6345</DescriptionTextId>   <!--  6345 => "Communication with master unit has been lost."  -->
 <LabelTextId>6344</LabelTextId>   <!--  6344 => "Master Unit Communication Lost"  -->
 <EventDefn>
  <DataId>5120</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5121</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_highPwrShutdown</ProgrammaticName>
 <EngineeringDescription>Supply to high power components has been shutdown.  The event is deactivated when high power supply returns.

The annunciation of this event may optionally be modified by:
st_sys_highPwrShutdownEnable
st_sys_highPwrShutdownType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_NOPOWER</EngineeringReference>
 <DescriptionTextId>6347</DescriptionTextId>   <!--  6347 => "Supply to high power components has been shutdown."  -->
 <LabelTextId>6346</LabelTextId>   <!--  6346 => "High Power Shutdown"  -->
 <EventDefn>
  <DataId>5121</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5122</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_cndsrPumpHighWaterEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Condenser Pump High Water] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_cndsrPumpHighWater.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_106</EngineeringReference>
 <DescriptionTextId>6349</DescriptionTextId>   <!--  6349 => "Enable/disable the activation of the [Ext Condenser Pump High Water] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6348</LabelTextId>   <!--  6348 => "Ext Condenser Pump High Water - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5123</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_cndsrPumpHighWaterType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Condenser Pump High Water] event.
Event types are message, warning, alarm, and fault.
See event evt_ext_cndsrPumpHighWater.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_2_et</EngineeringReference>
 <DescriptionTextId>6351</DescriptionTextId>   <!--  6351 => "The event type for the [Ext Condenser Pump High Water] event."  -->
 <LabelTextId>6350</LabelTextId>   <!--  6350 => "Ext Condenser Pump High Water - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5124</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_tmpDigScrollOverEnable1</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Dig Scroll Comp 1 Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_tmpDigScrollOver1.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_097</EngineeringReference>
 <DescriptionTextId>6353</DescriptionTextId>   <!--  6353 => "Enable/disable the activation of the [Dig Scroll Comp 1 Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6352</LabelTextId>   <!--  6352 => "Dig Scroll Comp 1 Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5125</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_tmpDigScrollOverType1</ProgrammaticName>
 <EngineeringDescription>The event type for the [Dig Scroll Comp 1 Over Temp] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_tmpDigScrollOver1.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALSCROHIT1_et</EngineeringReference>
 <DescriptionTextId>6355</DescriptionTextId>   <!--  6355 => "The event type for the [Dig Scroll Comp 1 Over Temp] event."  -->
 <LabelTextId>6354</LabelTextId>   <!--  6354 => "Dig Scroll Comp 1 Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5126</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_tmpDigScrollOver2</ProgrammaticName>
 <EngineeringDescription>Digital scroll compressor 2 shut off because its head temperature has exceeded the upper threshold.  The event is deactivated when temperature drops below the threshold.

The behavior of this event may optionally be modified by:
st_comp_tmpDigScrollOverEnable2
st_comp_tmpDigScrollOverType2

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALSCROHIT2</EngineeringReference>
 <DescriptionTextId>6357</DescriptionTextId>   <!--  6357 => "Digital scroll compressor 2 shut off because its head temperature has exceeded the upper threshold."  -->
 <LabelTextId>6356</LabelTextId>   <!--  6356 => "Dig Scroll Comp 2 Over Temp"  -->
 <EventDefn>
  <DataId>5126</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5127</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_tmpDigScrollOverEnable2</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Dig Scroll Comp 2 Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_tmpDigScrollOver2.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_098</EngineeringReference>
 <DescriptionTextId>6359</DescriptionTextId>   <!--  6359 => "Enable/disable the activation of the [Dig Scroll Comp 2 Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6358</LabelTextId>   <!--  6358 => "Dig Scroll Comp 2 Over Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5128</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_tmpDigScrollOverType2</ProgrammaticName>
 <EngineeringDescription>The event type for the [Dig Scroll Comp 2 Over Temp] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_tmpDigScrollOver2.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALSCROHIT2_et</EngineeringReference>
 <DescriptionTextId>6361</DescriptionTextId>   <!--  6361 => "The event type for the [Dig Scroll Comp 2 Over Temp] event."  -->
 <LabelTextId>6360</LabelTextId>   <!--  6360 => "Dig Scroll Comp 2 Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5129</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_stdbyGlycolPumpOnEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Standby Glycol Pump On] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_stdbyGlycolPumpOn.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_108</EngineeringReference>
 <DescriptionTextId>6363</DescriptionTextId>   <!--  6363 => "Enable/disable the activation of the [Ext Standby Glycol Pump On] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6362</LabelTextId>   <!--  6362 => "Ext Standby Glycol Pump On - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5130</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_stdbyGlycolPumpOnType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Standby Glycol Pump On] event.
Event types are message, warning, alarm, and fault.
See event evt_ext_stdbyGlycolPumpOn.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_4_et</EngineeringReference>
 <DescriptionTextId>6365</DescriptionTextId>   <!--  6365 => "The event type for the [Ext Standby Glycol Pump On] event."  -->
 <LabelTextId>6364</LabelTextId>   <!--  6364 => "Ext Standby Glycol Pump On - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5131</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_hmd_issueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Humidifier Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_hmd_issue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_086</EngineeringReference>
 <DescriptionTextId>6367</DescriptionTextId>   <!--  6367 => "Enable/disable the activation of the [Humidifier Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6366</LabelTextId>   <!--  6366 => "Humidifier Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5132</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_hmd_issueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Humidifier Issue] event.
Event types are message, warning, alarm, and fault.
See event evt_hmd_issue.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALHUMHITE_et</EngineeringReference>
 <DescriptionTextId>6369</DescriptionTextId>   <!--  6369 => "The event type for the [Humidifier Issue] event."  -->
 <LabelTextId>6368</LabelTextId>   <!--  6368 => "Humidifier Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5133</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_masterCommLostEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Master Unit Communication Lost] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_masterCommLost.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_070</EngineeringReference>
 <DescriptionTextId>6371</DescriptionTextId>   <!--  6371 => "Enable/disable the activation of the [Master Unit Communication Lost] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6370</LabelTextId>   <!--  6370 => "Master Unit Communication Lost - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5134</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_masterCommLostType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Master Unit Communication Lost] event.
Event types are message, warning, alarm, and fault.
See event evt_sys_masterCommLost.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WANETMAST_et</EngineeringReference>
 <DescriptionTextId>6373</DescriptionTextId>   <!--  6373 => "The event type for the [Master Unit Communication Lost] event."  -->
 <LabelTextId>6372</LabelTextId>   <!--  6372 => "Master Unit Communication Lost - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5135</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_cloggedAirFilterEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Clogged Air Filter] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_cloggedAirFilter.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_008</EngineeringReference>
 <DescriptionTextId>6375</DescriptionTextId>   <!--  6375 => "Enable/disable the activation of the [Clogged Air Filter] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6374</LabelTextId>   <!--  6374 => "Clogged Air Filter - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5136</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_cloggedAirFilterType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Clogged Air Filter] event.
Event types are message, warning, alarm, and fault.
See event evt_sys_cloggedAirFilter.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACF_et</EngineeringReference>
 <DescriptionTextId>6377</DescriptionTextId>   <!--  6377 => "The event type for the [Clogged Air Filter] event."  -->
 <LabelTextId>6376</LabelTextId>   <!--  6376 => "Clogged Air Filter - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5137</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_rhAirRetOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [High Return Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_rhAirRetOver.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_020</EngineeringReference>
 <DescriptionTextId>6379</DescriptionTextId>   <!--  6379 => "Enable/disable the activation of the [High Return Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6378</LabelTextId>   <!--  6378 => "High Return Humidity - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5138</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_rhAirRetOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [High Return Humidity] event.
Event types are message, warning, alarm, and fault.
See event evt_sys_rhAirRetOver.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_HRH_et</EngineeringReference>
 <DescriptionTextId>6381</DescriptionTextId>   <!--  6381 => "The event type for the [High Return Humidity] event."  -->
 <LabelTextId>6380</LabelTextId>   <!--  6380 => "High Return Humidity - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5139</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_rhAirRetUnderEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Low Return Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_rhAirRetUnder.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_021</EngineeringReference>
 <DescriptionTextId>6383</DescriptionTextId>   <!--  6383 => "Enable/disable the activation of the [Low Return Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6382</LabelTextId>   <!--  6382 => "Low Return Humidity - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5140</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_rhAirRetUnderType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Low Return Humidity] event.
Event types are message, warning, alarm, and fault.
See event evt_sys_rhAirRetUnder.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_LRH_et</EngineeringReference>
 <DescriptionTextId>6385</DescriptionTextId>   <!--  6385 => "The event type for the [Low Return Humidity] event."  -->
 <LabelTextId>6384</LabelTextId>   <!--  6384 => "Low Return Humidity - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5141</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_highPwrShutdownEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [High Power Shutdown] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_highPwrShutdown.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_078</EngineeringReference>
 <DescriptionTextId>6387</DescriptionTextId>   <!--  6387 => "Enable/disable the activation of the [High Power Shutdown] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6386</LabelTextId>   <!--  6386 => "High Power Shutdown - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5142</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_highPwrShutdownType</ProgrammaticName>
 <EngineeringDescription>The event type for the [High Power Shutdown] event.
Event types are message, warning, alarm, and failure.
See event evt_sys_highPwrShutdown.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_NOPOWER_et</EngineeringReference>
 <DescriptionTextId>6389</DescriptionTextId>   <!--  6389 => "The event type for the [High Power Shutdown] event."  -->
 <LabelTextId>6388</LabelTextId>   <!--  6388 => "High Power Shutdown - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_CR.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5143</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_onOffCtrl</ProgrammaticName>
 <EngineeringDescription>Turn system functionality on or off.  The controls and communication are maintained, thus allowing the system to be turned on after being turned off.

iCOM Specific:  The operation of the system is dependent upon this value and other conditions, such as an alarm state.    The "off" command will always turn the system functionality off.  For instance, this turns on/off all cooling, heating, humidifier, and dehumidifier functions.
</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_IGM_UNITON</EngineeringReference>
 <DescriptionTextId>6391</DescriptionTextId>   <!--  6391 => "Turn system functionality on or off."  -->
 <LabelTextId>6390</LabelTextId>   <!--  6390 => "System On/Off Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5144</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_outOfUf</ProgrammaticName>
 <EngineeringDescription>Output frequency differs from the nominal by more than a specified amount. </EngineeringDescription>
 <EngineeringReference>tag=nxlEvents:EventID63</EngineeringReference>
 <DescriptionTextId>6393</DescriptionTextId>   <!--  6393 => "The output frequency has exceeded a specified range for a specified period of time."  -->
 <LabelTextId>6392</LabelTextId>   <!--  6392 => "Output Of/Uf"  -->
 <EventDefn>
  <DataId>5144</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5145</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_modAlarmActive</ProgrammaticName>
 <EngineeringDescription>Becomes active when any module reports an active alarm or fault to the SCC.
Recovers when all modules are not reporting an active alarm or fault to the SCC.</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event201</EngineeringReference>
 <DescriptionTextId>6395</DescriptionTextId>   <!--  6395 => "Active alarm or fault of any module in a multi-module system"  -->
 <LabelTextId>6394</LabelTextId>   <!--  6394 => "MMS Module Alarm Active"  -->
 <EventDefn>
  <DataId>5145</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5146</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_pumpDownIssue</ProgrammaticName>
 <EngineeringDescription>Unable to pump down suction-side pressure during compressor shutdown.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_pumpDownIssueEnable
st_comp_pumpDownIssueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6397</DescriptionTextId>   <!--  6397 => "Unable to pump down suction-side pressure during compressor shutdown."  -->
 <LabelTextId>6396</LabelTextId>   <!--  6396 => "Compressor Pump Down Issue"  -->
 <EventDefn>
  <DataId>5146</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5147</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_snsrRetAirIssue</ProgrammaticName>
 <EngineeringDescription>The air sensor at the inlet of the unit is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6399</DescriptionTextId>   <!--  6399 => "The air sensor at the inlet of the unit is disconnected or the signal is out of range."  -->
 <LabelTextId>6398</LabelTextId>   <!--  6398 => "Return Air Sensor Issue"  -->
 <EventDefn>
  <DataId>5147</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5148</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_highPrsXdcrIssue</ProgrammaticName>
 <EngineeringDescription>Compressor high pressure transducer is disconnected or the signal is out of range.  The event is deactivated when transducer signal is re-established.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6401</DescriptionTextId>   <!--  6401 => "Compressor high pressure transducer is disconnected or the signal is out of range."  -->
 <LabelTextId>6400</LabelTextId>   <!--  6400 => "Compressor  High Pressure Transducer Issue"  -->
 <EventDefn>
  <DataId>5148</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'nxr.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5149</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bat_notQualified</ProgrammaticName>
 <EngineeringDescription>The UPS battery voltage is not qualified. This event will be detected even in the absence of battery disconnect or when battery disconnecit is open. This event will also become active when the main battery disconnect is open.

NXr Specific - The rectifier DSP determines the no battery alarm by detecting any of the following conditions:
1.The positive or negative battery voltage RMS is less than 100V, when charger is on. This condition causes "no battery" warning immediately.
2.The positive or negative battery voltage RMS is less than 100V and more than -60V when charger is off. This condition causes "no battery" warning immediately.
3.The positive or negative battery voltage is less than 60V and more than -60V for 2ms.

Action:The rectifier DSP will shut down battery charger and discharger on faulty module. And all power modules connected to the same battery can detect this alarm.

Recovery:For the first two conditions, the alarm will be cleared automatically 10s after the signal of no battery disappears. For the third condition, the alarm will disappear automatically 1s after the signal of no battery disappears. Otherwise, "maintenance mode" is required. Check the relevant wires of battery and connect the battery again. If the battery is correctly connected, then check the relevant cables connecting from M2 board to U1 DSP board. Else replace the M2 and/or U1 board if necessary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6403</DescriptionTextId>   <!--  6403 => "The UPS battery voltage is not qualified. This event will be detected even in the absence of battery disconnect or when it is open."  -->
 <LabelTextId>6402</LabelTextId>   <!--  6402 => "Battery Not Qualified"  -->
 <EventDefn>
  <DataId>5149</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5150</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bat_reverse</ProgrammaticName>
 <EngineeringDescription>The measured battery voltage is a negative value due to reversed battery terminal connections.

NXr Specific:
Valid for:Immediately

Condition:The positive or negative battery voltage is less than -60V.

Action req'd:The rectifier DSP will shut down battery charger and discharger on faulty module. And all power modules connected to the same battery can detect this alarm.

Recovery:The alarm will be cleared automatically after 10s when the battery voltage larger than -60V. Otherwise, "maintenance mode" is required. Check the relevant wires of battery and connect the battery again. If the battery is correctly connected, then check the relevant cables connecting from M2 board to U1 board. Else replace the M2 and/or U1 board if necessary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6405</DescriptionTextId>   <!--  6405 => "The measured battery voltage is a negative value due to reverse battery terminal connections."  -->
 <LabelTextId>6404</LabelTextId>   <!--  6404 => "Battery Terminals Reversed"  -->
 <EventDefn>
  <DataId>5150</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5151</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bat_converterFail</ProgrammaticName>
 <EngineeringDescription>Battery converter failure. The power sub-module rectifier will shutdown. If other power sub-module inverters are available, the UPS module will continue supporting the load. If not enough inverters are available, the multi-module system will transfer to bypass if bypass is available.This is a summary event caused by one or more power sub-modules in a UPS module.

NXr Specific:
Valid for:Depend on conditions.
Condition:The rectifier DSP determines the battery converter fault by detecting any of the following conditions when the rectifier is working in the battery mode (we call it discharger below):
- DC bus voltage of positive or negative side is more than 486V in hardware. This sets "batt. converter fault" for 20ms.
- DC bus voltage of positive or negative side is more than 450V for 8.4s when discharger is on.
- DC bus voltage of positive or negative side is less than 260V for 400ms when discharger is on and finishes the soft start stage.

Action req'd:   If only the faulty module installed the rectifier will be shut down and the inverter DSP will make the system transfer from inverter side to bypass side if the bypass is qualified. Otherwise, system shutdown will occur. If other modules are installed and operating they will continue supporting load on inverter and DSP will shut down faulty power module and open its output relay.

Recovery:   Manual recovery is required. Otherwise, enter "maintenance mode". Check every module parallel cable. If the connection is right and tight, it should be considered to replace the PFC MOSFETs, their drive board A1 and/or U1 board if necessary.
In addition, the battery converter fault may be set by the rectifier DSP if the input neutral wire is lost. So the input neutral wire should be checked.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6407</DescriptionTextId>   <!--  6407 => "Battery converter failure. This is a summary event caused by one or more power sub-modules in a UPS module."  -->
 <LabelTextId>6406</LabelTextId>   <!--  6406 => "Battery Converter Failure"  -->
 <EventDefn>
  <DataId>5151</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5152</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_inv_ssSCROpen</ProgrammaticName>
 <EngineeringDescription>The system has detected an Open across one or more inverter static switch Silicon Controlled Rectifiers. Once asserted, the system
 requires service to clear the event.

NXr Specific - Also see evt_inv_ssSCRShort since the specific description discusses both Open and Short conditions.
Valid for:      Depend on conditions

Condition:  The inverter DSP determines the inverter SCR failure by detecting any of the following conditions:
-At least one phase output voltage RMS is more than 120V for 1s. Maintenance bypass switch is open and without bypass SCR's drive signal and inverter output relay's drive signal. Especially for parallel system, system must be in the bypass side and without bypass SCR's drive signal in the bus. If the inverter isn't off, these conditions will cause the inverter relay short circuit fault.
-When the inverter is off, any one phase output voltage RMS is more than 120V. The local inverter relay is open. The difference between output voltage and inverter voltage is less than 20V. The inverter current RMS is more than 4.4% of nominal current. All these conditions valid for 500ms will cause the inverter relay short circuit fail.
- When inverter is off, but at least one phase inverter voltage RMS is more than 120V for 10 minutes. This condition will set inverter relay short circuit fault.
- The difference of inverter voltage RMS and output voltage RMS is out of 15% nominal output voltage with inverter relay's drive valid for 5s. This sets inverter relay open circuit fault.
- The difference of inverter voltage and output voltage is more than 54V with inverter relay's drive valid for 5.25ms (or more than 108V with inverter relay's drive valid for 2.625ms, or more than 162V with inverter relay's drive valid for 1.3125ms). This sets inverter relay open circuit fault.
- Any one phase apparent power is less than 10% of nominal power and the average apparent power of this phase is more than 30% of nominal power with inverter relay's drive valid for 400ms. This condition will set inverter relay open circuit fault.

Action req'd:   If the inverter relay is short circuit, the inverter DSP will shut down the faulty power module and open the output relay, remaining power modules will continue to maintain load on inverter. If only the faulty module available the power module will shutdown and the system will transfer from inverter side to bypass side if bypass is qualified. Otherwise, system shutdown will occur. The fault is locked until faulty module is power off. If the inverter relay is open circuit, the faulty module will turn off the inverter if bypass is qualified or the number of modules which are working in the inverter side is more than 1 in the system. Otherwise, the inverter works continuously. The fault is locked until faulty module is power off.

Recovery:   "Maintenance mode" is required. Check that the inverter relay is open circuit or short circuit, also check the drive circuit. Replace them if necessary. If the inverter relay is ok, then check the relevant wires from U1 board to M2 board. Else replace the M2, and/or U1 board if necessary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6409</DescriptionTextId>   <!--  6409 => "The system has detected an Open across one or more inverter static switch Silicon Controlled Rectifiers. "  -->
 <LabelTextId>6408</LabelTextId>   <!--  6408 => "Inverter SCR Open"  -->
 <EventDefn>
  <DataId>5152</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5153</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_load_sharingFault</ProgrammaticName>
 <EngineeringDescription>Difference between any phase inverter current of unit and the relevant average output current of parallel system is more than a specific % of nominal current.

NXr Specific:
Valid for:  1.25s
Condition: Difference between any phase inverter current of unit and the relevant average output current of parallel system is more than 30% of nominal current.
Action req'd:   None.

Recovery:   The alarm will be cleared after 1.25s if the differences of three phases' current are less than 30% of nominal current. Otherwise, "maintenance mode" is required. Verify the power connection of output in parallel system. Verify the connection status of module parallel cables. Verify the waveform or stability of output voltage. Check the relevant wires from M2 board to U1 control board. Else replace the X3 and/or M2 and/or U1 board if necessary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6411</DescriptionTextId>   <!--  6411 => "Difference between any phase inverter current of unit and the relevant average output current of parallel system is more than a specific % of nominal current."  -->
 <LabelTextId>6410</LabelTextId>   <!--  6410 => "Load Sharing Fault"  -->
 <EventDefn>
  <DataId>5153</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5154</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_dcb_ep_abnormal</ProgrammaticName>
 <EngineeringDescription>The system has detected an abnormal DC Bus Voltage.

NXr Specific -
DC BUS ABNORMAL
Valid for:  Depend on conditions

Condition:  The inverter DSP determines the DC bus abnormal fault by detecting any of the following conditions when inverter is on:
- Sum of positive DC bus voltage and negative DC bus voltage is less than 560V, valid for immediacy.
- Sum of positive DC bus voltage and negative DC bus voltage is less than 620V for 10s.
- Either positive DC bus voltage or negative DC bus voltage is more than 486V in hardware for 3ms when inverter is on.
- Rectifier is off when inverter is on.

Action req'd:   The inverter DSP on faulty module will take the power module off line and remaining power modules will maintain load on inverter. If only faulty module available system will transfer from inverter side to bypass side if bypass is qualified. Otherwise, system shutdown will occur.

Recovery:   If the inverter transfers from bypass side to inverter side automatically after dc bus recoveries normal, then check that the user has added large load to the UPS. Suggest user avoid applying large impact load abruptly. Otherwise, then enter "maintenance mode", check if there are relevant faults in rectifier side such as "Rectifier fault", if not, check BUS_+ BUS_- and BUS_N. If there is short circuit, repair it. Otherwise, check the relevant signals from M2 board to U1 control board. Else replace the M2 and/or U1 board if necessary.

DC BUS OVER VOLTAGE
Valid for:  3ms

Condition:  The inverter DSP determines the DC bus over voltage fault when the positive DC bus voltage or negative DC bus voltage is more than 486V in hardware.

Action req'd:   The inverter DSP on faulty module will take the power module off line and remaining power modules will maintain load on inverter if only faulty module available system will transfer from inverter side to bypass side if bypass is qualified. Otherwise, system shutdown will occur.

Recovery:   Manual recovery is required. Otherwise, enter "maintenance mode". Check if there is a fault in rectifier side. If not, then check if bypass SCR short circuit occurs. And make sure that the module parallel cables are connected correctly. Check the relevant wires from M2 board to U1 board. Else replace the M2 and/or U1 board if necessary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6413</DescriptionTextId>   <!--  6413 => "The system has detected an abnormal DC Bus Voltage."  -->
 <LabelTextId>6412</LabelTextId>   <!--  6412 => "DC Bus Abnormal"  -->
 <EventDefn>
  <DataId>5154</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5155</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_inpNeutralLost</ProgrammaticName>
 <EngineeringDescription>Loss of neutral in the input source is detected.

NXr Specific:
Valid for:  Depend on conditions.

Condition:  The rectifier DSP determines this fault by detecting any of the following conditions when the rectifier is working in the mains input mode:
1. All the DC component of the three-phase mains input voltage is more than 20V for 20~64ms when rectifier finish soft start and output relay is closed. The rectifier will transfer to battery mode and return to mains input mode after 5s for the first time. If the condition is fulfilled again in the next 1.5min, "mains neutral lost" will be set.
2. The DC component of input voltage is more than 20V for 400ms while rectifier is in soft start stage.

Action req'd:   For the 1st condition: once the fault is determined, the rectifier will be locked in battery mode.
            For the 2nd condition: the faulty module will turn off rectifier and can't work in battery mode. As a result, the inverter can't start either in the faulty module.

Recovery:   Manual recovery is required. Otherwise, enter "maintenance mode" and check the input neutral wire.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6415</DescriptionTextId>   <!--  6415 => "Loss of neutral in the input source is detected."  -->
 <LabelTextId>6414</LabelTextId>   <!--  6414 => "Mains Input Neutral Lost"  -->
 <EventDefn>
  <DataId>5155</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5156</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_loadImpactTransfer</ProgrammaticName>
 <EngineeringDescription>On bypass as result of load impact.

NXr Specific-
Valid for:  About 7ms

Condition:  The inverter DSP determines the load impact transfer if the inverter output voltage is less than 60% nominal inverter voltage for 7ms, and bypass is in the sync. range, and system is locked, and the deviation of bypass voltage RMS of three phases from output nominal voltage does not exceed 8%, and without bypass SCR open fault.

Action req'd:   The faulty module will transfer from inverter side to bypass side and send signal to other modules to make them transfer to bypass side.

Recovery:   The system will retransfer to inverter side automatically if the load is less than 95% load capacity of inverter-on modules. Suggest user avoid applying large impact load abruptly or short circuit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6417</DescriptionTextId>   <!--  6417 => "On bypass as result of load impact."  -->
 <LabelTextId>6416</LabelTextId>   <!--  6416 => "Load Impact Transfer"  -->
 <EventDefn>
  <DataId>5156</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5157</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_userOperationInvalid</ProgrammaticName>
 <EngineeringDescription>User attempted an invalid operation. This is a notification event.

Example: User closed the maintenance bypass switch while module is on inverter.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6419</DescriptionTextId>   <!--  6419 => "User attempted an invalid operation."  -->
 <LabelTextId>6418</LabelTextId>   <!--  6418 => "User Operation Invalid"  -->
 <EventDefn>
  <DataId>5157</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5158</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_power_sub_module_fault</ProgrammaticName>
 <EngineeringDescription>Inverter DSP or Rectifier DSP  detect one fault in the power sub module.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6421</DescriptionTextId>   <!--  6421 => "In power module,inverter DSP or rectifier DSP detect one fault."  -->
 <LabelTextId>6420</LabelTextId>   <!--  6420 => "Power Sub Module Fault"  -->
 <EventDefn>
  <DataId>5158</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5159</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outCreFactPhsA</ProgrammaticName>
 <EngineeringDescription>System output current crest factor Phase A.
peak factor =  (peak value of output current)/ (RMS value of output current).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6423</DescriptionTextId>   <!--  6423 => "Output current crest factor of Phase A."  -->
 <LabelTextId>6422</LabelTextId>   <!--  6422 => "Output Current Crest Factor Phs A"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5160</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outCreFactPhsB</ProgrammaticName>
 <EngineeringDescription>System output current crest factor Phase B.
peak factor =  (peak value of output current)/ (RMS value of output current).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6425</DescriptionTextId>   <!--  6425 => "Output current crest factor of Phase B."  -->
 <LabelTextId>6424</LabelTextId>   <!--  6424 => "Output Current Crest Factor Phs B"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5161</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outCreFactPhsC</ProgrammaticName>
 <EngineeringDescription>System output current crest factor Phase C.
peak factor =  (peak value of output current)/ (RMS value of output current)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6427</DescriptionTextId>   <!--  6427 => "Output current crest factor of Phase C."  -->
 <LabelTextId>6426</LabelTextId>   <!--  6426 => "Output Current Crest Factor Phs C"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5162</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_inpBusLabel</ProgrammaticName>
 <EngineeringDescription>Identification of the input power source. A label strictly for the benefit of the user to differentiate two different input power sources, on units that have two, with labels such as primary/secondary, or preferred/backup.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6429</DescriptionTextId>   <!--  6429 => "Identification of the input power source."  -->
 <LabelTextId>6428</LabelTextId>   <!--  6428 => "Input Source Label"  -->
 <TextDefn>
  <DataId>5162</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5163</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_outBusLabel</ProgrammaticName>
 <EngineeringDescription>A label to differentiate two different transformer outputs, e.g. primary/secondary.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6431</DescriptionTextId>   <!--  6431 => "Label for output of a multi-output transformer."  -->
 <LabelTextId>6430</LabelTextId>   <!--  6430 => "Output Power Label"  -->
 <TextDefn>
  <DataId>5163</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5164</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outRmsPhsN</ProgrammaticName>
 <EngineeringDescription>The system output RMS current for Neutral phase.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6433</DescriptionTextId>   <!--  6433 => "The system output RMS current for Neutral phase."  -->
 <LabelTextId>6432</LabelTextId>   <!--  6432 => "Output Neutral Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5165</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outRmsGnd</ProgrammaticName>
 <EngineeringDescription>The RMS Current flowing to Ground.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6435</DescriptionTextId>   <!--  6435 => "The RMS Current flowing to Ground"  -->
 <LabelTextId>6434</LabelTextId>   <!--  6434 => "Ground Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5166</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_enrg_out</ProgrammaticName>
 <EngineeringDescription>Total accumulated energy output, since last energy reset. Writing a value of zero causes the accumulated energy to be reset.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6437</DescriptionTextId>   <!--  6437 => "Total accumulated energy output, since last energy reset."  -->
 <LabelTextId>6436</LabelTextId>   <!--  6436 => "Branch Accumulated Energy"  -->
 <NumericDefn>
  <MeasureBaseId>10</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5167</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_na_pwrFactOut</ProgrammaticName>
 <EngineeringDescription>Total power factor, which is real power/apparent power for all output phases combined. This is the sum of the real power for phases A, B, and C divided by the sum of the apparent power for phases A, B, and C.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6439</DescriptionTextId>   <!--  6439 => "Total power factor, real power/apparent power for all phases combined"  -->
 <LabelTextId>6438</LabelTextId>   <!--  6438 => "Output Power Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5168</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_ecOutRating</ProgrammaticName>
 <EngineeringDescription>The percentage of the system's total rated output current that is flowing from the system.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6441</DescriptionTextId>   <!--  6441 => "The percentage of the system's total rated output current that is flowing from the system."  -->
 <LabelTextId>6440</LabelTextId>   <!--  6440 => "Output Percent Load"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5169</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_epThdOutPhsA</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the voltage for phase A.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6443</DescriptionTextId>   <!--  6443 => "The percentage of Total Harmonic Distortion of the voltage for phase A."  -->
 <LabelTextId>6442</LabelTextId>   <!--  6442 => "Output Voltage Phs A THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5170</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_epThdOutPhsB</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the voltage for phase B.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6445</DescriptionTextId>   <!--  6445 => "The percentage of Total Harmonic Distortion of the voltage for phase B."  -->
 <LabelTextId>6444</LabelTextId>   <!--  6444 => "Output Voltage Phs B THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5171</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_epThdOutPhsC</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the voltage for phase C.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6447</DescriptionTextId>   <!--  6447 => "The percentage of Total Harmonic Distortion of the voltage for phase C."  -->
 <LabelTextId>6446</LabelTextId>   <!--  6446 => "Output Voltage Phs C THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5172</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_ecThdOutPhsA</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current for phase A.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6449</DescriptionTextId>   <!--  6449 => "The percentage of Total Harmonic Distortion of the current for phase A."  -->
 <LabelTextId>6448</LabelTextId>   <!--  6448 => "Output Current Phs A THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5173</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_ecThdOutPhsB</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current for phase B.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6451</DescriptionTextId>   <!--  6451 => "The percentage of Total Harmonic Distortion of the current for phase B."  -->
 <LabelTextId>6450</LabelTextId>   <!--  6450 => "Output Current Phs B THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5174</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_ecThdOutPhsC</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current for phase C.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6453</DescriptionTextId>   <!--  6453 => "The percentage of Total Harmonic Distortion of the current for phase C."  -->
 <LabelTextId>6452</LabelTextId>   <!--  6452 => "Output Current Phs C THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5175</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outKFactPhsA</ProgrammaticName>
 <EngineeringDescription>Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics.

PM4 Specific behavior: Only the first 16 harmonics are used in this measurement.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6455</DescriptionTextId>   <!--  6455 => "Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics."  -->
 <LabelTextId>6454</LabelTextId>   <!--  6454 => "Output Current Phs A K-Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5176</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outKFactPhsB</ProgrammaticName>
 <EngineeringDescription>Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6455</DescriptionTextId>   <!--  6455 => "Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics."  -->
 <LabelTextId>6456</LabelTextId>   <!--  6456 => "Output Current Phs B K-Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5177</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ec_outKFactPhsC</ProgrammaticName>
 <EngineeringDescription>Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6455</DescriptionTextId>   <!--  6455 => "Ratio of the sum of the squares of the first 34 current harmonics, scaled by their harmonic index, divided by the sum of the squares of those harmonics. This is useful as an indicator of transformer heating due to harmonics."  -->
 <LabelTextId>6457</LabelTextId>   <!--  6457 => "Output Current Phs C K-Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5178</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_epOutOverLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the phase voltages of this unit has exceeded the limit.

The event clears when all the voltages return to normal.

PM4 Specific behavior: Default limit is +6% of nominal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6459</DescriptionTextId>   <!--  6459 => "One or more of the output phase voltages has exceeded the limit."  -->
 <LabelTextId>6458</LabelTextId>   <!--  6458 => "Output Overvoltage"  -->
 <EventDefn>
  <DataId>5178</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5179</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_epOutUnderLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the output phase voltages of this unit is below the low voltage limit.

Event is cleared when all voltages return to normal.

PM4 Specific behavior: Default limit is -13% of nominal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6461</DescriptionTextId>   <!--  6461 => "One or more of the output phase voltages has dropped below the limit."  -->
 <LabelTextId>6460</LabelTextId>   <!--  6460 => "Output Undervoltage"  -->
 <EventDefn>
  <DataId>5179</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5180</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ecOutOverLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the phase currents has exceeded the limit.

This event clears when the all phase currents return to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6463</DescriptionTextId>   <!--  6463 => "One or more of the phase currents has exceeded the limit."  -->
 <LabelTextId>6462</LabelTextId>   <!--  6462 => "Output Overcurrent"  -->
 <EventDefn>
  <DataId>5180</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5181</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ecNeutOverLimit</ProgrammaticName>
 <EngineeringDescription>The system's neutral current has exceeded the limit.

This event clears when the neutral current returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6465</DescriptionTextId>   <!--  6465 => "The system's neutral current has exceeded the limit."  -->
 <LabelTextId>6464</LabelTextId>   <!--  6464 => "Neutral Overcurrent"  -->
 <EventDefn>
  <DataId>5181</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5182</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ecGndOverLimit</ProgrammaticName>
 <EngineeringDescription>System ground current has exceeded the limit.

This event clears when the current returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6467</DescriptionTextId>   <!--  6467 => "System ground current has exceeded the limit."  -->
 <LabelTextId>6466</LabelTextId>   <!--  6466 => "Ground Overcurrent"  -->
 <EventDefn>
  <DataId>5182</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5183</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_epThdOutOverLimit</ProgrammaticName>
 <EngineeringDescription>The Total Harmonic Distortion of the voltage on one or more of the output phases  has exceeded the limit.

This event clears when the voltage THD returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6469</DescriptionTextId>   <!--  6469 => "The Total Harmonic Distortion of the voltage on one or more of the output phases has exceeded the limit."  -->
 <LabelTextId>6468</LabelTextId>   <!--  6468 => "Output Voltage THD"  -->
 <EventDefn>
  <DataId>5183</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5184</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_freqOutErr</ProgrammaticName>
 <EngineeringDescription>The output frequency is outside a specified range.

This event clears when the frequency returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6471</DescriptionTextId>   <!--  6471 => "The output frequency is outside a specified range."  -->
 <LabelTextId>6470</LabelTextId>   <!--  6470 => "Output Frequency Error"  -->
 <EventDefn>
  <DataId>5184</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5185</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_tmpXfmrOverLimit</ProgrammaticName>
 <EngineeringDescription>Indicates a unit transformer overtemperature condition. Possible causes include, but is not limited to the following: unit overload, excessive non-linear loading, inadequate ventilation, high or low input voltage, or monitoring malfunction.

This event clears when transformer temperature returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6473</DescriptionTextId>   <!--  6473 => "Indicates a unit transformer overtemperature condition."  -->
 <LabelTextId>6472</LabelTextId>   <!--  6472 => "Transformer Overtemperature"  -->
 <EventDefn>
  <DataId>5185</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5186</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_pnl_label</ProgrammaticName>
 <EngineeringDescription>A configurable label which identifes this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6475</DescriptionTextId>   <!--  6475 => "A configurable label which identifies this panel."  -->
 <LabelTextId>6474</LabelTextId>   <!--  6474 => "Panel Label"  -->
 <TextDefn>
  <DataId>5186</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5187</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ep_rmsPhsAB</ProgrammaticName>
 <EngineeringDescription>The RMS voltage between phases A and B at this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6477</DescriptionTextId>   <!--  6477 => "The RMS voltage between phases A and B at this panel."  -->
 <LabelTextId>6476</LabelTextId>   <!--  6476 => "Panel Main Voltage A-B"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5188</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ep_rmsPhsBC</ProgrammaticName>
 <EngineeringDescription>The RMS voltage between phases B and C at this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6479</DescriptionTextId>   <!--  6479 => "The RMS voltage between phases B and C at this panel."  -->
 <LabelTextId>6478</LabelTextId>   <!--  6478 => "Panel Main Voltage B-C"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5189</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ep_rmsPhsCA</ProgrammaticName>
 <EngineeringDescription>The RMS voltage between phases C and A at this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6481</DescriptionTextId>   <!--  6481 => "The RMS voltage between phases C and A at this panel."  -->
 <LabelTextId>6480</LabelTextId>   <!--  6480 => "Panel Main Voltage C-A"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5190</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ep_rmsPhsAN</ProgrammaticName>
 <EngineeringDescription>The RMS voltage between Phase A and Neutral at this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6483</DescriptionTextId>   <!--  6483 => "The RMS voltage between Phase A and Neutral at this panel."  -->
 <LabelTextId>6482</LabelTextId>   <!--  6482 => "Panel Main Voltage A-N"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5191</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ep_rmsPhsBN</ProgrammaticName>
 <EngineeringDescription>The RMS voltage between Phase B and Neutral at this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6485</DescriptionTextId>   <!--  6485 => "The RMS voltage between Phase B and Neutral at this panel."  -->
 <LabelTextId>6484</LabelTextId>   <!--  6484 => "Panel Main Voltage B-N"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5192</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ep_rmsPhsCN</ProgrammaticName>
 <EngineeringDescription>The RMS voltage between Phase C and Neutral at this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6487</DescriptionTextId>   <!--  6487 => "The RMS voltage between Phase C and Neutral at this panel."  -->
 <LabelTextId>6486</LabelTextId>   <!--  6486 => "Panel Main Voltage C-N"  -->
 <NumericDefn>
  <MeasureBaseId>2</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5193</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_rmsPhsA</ProgrammaticName>
 <EngineeringDescription>The RMS current for phase A of this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6489</DescriptionTextId>   <!--  6489 => "The RMS current for phase A of this panel."  -->
 <LabelTextId>6488</LabelTextId>   <!--  6488 => "Panel Main Current Phs A"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5194</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_rmsPhsB</ProgrammaticName>
 <EngineeringDescription>The RMS current for phase B of this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6491</DescriptionTextId>   <!--  6491 => "The RMS current for phase B of this panel."  -->
 <LabelTextId>6490</LabelTextId>   <!--  6490 => "Panel Main Current Phs B"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5195</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_rmsPhsC</ProgrammaticName>
 <EngineeringDescription>The RMS current for phase C of this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6493</DescriptionTextId>   <!--  6493 => "The RMS current for phase C of this panel."  -->
 <LabelTextId>6492</LabelTextId>   <!--  6492 => "Panel Main Current Phs C"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5196</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_rmsPhsN</ProgrammaticName>
 <EngineeringDescription>The RMS current for the Neutral phase of this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6495</DescriptionTextId>   <!--  6495 => "The RMS current for the Neutral phase of this panel."  -->
 <LabelTextId>6494</LabelTextId>   <!--  6494 => "Panel Main Neutral Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5197</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_rmsGnd</ProgrammaticName>
 <EngineeringDescription>The RMS Ground current for this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6497</DescriptionTextId>   <!--  6497 => "The RMS Ground current for this panel."  -->
 <LabelTextId>6496</LabelTextId>   <!--  6496 => "Panel Main Ground Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5198</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ap_out</ProgrammaticName>
 <EngineeringDescription>The total apparent power of all phases in this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6499</DescriptionTextId>   <!--  6499 => "The total apparent power of all phases in this panel."  -->
 <LabelTextId>6498</LabelTextId>   <!--  6498 => "Panel Main Output Apparent Power"  -->
 <NumericDefn>
  <MeasureBaseId>4</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5199</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pwr_out</ProgrammaticName>
 <EngineeringDescription>The total real power of all phases in this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6501</DescriptionTextId>   <!--  6501 => "The total real power of all phases in this panel."  -->
 <LabelTextId>6500</LabelTextId>   <!--  6500 => "Panel Main Output Real Power"  -->
 <NumericDefn>
  <MeasureBaseId>6</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5200</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_enrg_out</ProgrammaticName>
 <EngineeringDescription>Total accumulated energy output of this panel, since last energy reset. Writing a value of zero causes the accumulated energy to be reset.

PM4 Specific Behavior: Resetting the accumulated energy for a panel also resets the accumulated energy for all branches in that panel. This is the only method for resetting the accumulated energy of branches. This is not true for subfeeds. All subfeeds must be reset individually.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6503</DescriptionTextId>   <!--  6503 => "Total accumulated energy output of this panel, since last energy reset. It is the sum of accumulated energy for all phases."  -->
 <LabelTextId>6502</LabelTextId>   <!--  6502 => "Panel Main Accumulated Energy"  -->
 <NumericDefn>
  <MeasureBaseId>10</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5201</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_na_pwrFact</ProgrammaticName>
 <EngineeringDescription>The power factor, real power/apparent power for all phases combined for this panel. This is the sum of the real power for phases A, B, and C divided by the sum of the apparent power for phases A, B, and C.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6505</DescriptionTextId>   <!--  6505 => "The power factor, real power/apparent power for all phases combined for this panel."  -->
 <LabelTextId>6504</LabelTextId>   <!--  6504 => "Panel Main Output Power Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5202</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_ecRating</ProgrammaticName>
 <EngineeringDescription>The percentage of this panel's total rated current capacity flowing through this panel.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6507</DescriptionTextId>   <!--  6507 => "The percentage of this panel's rated current capacity flowing through this panel."  -->
 <LabelTextId>6506</LabelTextId>   <!--  6506 => "Panel Main Output Percent Load"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5203</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_epThdPhsA</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the voltage for phase A of this panel.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6509</DescriptionTextId>   <!--  6509 => "The percentage of Total Harmonic Distortion of the voltage for phase A of this panel."  -->
 <LabelTextId>6508</LabelTextId>   <!--  6508 => "Panel Main Voltage Phs A THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5204</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_epThdPhsB</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the voltage for phase B of this panel.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6511</DescriptionTextId>   <!--  6511 => "The percentage of Total Harmonic Distortion of the voltage for phase B of this panel."  -->
 <LabelTextId>6510</LabelTextId>   <!--  6510 => "Panel Main Voltage Phs B THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5205</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_epThdPhsC</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the voltage for phase C of this panel.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6513</DescriptionTextId>   <!--  6513 => "The percentage of Total Harmonic Distortion of the voltage for phase C of this panel."  -->
 <LabelTextId>6512</LabelTextId>   <!--  6512 => "Panel Main Voltage Phs C THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5206</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_ecThdPhsA</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current for phase A of this panel.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6515</DescriptionTextId>   <!--  6515 => "The percentage of Total Harmonic Distortion of the current for phase A of this panel."  -->
 <LabelTextId>6514</LabelTextId>   <!--  6514 => "Panel Main Current Phs A THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5207</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_ecThdPhsB</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current for phase B of this panel.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6517</DescriptionTextId>   <!--  6517 => "The percentage of Total Harmonic Distortion of the current for phase B of this panel."  -->
 <LabelTextId>6516</LabelTextId>   <!--  6516 => "Panel Main Current Phs B THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5208</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_pct_ecThdPhsC</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current for phase C of this panel.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6519</DescriptionTextId>   <!--  6519 => "The percentage of Total Harmonic Distortion of the current for phase C of this panel."  -->
 <LabelTextId>6518</LabelTextId>   <!--  6518 => "Panel Main Current Phs C THD"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5209</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_creFactPhsA</ProgrammaticName>
 <EngineeringDescription>The ratio of the peak current amplitude divided by the RMS amplitude for phase A of this panel</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6521</DescriptionTextId>   <!--  6521 => "The ratio of the peak current amplitude divided by the RMS amplitude for phase A of this panel."  -->
 <LabelTextId>6520</LabelTextId>   <!--  6520 => "Panel Main Current Phs A Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5210</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_creFactPhsB</ProgrammaticName>
 <EngineeringDescription>The ratio of the peak current amplitude divided by the RMS current amplitude for phase B of this panel</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6523</DescriptionTextId>   <!--  6523 => "The ratio of the peak current amplitude divided by the RMS amplitude for phase B of this panel"  -->
 <LabelTextId>6522</LabelTextId>   <!--  6522 => "Panel Main Current Phs B Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5211</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pnl_ec_creFactPhsC</ProgrammaticName>
 <EngineeringDescription>The ratio of the peak current amplitude divided by the RMS current amplitude for phase C of this panel</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6525</DescriptionTextId>   <!--  6525 => "The ratio of the peak current amplitude divided by the RMS amplitude for phase C of this panel"  -->
 <LabelTextId>6524</LabelTextId>   <!--  6524 => "Panel Main Current Phs C Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5212</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pnl_summaryStatus</ProgrammaticName>
 <EngineeringDescription>The status for the panel.  Detects and annunciates upon occurrence of any branch or panelboard main breaker active event.

This event clears when no branch or panelboard main breaker alarms are active.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6527</DescriptionTextId>   <!--  6527 => "The status for the panel. Detects and annunciates upon occurrence of any branch or panelboard main breaker active event."  -->
 <LabelTextId>6526</LabelTextId>   <!--  6526 => "Panel Summary Status"  -->
 <EventDefn>
  <DataId>5212</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5213</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pnl_epOverLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the phase voltages of this panel has exceeded the limit.

This event clears when all phase voltages return to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6529</DescriptionTextId>   <!--  6529 => "One or more of the phase voltages of this panel has exceeded the limit."  -->
 <LabelTextId>6528</LabelTextId>   <!--  6528 => "Panel Overvoltage"  -->
 <EventDefn>
  <DataId>5213</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5214</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pnl_epUnderLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the phase voltages of this panel is less than the limit.

This event clears when all voltages have returned to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6531</DescriptionTextId>   <!--  6531 => "One or more of the phase voltages of this panel is less than the limit."  -->
 <LabelTextId>6530</LabelTextId>   <!--  6530 => "Panel Undervoltage"  -->
 <EventDefn>
  <DataId>5214</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5215</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pnl_ecPhsOverLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the phase currents of this panel has exceeded the limit.

This event clears when the currents in all phases has decreased below the limit.

PM4 Specific: This event has a warning state and an alarm state. The limits are user configurable.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6533</DescriptionTextId>   <!--  6533 => "One or more of the phase currents of this panel has exceeded the limit."  -->
 <LabelTextId>6532</LabelTextId>   <!--  6532 => "Panel Overcurrent"  -->
 <EventDefn>
  <DataId>5215</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5216</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pnl_ecNeutOverLimit</ProgrammaticName>
 <EngineeringDescription>The Neutral current of this panel has exceeded the limit.

This event clears when the neutral current returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6535</DescriptionTextId>   <!--  6535 => "The Neutral current of this panel has exceeded the limit."  -->
 <LabelTextId>6534</LabelTextId>   <!--  6534 => "Panel Neutral Overcurrent"  -->
 <EventDefn>
  <DataId>5216</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5217</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pnl_ecGndOverLimit</ProgrammaticName>
 <EngineeringDescription>The Ground current of this panel has exceeded the limit.

This event clears when the current returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6537</DescriptionTextId>   <!--  6537 => "The Ground current of this panel has exceeded the limit."  -->
 <LabelTextId>6536</LabelTextId>   <!--  6536 => "Panel Ground Overcurrent"  -->
 <EventDefn>
  <DataId>5217</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5218</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_brnch_label</ProgrammaticName>
 <EngineeringDescription>A configurable label which identifes this branch circuit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6539</DescriptionTextId>   <!--  6539 => "A configurable label which identifies this branch circuit."  -->
 <LabelTextId>6538</LabelTextId>   <!--  6538 => "Branch Label"  -->
 <TextDefn>
  <DataId>5218</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5219</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_ec_rmsL1</ProgrammaticName>
 <EngineeringDescription>The RMS current in Line 1 of this branch.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6541</DescriptionTextId>   <!--  6541 => "The RMS current in Line 1 of this branch."  -->
 <LabelTextId>6540</LabelTextId>   <!--  6540 => "Branch Current Line 1"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5220</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_ec_rmsL2</ProgrammaticName>
 <EngineeringDescription>The RMS current in Line 2 of this branch.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6543</DescriptionTextId>   <!--  6543 => "The RMS current in Line 2 of this branch."  -->
 <LabelTextId>6542</LabelTextId>   <!--  6542 => "Branch Current Line 2"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5221</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_ec_rmsL3</ProgrammaticName>
 <EngineeringDescription>The RMS current in Line 3 of this branch.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6545</DescriptionTextId>   <!--  6545 => "The RMS current in Line 3 of this branch."  -->
 <LabelTextId>6544</LabelTextId>   <!--  6544 => "Branch Current Line 3"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5222</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_pwr_out</ProgrammaticName>
 <EngineeringDescription>The total real power of all phases in this branch.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6547</DescriptionTextId>   <!--  6547 => "The total real power of all phases in this branch."  -->
 <LabelTextId>6546</LabelTextId>   <!--  6546 => "Branch Output Real Power"  -->
 <NumericDefn>
  <MeasureBaseId>6</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5223</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_enrg_out</ProgrammaticName>
 <EngineeringDescription>Total accumulated energy output of this branch, since last energy reset. Writing a value of zero causes the accumulated energy to be reset.

PM4 Specific behavior: Accumulated energy values cannot be reset for individual branches. Accumulated energy values for branches are reset by resetting the total accumulated energy for the panel. This is not true for subfeeds.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6548</DescriptionTextId>   <!--  6548 => "Total accumulated energy output of this branch, since last energy reset. It is the sum of accumulated energy for all phases."  -->
 <LabelTextId>6436</LabelTextId>   <!--  6436 => "Branch Accumulated Energy"  -->
 <NumericDefn>
  <MeasureBaseId>10</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5224</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_na_pwrFctr</ProgrammaticName>
 <EngineeringDescription>Total power factor, which is real power/apparent power for all phases in this branch combined. This is the sum of the real power for all phases divided by the sum of the apparent power for all phases.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6550</DescriptionTextId>   <!--  6550 => "Total power factor, which is real power/apparent power for all phases in this branch combined."  -->
 <LabelTextId>6549</LabelTextId>   <!--  6549 => "Branch Output Power Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5225</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_pct_ecRating</ProgrammaticName>
 <EngineeringDescription>The percentage of this branch's total rated current capacity flowing through this  branch.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6552</DescriptionTextId>   <!--  6552 => "The percentage of this branch's total rated current capacity flowing through this branch."  -->
 <LabelTextId>6551</LabelTextId>   <!--  6551 => "Branch Output Percent Load"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5226</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_brnch_ecOverLimit</ProgrammaticName>
 <EngineeringDescription>The current in one or more phases of this branch exceeds the limit.

This event clears when the currents in all phases return to normal.

PM4 specific behavior: This is a multi-state event, with a separate warning limit and alarming limit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6554</DescriptionTextId>   <!--  6554 => "The current in one or more phases of this branch exceeds the limit."  -->
 <LabelTextId>6553</LabelTextId>   <!--  6553 => "Branch Overcurrent"  -->
 <EventDefn>
  <DataId>5226</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5227</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_brnch_ecUnderLimit</ProgrammaticName>
 <EngineeringDescription>The current in one or more phases of this branch is less than the limit.

This event clears when the current in this branch rises above the limit.

PM4 Specific behavior: This is only considered to be a warning and not an alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6556</DescriptionTextId>   <!--  6556 => "The current in one or more phases of this branch is less than the limit."  -->
 <LabelTextId>6555</LabelTextId>   <!--  6555 => "Branch Undercurrent"  -->
 <EventDefn>
  <DataId>5227</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5228</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_subf_label</ProgrammaticName>
 <EngineeringDescription>A configurable label which identifes this subfeed circuit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6558</DescriptionTextId>   <!--  6558 => "A configurable label which identifies this subfeed circuit."  -->
 <LabelTextId>6557</LabelTextId>   <!--  6557 => "Subfeed Label"  -->
 <TextDefn>
  <DataId>5228</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5229</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_rmsPhsA</ProgrammaticName>
 <EngineeringDescription>Subfeed output RMS current for phase A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6560</DescriptionTextId>   <!--  6560 => "Subfeed output RMS current for phase A."  -->
 <LabelTextId>6559</LabelTextId>   <!--  6559 => "Subfeed Current Phs A"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5230</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_rmsPhsB</ProgrammaticName>
 <EngineeringDescription>Subfeed output RMS current for Phase B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6562</DescriptionTextId>   <!--  6562 => "Subfeed output RMS current for Phase B."  -->
 <LabelTextId>6561</LabelTextId>   <!--  6561 => "Subfeed Current Phs B"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5231</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_rmsPhsC</ProgrammaticName>
 <EngineeringDescription>Subfeed output RMS current for Phase C.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6564</DescriptionTextId>   <!--  6564 => "Subfeed output RMS current for Phase C."  -->
 <LabelTextId>6563</LabelTextId>   <!--  6563 => "Subfeed Current Phs C"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5232</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_rmsPhsN</ProgrammaticName>
 <EngineeringDescription>Subfeed RMS current for Neutral.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6566</DescriptionTextId>   <!--  6566 => "Subfeed RMS current for Neutral."  -->
 <LabelTextId>6565</LabelTextId>   <!--  6565 => "Subfeed Neutral Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5233</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_rmsGnd</ProgrammaticName>
 <EngineeringDescription>Subfeed RMS current for Ground.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6568</DescriptionTextId>   <!--  6568 => "Subfeed RMS current for Ground."  -->
 <LabelTextId>6567</LabelTextId>   <!--  6567 => "Subfeed Ground Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5234</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ap_out</ProgrammaticName>
 <EngineeringDescription>Total apparent power output by all phases in this subfeed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6570</DescriptionTextId>   <!--  6570 => "Total apparent power output by all phases in this subfeed."  -->
 <LabelTextId>6569</LabelTextId>   <!--  6569 => "Subfeed Output Apparent Power"  -->
 <NumericDefn>
  <MeasureBaseId>4</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5235</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_pwr_out</ProgrammaticName>
 <EngineeringDescription>Total real power output by all phases in this subfeed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6572</DescriptionTextId>   <!--  6572 => "Total real power output by all phases in this subfeed."  -->
 <LabelTextId>6571</LabelTextId>   <!--  6571 => "Subfeed Output Real Power"  -->
 <NumericDefn>
  <MeasureBaseId>6</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5236</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_enrg_out</ProgrammaticName>
 <EngineeringDescription>Total accumulated energy output of this subfeed, since last energy reset. Writing a value of zero causes the accumulated energy to be reset.

PM4 Specific behavior: Resetting the accumulated energy for a subfeed is done on an individual subfeed basis. Subfeeds in panels are NOT reset when the panel is reset. This is not true for branches. The accumulated energy for branches are reset only when the accumulated energy for the entire panel is reset.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6574</DescriptionTextId>   <!--  6574 => "Total accumulated energy output of this subfeed since last energy reset. It is the sum of accumulated energy for all phases."  -->
 <LabelTextId>6573</LabelTextId>   <!--  6573 => "Subfeed Accumulated Energy"  -->
 <NumericDefn>
  <MeasureBaseId>10</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5237</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_na_pwrFact</ProgrammaticName>
 <EngineeringDescription>The power factor, real power/apparent power for all phases combined for this subfeed. This is the sum of the real power for phases A, B, and C divided by the sum of the apparent power for phases A, B, and C.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6576</DescriptionTextId>   <!--  6576 => "Total power factor, which is real power/apparent power for all subfeed phases combined."  -->
 <LabelTextId>6575</LabelTextId>   <!--  6575 => "Subfeed Power Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5238</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_pct_ecRating</ProgrammaticName>
 <EngineeringDescription>The percentage of the subfeeds total rated output current that is flowing in the subfeed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6578</DescriptionTextId>   <!--  6578 => "The percentage of the subfeeds total rated output current that is flowing in the subfeed."  -->
 <LabelTextId>6577</LabelTextId>   <!--  6577 => "Subfeed Output Percent Load"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5239</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_pct_ecThdPhsA</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current in phase A of this subfeed.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6580</DescriptionTextId>   <!--  6580 => "The percentage of Total Harmonic Distortion of the current in phase A of this subfeed."  -->
 <LabelTextId>6579</LabelTextId>   <!--  6579 => "Subfeed Current Phs A THD"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5240</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_pct_ecThdPhsB</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current in phase B of this subfeed.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6582</DescriptionTextId>   <!--  6582 => "The percentage of Total Harmonic Distortion of the current in phase B of this subfeed."  -->
 <LabelTextId>6581</LabelTextId>   <!--  6581 => "Subfeed Current Phs B THD"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5241</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_pct_ecThdPhsC</ProgrammaticName>
 <EngineeringDescription>The percentage of Total Harmonic Distortion of the current in phase C of this subfeed.

PM4 Specific: Calculated as the square root of the sum of the squares of the amplitude of the first 16 harmonics, divided by the amplitude of the fundemental.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6584</DescriptionTextId>   <!--  6584 => "The percentage of Total Harmonic Distortion of the current in phase C of this subfeed."  -->
 <LabelTextId>6583</LabelTextId>   <!--  6583 => "Subfeed Current Phs C THD"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5242</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_creFactPhsA</ProgrammaticName>
 <EngineeringDescription>The ratio of peak current amplitude divided by the RMS amplitude for phase A of this subfeed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6586</DescriptionTextId>   <!--  6586 => "The ratio of peak current amplitude divided by the RMS amplitude for phase A of this subfeed."  -->
 <LabelTextId>6585</LabelTextId>   <!--  6585 => "Subfeed Current Phs A Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5243</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_creFactPhsB</ProgrammaticName>
 <EngineeringDescription>The ratio of peak current amplitude divided by the RMS amplitude for phase B of this subfeed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6588</DescriptionTextId>   <!--  6588 => "The ratio of peak current amplitude divided by the RMS amplitude for phase B of this subfeed."  -->
 <LabelTextId>6587</LabelTextId>   <!--  6587 => "Subfeed Current Phs B Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5244</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_subf_ec_creFactPhsC</ProgrammaticName>
 <EngineeringDescription>The ratio of peak current amplitude divided by the RMS amplitude for phase C of this subfeed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6590</DescriptionTextId>   <!--  6590 => "The ratio of peak current amplitude divided by the RMS amplitude for phase C of this subfeed."  -->
 <LabelTextId>6589</LabelTextId>   <!--  6589 => "Subfeed Current Phs C Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5245</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_subf_ecPhsOverLimit</ProgrammaticName>
 <EngineeringDescription>One or more of the phase currents in this subfeed has exceeded the limit.

This event clears when the all phase currents return to normal.

PM4 Specific behavior: This is a multi-state event, with a separate warning limit and alarm limit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6592</DescriptionTextId>   <!--  6592 => "One or more of the phase currents in this subfeed has exceeded the limit."  -->
 <LabelTextId>6591</LabelTextId>   <!--  6591 => "Subfeed Phase Overcurrent"  -->
 <EventDefn>
  <DataId>5245</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5246</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_subf_ecNeutOverLimit</ProgrammaticName>
 <EngineeringDescription>The Neutral current in this subfeed has exceeded the limit.

This event clears when the neutral current returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6594</DescriptionTextId>   <!--  6594 => "The Neutral current in this subfeed has exceeded the limit."  -->
 <LabelTextId>6593</LabelTextId>   <!--  6593 => "Subfeed Neutral Overcurrent"  -->
 <EventDefn>
  <DataId>5246</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5247</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_subf_ecGndOverLimit</ProgrammaticName>
 <EngineeringDescription>The Ground current of this subfeed has exceeded the limit.

This event clears when the current returns to normal.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6596</DescriptionTextId>   <!--  6596 => "The Ground current of this subfeed has exceeded the limit."  -->
 <LabelTextId>6595</LabelTextId>   <!--  6595 => "Subfeed Ground Overcurrent"  -->
 <EventDefn>
  <DataId>5247</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5248</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_sys_pgmableEvtName</ProgrammaticName>
 <EngineeringDescription>The configurable name for this event.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6598</DescriptionTextId>   <!--  6598 => "The configurable name for this event."  -->
 <LabelTextId>6597</LabelTextId>   <!--  6597 => "Event Name"  -->
 <TextDefn>
  <DataId>5248</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5249</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_pgmableEvtState</ProgrammaticName>
 <EngineeringDescription>The present state of this digital event input.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6600</DescriptionTextId>   <!--  6600 => "The present state of this digital event input."  -->
 <LabelTextId>6599</LabelTextId>   <!--  6599 => "Event State"  -->
 <EventDefn>
  <DataId>5249</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'new_PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5250</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_crstf_ecOutPhsA</ProgrammaticName>
 <EngineeringDescription>Replace with existing gdd items in future. The ratio of peak current amplitude divided by the RMS amplitude for phase A.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6602</DescriptionTextId>   <!--  6602 => "The ratio of peak current amplitude divided by the RMS amplitude for phase A."  -->
 <LabelTextId>6601</LabelTextId>   <!--  6601 => "Output Current Phs A Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5251</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_crstf_ecOutPhsB</ProgrammaticName>
 <EngineeringDescription>The ratio of peak current amplitude divided by the RMS amplitude for phase B.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6604</DescriptionTextId>   <!--  6604 => "The ratio of peak current amplitude divided by the RMS amplitude for phase B."  -->
 <LabelTextId>6603</LabelTextId>   <!--  6603 => "Output Current Phs B Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5252</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_crstf_ecOutPhsC</ProgrammaticName>
 <EngineeringDescription>The ratio of peak current amplitude divided by the RMS amplitude for phase C.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6606</DescriptionTextId>   <!--  6606 => "The ratio of peak current amplitude divided by the RMS amplitude for phase C."  -->
 <LabelTextId>6605</LabelTextId>   <!--  6605 => "Output Current Phs C Crest Factor"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5253</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_rem_rcpTypeExpanded</ProgrammaticName>
 <EngineeringDescription>The form factor of the receptacles in the module.

For example, this includes the following types:
- NEMA 5-15R
- NEMA 5-20R
- NEMA L5-20R
- NEMA L5-30R
- NEMA L6-20R
- NEMA L6-30R
- IEC 60320 Sheet F C13
- IEC 60320 Sheet J C19
- SEV 1011 Type 12 (Swiss)
- SEV 1011 Type 23 (Swiss)
- BS 1363 Type G (British)
- CEE 7 Type F (Schuko)
- CEE 7 Type E (French)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6608</DescriptionTextId>   <!--  6608 => "The form factor of the receptacles in the module."  -->
 <LabelTextId>6607</LabelTextId>   <!--  6607 => "Branch Receptacle Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4146</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5254</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ec</ProgrammaticName>
 <EngineeringDescription>Module's total measured line current, which is the total current being supplied to the branch receptacles.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6624</DescriptionTextId>   <!--  6624 => "Module's total measured line current, which is the total current being supplied to the branch receptacles."  -->
 <LabelTextId>6623</LabelTextId>   <!--  6623 => "Branch Current"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5255</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ecAvailThrshldAlarm</ProgrammaticName>
 <EngineeringDescription>The amount of current increase allowed before the over current alarm occurs.

The difference between the current measurement high alarm threshold minus the current measurement, limited to be non-negative.  (See val_rem_pct_ecThrshldOverAlarm for the corresponding high alarm threshold.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6626</DescriptionTextId>   <!--  6626 => "The amount of current increase allowed before the over current alarm occurs."  -->
 <LabelTextId>6625</LabelTextId>   <!--  6625 => "Branch Available Current Until Alarm"  -->
 <NumericDefn>
  <MeasureBaseId>3</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5256</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_ecUtlztnRating</ProgrammaticName>
 <EngineeringDescription>The percent of BRM current utilization relative to the BRM's current rating.

The current being drawn divided by the BRM's current rating. The measurement is shown as percentage.  (See val_rem_ec_rated for the BRM's current rating.)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6628</DescriptionTextId>   <!--  6628 => "The percent of BRM current utilization relative to the BRM's current rating."  -->
 <LabelTextId>6627</LabelTextId>   <!--  6627 => "Branch Percent Current Utilization"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5257</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_pct_ecThrshldUnderAlarm</ProgrammaticName>
 <EngineeringDescription>If the module current is below this percentage of the full scale rated value, an under current alarm is activated; see 'evt_rem_ec_under'.

Once activated, the event remains active until the current is above the threshold PLUS a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldUnderAlarm' for the common branch under current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6630</DescriptionTextId>   <!--  6630 => "If the module current is below this percentage of the full scale rated value, an under current alarm is activated."  -->
 <LabelTextId>6629</LabelTextId>   <!--  6629 => "Low Current Alarm Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5258</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_pct_ecThrshldOverWarn</ProgrammaticName>
 <EngineeringDescription>If the module current is above this percentage of the full scale rated value, an over current warning is activated; see 'evt_rem_ec_over'.

Once activated, the event remains active until the current is below the threshold minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldOverWarn' for the common branch over current warning threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6632</DescriptionTextId>   <!--  6632 => "If the module current is above this percentage of the full scale rated value, an over current warning is activated."  -->
 <LabelTextId>6631</LabelTextId>   <!--  6631 => "Over Current Warning Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5259</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_rem_pct_ecThrshldOverAlarm</ProgrammaticName>
 <EngineeringDescription>If the module current is above this percentage of the full scale rated value, an over current alarm is activated; see 'evt_rem_ec_over'.

Once activated, the event remains active until the current is below the threshold  minus a hysteresis level.

NOTE:
- The hysteresis level is product dependent (it may be fixed or programmable).
- Use 'val_rem_pct_ecThrshldOverAlarm' for the common branch over current alarm threshold.

MPX SPECIFIC: The hysteresis level is fixed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6634</DescriptionTextId>   <!--  6634 => "If the module current is above this percentage of the full scale rated value, an over current alarm is activated."  -->
 <LabelTextId>6633</LabelTextId>   <!--  6633 => "Over Current Alarm Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5260</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_rcp_typeExpanded</ProgrammaticName>
 <EngineeringDescription>The receptacle type.

For example, this includes the following types:
- NEMA 5-15R
- NEMA 5-20R
- NEMA L5-20R
- NEMA L5-30R
- NEMA L6-20R
- NEMA L6-30R
- IEC 60320 Sheet F C13
- IEC 60320 Sheet J C19
- SEV 1011 Type 12 (Swiss)
- SEV 1011 Type 23 (Swiss)
- BS 1363 Type G (British)
- CEE 7 Type F (Schuko)
- CEE 7 Type E (French)</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6636</DescriptionTextId>   <!--  6636 => "Receptacle type (form factor)."  -->
 <LabelTextId>6635</LabelTextId>   <!--  6635 => "Receptacle Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4146</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5261</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_rem_lineSources</ProgrammaticName>
 <EngineeringDescription>Branch Receptacle Module power source line configuration (for example, L1-N or L1-L2).

This is used to indicate the lines (L1, L2, L3, N) from which the Branch Receptacle Module and its associated receptacles are being powered.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6638</DescriptionTextId>   <!--  6638 => "Branch Receptacle Module source line configuration (for example, L1-N or L1-L2)."  -->
 <LabelTextId>6637</LabelTextId>   <!--  6637 => "Branch Line Source"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4147</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_SC.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5262</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_comp_tmp_airShutDownLoThrshd</ProgrammaticName>
 <EngineeringDescription>When the temperature of ambient air falls below this lower threshold, the compressor will be shut off.  Correct condensing pressure cannot be achieved when temperature is too low.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_STOP_CO_LT</EngineeringReference>
 <DescriptionTextId>6647</DescriptionTextId>   <!--  6647 => "When the temperature of ambient air falls below this lower threshold, the compressor will be shut off.  Correct condensing pressure cannot be achieved when temperature is too low."  -->
 <LabelTextId>6646</LabelTextId>   <!--  6646 => "Compressor Shut Down - Ambient Air Low Temp Limit"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5263</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_notStopping</ProgrammaticName>
 <EngineeringDescription>Compressor commanded to stop, but continues to run.  Event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCOMPCONT</EngineeringReference>
 <DescriptionTextId>6649</DescriptionTextId>   <!--  6649 => "Compressor commanded to stop, but continues to run."  -->
 <LabelTextId>6648</LabelTextId>   <!--  6648 => "Compressor Not Stopping"  -->
 <EventDefn>
  <DataId>5263</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5264</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_op</ProgrammaticName>
 <EngineeringDescription>Compressor operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MANCOMP_mm</EngineeringReference>
 <DescriptionTextId>6651</DescriptionTextId>   <!--  6651 => "Compressor operational state."  -->
 <LabelTextId>6650</LabelTextId>   <!--  6650 => "Compressor State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5265</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_capacityCtrl</ProgrammaticName>
 <EngineeringDescription>Compressor capacity control state. When 'ON', the cooling capacity of the compressor has been reduced.

iCOM Specific: When 'ON', control decisions based on operational measurements, such as head pressure, can reduce or increase the compressor capacity from its requested cooling capacity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MANCOMPPA_mm</EngineeringReference>
 <DescriptionTextId>6653</DescriptionTextId>   <!--  6653 => "Compressor capacity control state. When 'ON', the cooling capacity of the compressor has been reduced."  -->
 <LabelTextId>6652</LabelTextId>   <!--  6652 => "Compressor Capacity Control State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5266</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_comp_prs_head</ProgrammaticName>
 <EngineeringDescription>Compressor head pressure.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CPRESBAR_mm</EngineeringReference>
 <DescriptionTextId>6655</DescriptionTextId>   <!--  6655 => "Compressor head pressure."  -->
 <LabelTextId>6654</LabelTextId>   <!--  6654 => "Compressor Head Pressure"  -->
 <NumericDefn>
  <MeasureBaseId>15</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5267</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_comp_tm_op</ProgrammaticName>
 <EngineeringDescription>Operating hours for compressor since last reset of this value.
iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURCOMP_mm</EngineeringReference>
 <DescriptionTextId>6657</DescriptionTextId>   <!--  6657 => "Operating hours for compressor since last reset of this value."  -->
 <LabelTextId>6656</LabelTextId>   <!--  6656 => "Compressor Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5268</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_comp_tm_opThreshold</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Compressor Hours Exceeded] event.
See evt_comp_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURCOMPM_mm</EngineeringReference>
 <DescriptionTextId>6659</DescriptionTextId>   <!--  6659 => "Threshold value used in the [Compressor Hours Exceeded] event."  -->
 <LabelTextId>6658</LabelTextId>   <!--  6658 => "Compressor Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5269</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_hrsExceeded</ProgrammaticName>
 <EngineeringDescription>[Compressor Hours] has exceeded [Compressor Hours Threshold].
Event threshold is specified in val_comp_tm_opThreshold.
Value used in comparison against threshold is specified in val_comp_tm_op.

iCOM Specific: This event will deactivate when val_comp_tm_op is manually reset to zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACOMPHOU_mm</EngineeringReference>
 <DescriptionTextId>6661</DescriptionTextId>   <!--  6661 => "[Compressor Hours] has exceeded [Compressor Hours Threshold]."  -->
 <LabelTextId>6660</LabelTextId>   <!--  6660 => "Compressor Hours Exceeded"  -->
 <EventDefn>
  <DataId>5269</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5270</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsHigh</ProgrammaticName>
 <EngineeringDescription>Compressor is shut down due to high head pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsHighEnable
st_comp_prsHighType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALHP_mm</EngineeringReference>
 <DescriptionTextId>6663</DescriptionTextId>   <!--  6663 => "Compressor is shut down due to high head pressure."  -->
 <LabelTextId>6662</LabelTextId>   <!--  6662 => "Compressor High Head Pressure"  -->
 <EventDefn>
  <DataId>5270</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5271</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsLow</ProgrammaticName>
 <EngineeringDescription>Compressor is shut down due to low suction pressure.  The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_prsLowEnable
st_comp_prsLowType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALLP_mm</EngineeringReference>
 <DescriptionTextId>6665</DescriptionTextId>   <!--  6665 => "Compressor is shut down due to low suction pressure."  -->
 <LabelTextId>6664</LabelTextId>   <!--  6664 => "Compressor Low Suction Pressure"  -->
 <EventDefn>
  <DataId>5271</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5272</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_thermOverload</ProgrammaticName>
 <EngineeringDescription>Compressor is shut down due to thermal overload.   The event is deactivated by manual reset.

The behavior of this event may optionally be modified by:
st_comp_thermOverloadEnable
st_comp_thermOverloadType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALTH_mm</EngineeringReference>
 <DescriptionTextId>6667</DescriptionTextId>   <!--  6667 => "Compressor is shut down due to thermal overload."  -->
 <LabelTextId>6666</LabelTextId>   <!--  6666 => "Compressor Thermal Overload"  -->
 <EventDefn>
  <DataId>5272</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5273</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsOilLow</ProgrammaticName>
 <EngineeringDescription>Compressor low oil pressure.  The event is deactivated by manual reset.
This is the lubricant oil inside the crankcase of the compressor.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALOIL_mm</EngineeringReference>
 <DescriptionTextId>6669</DescriptionTextId>   <!--  6669 => "Compressor low oil pressure."  -->
 <LabelTextId>6668</LabelTextId>   <!--  6668 => "Compressor Low Oil Pressure"  -->
 <EventDefn>
  <DataId>5273</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5274</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsOverThrshld</ProgrammaticName>
 <EngineeringDescription>Compressor head pressure has exceeded an upper threshold.  The event is deactivated when the pressure drops below the threshold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MEHP_WA_mm</EngineeringReference>
 <DescriptionTextId>6671</DescriptionTextId>   <!--  6671 => "Compressor head pressure has exceeded an upper threshold."  -->
 <LabelTextId>6670</LabelTextId>   <!--  6670 => "Compressor Head Pressure Over Threshold"  -->
 <EventDefn>
  <DataId>5274</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5275</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_prsDiffLoss</ProgrammaticName>
 <EngineeringDescription>Compressor is shut down due to low differential pressure.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALNODIFPR_mm</EngineeringReference>
 <DescriptionTextId>6673</DescriptionTextId>   <!--  6673 => "Compressor is shut down due to low differential pressure."  -->
 <LabelTextId>6672</LabelTextId>   <!--  6672 => "Compressor Loss of Differential Pressure"  -->
 <EventDefn>
  <DataId>5275</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5276</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cndsr_pct_fanSpeed</ProgrammaticName>
 <EngineeringDescription>Condenser fan speed expressed as a percentage of the maximum rated speed.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ANACONDEN_mm</EngineeringReference>
 <DescriptionTextId>6675</DescriptionTextId>   <!--  6675 => "Condenser fan speed expressed as a percentage of the maximum rated speed."  -->
 <LabelTextId>6674</LabelTextId>   <!--  6674 => "Condenser Fan Speed"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5277</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cndsr_fanIssue</ProgrammaticName>
 <EngineeringDescription>Condenser fan is not operating within its operational parameters.   The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACONDFAN_mm</EngineeringReference>
 <DescriptionTextId>6677</DescriptionTextId>   <!--  6677 => "Condenser fan is not operating within its operational parameters."  -->
 <LabelTextId>6676</LabelTextId>   <!--  6676 => "Condenser Fan Issue"  -->
 <EventDefn>
  <DataId>5277</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5278</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cndsr_prsLowRfg</ProgrammaticName>
 <EngineeringDescription>Refrigerant pressure in condenser coil is too low.  The event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALLOCONDP_mm</EngineeringReference>
 <DescriptionTextId>6679</DescriptionTextId>   <!--  6679 => "Refrigerant pressure in condenser coil is too low."  -->
 <LabelTextId>6678</LabelTextId>   <!--  6678 => "Low Condenser Refrigerant Pressure"  -->
 <EventDefn>
  <DataId>5278</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5279</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_prs_fluid</ProgrammaticName>
 <EngineeringDescription>Fluid pressure.  This is the pressure within a closed water/glycol circuit.

iCOM: This value is always measured, regardless of whether a pump is operating.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_USRWPREBAR</EngineeringReference>
 <DescriptionTextId>6681</DescriptionTextId>   <!--  6681 => "Fluid pressure.  This is the pressure within a closed water/glycol circuit."  -->
 <LabelTextId>6680</LabelTextId>   <!--  6680 => "Fluid Pressure"  -->
 <NumericDefn>
  <MeasureBaseId>15</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5280</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_prsFluidLow</ProgrammaticName>
 <EngineeringDescription>[Fluid Pressure] has dropped below a specified threshold.  The event is deactivated when the pressure rises above the threshold.

Value used in comparison against threshold is specified in val_clng_prs_fluid.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALHWPRESSU</EngineeringReference>
 <DescriptionTextId>6683</DescriptionTextId>   <!--  6683 => "[Fluid Pressure] has dropped below a specified threshold."  -->
 <LabelTextId>6682</LabelTextId>   <!--  6682 => "Low Fluid Pressure"  -->
 <EventDefn>
  <DataId>5280</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5281</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_fluCoolingPropBand</ProgrammaticName>
 <EngineeringDescription>Temperature control band above [Actual Supply Fluid Temp Set Point].  If [Return Fluid Temperature] is within this band, fluid cooling operations are proportionally controlled.

Example:
[Actual Supply Fluid Temp Set Point] is set to 40 degrees.
[Fluid Cooling Proportional Band] is set to 10 degrees.
When [Return Fluid Temperature] is between 40 and 50 degrees, the unit will perform proportional cooling operations on the fluid.

iCOM Specific: The return fluid is returned TO this unit to be cooled and then supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPPROP</EngineeringReference>
 <DescriptionTextId>6685</DescriptionTextId>   <!--  6685 => "Temperature control band above [Actual Supply Fluid Temp Set Point].  If [Return Fluid Temperature] is within this band, fluid cooling operations are proportionally controlled."  -->
 <LabelTextId>6684</LabelTextId>   <!--  6684 => "Fluid Cooling Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5282</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluSetPtActual</ProgrammaticName>
 <EngineeringDescription>The actual set point value being used for the desired fluid temperature at the outlet of the unit.

iCOM Specific:  This value is a function of val_clng_tmp_supFluSetPt1 and val_clng_tmp_supFluSetPt2.  Its value may vary depending on time of day or other algorithmic parameters.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPSET_AC</EngineeringReference>
 <DescriptionTextId>6687</DescriptionTextId>   <!--  6687 => "The actual set point value being used for the desired fluid temperature at the outlet of the unit."  -->
 <LabelTextId>6686</LabelTextId>   <!--  6686 => "Actual Supply Fluid Temp Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5283</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluSetPt1</ProgrammaticName>
 <EngineeringDescription>Set point 1 of desired fluid temperature at the outlet of the unit.
iCOM Specific:  See val_clng_tmp_supFluSetPtActual.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_OUTEMPSET1</EngineeringReference>
 <DescriptionTextId>6689</DescriptionTextId>   <!--  6689 => "Set point 1 of desired fluid temperature at the outlet of the unit."  -->
 <LabelTextId>6688</LabelTextId>   <!--  6688 => "Supply Fluid Temp Set Point 1"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5284</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluSetPt2</ProgrammaticName>
 <EngineeringDescription>Set point 2 of desired fluid temperature at the outlet of the unit.
iCOM Specific:  See val_clng_tmp_supFluSetPtActual.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_OUTEMPSET2</EngineeringReference>
 <DescriptionTextId>6691</DescriptionTextId>   <!--  6691 => "Set point 2 of desired fluid temperature at the outlet of the unit."  -->
 <LabelTextId>6690</LabelTextId>   <!--  6690 => "Supply Fluid Temp Set Point 2"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5285</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluOverThrshld2</ProgrammaticName>
 <EngineeringDescription>Second threshold value used in the [Supply Fluid Over Temp] event.
See event evt_clng_tmpSupFluOver.

This threshold is for a more severe condition than the threshold defined by val_clng_tmp_supFluOverThrshld.

iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HWTEMPOUAL</EngineeringReference>
 <DescriptionTextId>6693</DescriptionTextId>   <!--  6693 => "Second threshold value used in the [Supply Fluid Over Temp] event."  -->
 <LabelTextId>6692</LabelTextId>   <!--  6692 => "Supply Fluid Over Temp Threshold 2"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5286</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluUnderThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Supply Fluid Under Temp] event.
See event evt_clng_tmpSupFluUnder.
See also val_clng_tmp_supFluUnderThrshld2.

iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LWTEMPOUWA</EngineeringReference>
 <DescriptionTextId>6695</DescriptionTextId>   <!--  6695 => "Threshold value used in the [Supply Fluid Under Temp] event."  -->
 <LabelTextId>6694</LabelTextId>   <!--  6694 => "Supply Fluid Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5287</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supFluUnderThrshld2</ProgrammaticName>
 <EngineeringDescription>Second threshold value used in the [Supply Fluid Under Temp] event.
See event evt_clng_tmpSupFluUnder.

This threshold is for a more severe condition than the threshold defined by val_clng_tmp_supFluUnderThrshld.

iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LWTEMPOUAL</EngineeringReference>
 <DescriptionTextId>6697</DescriptionTextId>   <!--  6697 => "Second threshold value used in the [Supply Fluid Under Temp] event."  -->
 <LabelTextId>6696</LabelTextId>   <!--  6696 => "Supply Fluid Under Temp Threshold 2"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5288</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_retFlu</ProgrammaticName>
 <EngineeringDescription>Fluid temperature measured at the inlet of the unit.

iCOM Specific Behavior: This value is used in determining activation of events evt_clng_tmpRetFluOver and evt_clng_tmpRetFluUnder. This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_PTCIN_TEMP</EngineeringReference>
 <DescriptionTextId>6699</DescriptionTextId>   <!--  6699 => "Fluid temperature measured at the inlet of the unit."  -->
 <LabelTextId>6698</LabelTextId>   <!--  6698 => "Return Fluid Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5289</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_retFluOverThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Return Fluid Over Temp] event.
See event evt_clng_tmpRetFluOver.
See also val_clng_tmp_retFluOverThrshld2.

iCOM Specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HWTEMPINWA</EngineeringReference>
 <DescriptionTextId>6701</DescriptionTextId>   <!--  6701 => "Threshold value used in the [Return Fluid Over Temp] event."  -->
 <LabelTextId>6700</LabelTextId>   <!--  6700 => "Return Fluid Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5290</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_retFluOverThrshld2</ProgrammaticName>
 <EngineeringDescription>Second threshold value used in the [Return Fluid Over Temp] event.
See event evt_clng_tmpRetFluOver.

This threshold is for a more severe condition than the threshold defined by val_clng_tmp_retFluOverThrshld.

iCOM Specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HWTEMPINAL</EngineeringReference>
 <DescriptionTextId>6703</DescriptionTextId>   <!--  6703 => "Second threshold value used in the [Return Fluid Over Temp] event."  -->
 <LabelTextId>6702</LabelTextId>   <!--  6702 => "Return Fluid Over Temp Threshold 2"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5291</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_retFluUnderThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Return Fluid Under Temp] event.
See event evt_clng_tmpRetFluUnder.
See also val_clng_tmp_retFluUnderThrshld2.

iCOM Specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LWTEMPINWA</EngineeringReference>
 <DescriptionTextId>6705</DescriptionTextId>   <!--  6705 => "Threshold value used in the [Return Fluid Under Temp] event."  -->
 <LabelTextId>6704</LabelTextId>   <!--  6704 => "Return Fluid Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5292</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_retFluUnderThrshld2</ProgrammaticName>
 <EngineeringDescription>Second threshold value used in the [Return Fluid Under Temp] event.
See event evt_clng_tmpRetFluUnder.

This threshold is for a more severe condition than the threshold defined by val_clng_tmp_retFluUnderThrshld.

iCOM Specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LWTEMPINAL</EngineeringReference>
 <DescriptionTextId>6707</DescriptionTextId>   <!--  6707 => "Second threshold value used in the [Return Fluid Under Temp] event."  -->
 <LabelTextId>6706</LabelTextId>   <!--  6706 => "Return Fluid Under Temp Threshold 2"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5293</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpRetFluOver</ProgrammaticName>
 <EngineeringDescription>[Return Fluid Temperature] has exceeded a specified threshold.  The event is deactivated when the temperature drops below the threshold.

Event threshold is specified in val_clng_tmp_retFluOverThrshld and val_clng_tmp_retFluOverThrshld2
Value used in comparison against threshold is specified in val_clng_tmp_retFlu.

iCOM specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HWTEMPIN_mhv</EngineeringReference>
 <DescriptionTextId>6709</DescriptionTextId>   <!--  6709 => "[Return Fluid Temperature] has exceeded a specified threshold."  -->
 <LabelTextId>6708</LabelTextId>   <!--  6708 => "Return Fluid Over Temp"  -->
 <EventDefn>
  <DataId>5293</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5294</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_tmpRetFluUnder</ProgrammaticName>
 <EngineeringDescription>[Return Fluid Temperature] has dropped below a specified threshold.  The event is deactivated when the temperature rises above the threshold.

Event threshold is specified in val_clng_tmp_retFluUnderThrshld and val_clng_tmp_retFluUnderThrshld2.
Value used in comparison against threshold is specified in val_clng_tmp_retFlu.

iCOM specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LWTEMPIN_mhv</EngineeringReference>
 <DescriptionTextId>6711</DescriptionTextId>   <!--  6711 => "[Return Fluid Temperature] has dropped below a specified threshold."  -->
 <LabelTextId>6710</LabelTextId>   <!--  6710 => "Return Fluid Under Temp"  -->
 <EventDefn>
  <DataId>5294</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5295</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_snsrRetFluIssue</ProgrammaticName>
 <EngineeringDescription>The return fluid temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.

iCOM specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALPTCIN</EngineeringReference>
 <DescriptionTextId>6713</DescriptionTextId>   <!--  6713 => "The return fluid temperature sensor is disconnected or the signal is out of range. "  -->
 <LabelTextId>6712</LabelTextId>   <!--  6712 => "Return Fluid Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5295</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5296</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_snsrRetFluIssueTeam</ProgrammaticName>
 <EngineeringDescription>The return fluid temperature sensors for all Teamwork units are disconnected or the signals are out of range.  The event is deactivated when at least one sensor signal is re-established.

iCOM specific: This is the fluid being returned TO this unit to be re-chilled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WASHPTCIN</EngineeringReference>
 <DescriptionTextId>6715</DescriptionTextId>   <!--  6715 => "The return fluid temperature sensors for all Teamwork units are disconnected or the signals are out of range."  -->
 <LabelTextId>6714</LabelTextId>   <!--  6714 => "Teamwork Return Fluid Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5296</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5297</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_flowLossAll</ProgrammaticName>
 <EngineeringDescription>System is shut down due to loss of flow in all available pumps.  Event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALFLOWSWIT</EngineeringReference>
 <DescriptionTextId>6717</DescriptionTextId>   <!--  6717 => "System is shut down due to loss of flow in all available pumps."  -->
 <LabelTextId>6716</LabelTextId>   <!--  6716 => "All Pumps Loss of Flow"  -->
 <EventDefn>
  <DataId>5297</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5298</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pump_tm_op</ProgrammaticName>
 <EngineeringDescription>Operating hours for pump since last reset of this value.
iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURPUMP_mm</EngineeringReference>
 <DescriptionTextId>6719</DescriptionTextId>   <!--  6719 => "Operating hours for pump since last reset of this value."  -->
 <LabelTextId>6718</LabelTextId>   <!--  6718 => "Pump Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5299</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_pump_tm_opThreshold</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Pump Hours Exceeded] event.
See evt_pump_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURPUMPM_mm</EngineeringReference>
 <DescriptionTextId>6721</DescriptionTextId>   <!--  6721 => "Threshold value used in the [Pump Hours Exceeded] event."  -->
 <LabelTextId>6720</LabelTextId>   <!--  6720 => "Pump Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5300</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_pump_hrsExceeded</ProgrammaticName>
 <EngineeringDescription>[Pump Hours] has exceeded [Pump Hours Threshold].
Event threshold is specified in val_pump_tm_opThreshold.
Value used in comparison against threshold is specified in val_pump_tm_op.

iCOM Specific: This event will deactivate when val_pump_tm_op is manually reset to zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAPUMPHOU_mm</EngineeringReference>
 <DescriptionTextId>6723</DescriptionTextId>   <!--  6723 => "[Pump Hours] has exceeded [Pump Hours Threshold]."  -->
 <LabelTextId>6722</LabelTextId>   <!--  6722 => "Pump Hours Exceeded"  -->
 <EventDefn>
  <DataId>5300</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5301</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_FCFluidAirDeltaExt</ProgrammaticName>
 <EngineeringDescription>Minimum temperature delta required between return fluid and external ambient air temperatures in order to enable free cooling.

Example:
[Return Fluid Temperature] is 60 degrees.
[Free Cooling Temperature Delta] is set to 6 degrees.
If external ambient air temperature is below 54 degrees, free cooling may be enabled.

See val_clng_tmp_retFlu.

iCOM Specific: The return fluid is returned TO this unit to be cooled.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DT_ROOMAMB</EngineeringReference>
 <DescriptionTextId>6725</DescriptionTextId>   <!--  6725 => "Minimum temperature delta required between return fluid and external ambient air temperatures in order to enable free cooling."  -->
 <LabelTextId>6724</LabelTextId>   <!--  6724 => "Free Cooling External Temperature Delta"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5302</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_statusFC</ProgrammaticName>
 <EngineeringDescription>Free cooling status.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FC_COND</EngineeringReference>
 <DescriptionTextId>6727</DescriptionTextId>   <!--  6727 => "Free cooling status."  -->
 <LabelTextId>6726</LabelTextId>   <!--  6726 => "Free Cooling Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4148</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5303</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_pct_posFC</ProgrammaticName>
 <EngineeringDescription>Free cooling valve open position.  0% = fully closed, 100% = fully open.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_VALVE3P</EngineeringReference>
 <DescriptionTextId>6729</DescriptionTextId>   <!--  6729 => "Free cooling valve open position."  -->
 <LabelTextId>6728</LabelTextId>   <!--  6728 => "Free Cooling Valve Open Position"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5304</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_tm_opFC</ProgrammaticName>
 <EngineeringDescription>Operating hours for free cooling valve since last reset of this value.
iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURFC</EngineeringReference>
 <DescriptionTextId>6731</DescriptionTextId>   <!--  6731 => "Operating hours for free cooling valve since last reset of this value."  -->
 <LabelTextId>6730</LabelTextId>   <!--  6730 => "Free Cooling Valve Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5305</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_tm_opThresholdFC</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Free Cooling Valve Hours Exceeded] event.
See evt_valv_hrsExceededFC.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURFCM</EngineeringReference>
 <DescriptionTextId>6733</DescriptionTextId>   <!--  6733 => "Threshold value used in the [Free Cooling Valve Hours Exceeded] event."  -->
 <LabelTextId>6732</LabelTextId>   <!--  6732 => "Free Cooling Valve Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5306</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_valv_hrsExceededFC</ProgrammaticName>
 <EngineeringDescription>[Free Cooling Valve Hours] has exceeded [Free Cooling Valve Hours Threshold].
Event threshold is specified in val_valv_tm_opThresholdFC.
Value used in comparison against threshold is specified in val_valv_tm_opFC.

iCOM Specific: This event will deactivate when val_valv_tm_opFC is manually reset to zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAFC_HOU</EngineeringReference>
 <DescriptionTextId>6735</DescriptionTextId>   <!--  6735 => "[Free Cooling Valve Hours] has exceeded [Free Cooling Valve Hours Threshold]."  -->
 <LabelTextId>6734</LabelTextId>   <!--  6734 => "Free Cooling Valve Hours Exceeded"  -->
 <EventDefn>
  <DataId>5306</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5307</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_evap_tmp_retFlu</ProgrammaticName>
 <EngineeringDescription>Fluid temperature measured at the inlet of the evaporator.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_PTCEVA_TEM</EngineeringReference>
 <DescriptionTextId>6737</DescriptionTextId>   <!--  6737 => "Fluid temperature measured at the inlet of the evaporator."  -->
 <LabelTextId>6736</LabelTextId>   <!--  6736 => "Evaporator Return Fluid Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5308</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_evap_snsrInletIssue</ProgrammaticName>
 <EngineeringDescription>The evaporator inlet temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALPTCEVA</EngineeringReference>
 <DescriptionTextId>6739</DescriptionTextId>   <!--  6739 => "The evaporator inlet temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>6738</LabelTextId>   <!--  6738 => "Evaporator Inlet Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5308</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5309</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_evap_snsrInletIssueTeam</ProgrammaticName>
 <EngineeringDescription>The evaporator inlet temperature sensors for all Teamwork units are disconnected or the signals are out of range.  The event is deactivated when at least one sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALSHPTCEVA</EngineeringReference>
 <DescriptionTextId>6741</DescriptionTextId>   <!--  6741 => "The evaporator inlet temperature sensors for all Teamwork units are disconnected or the signals are out of range."  -->
 <LabelTextId>6740</LabelTextId>   <!--  6740 => "Teamwork Evaporator Inlet Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5309</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5310</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_evap_tmpFluOutFreezeAutoRst</ProgrammaticName>
 <EngineeringDescription>Evaporator outlet fluid temperature has dropped below the freeze threshold.  Evaporator has been shut down, but will restart when the temperature rises above the threshold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAFREEZE_mm</EngineeringReference>
 <DescriptionTextId>6743</DescriptionTextId>   <!--  6743 => "Evaporator outlet fluid temperature has dropped below the freeze threshold.  Evaporator has been shut down, but will restart when the temperature rises above the threshold."  -->
 <LabelTextId>6742</LabelTextId>   <!--  6742 => "Evaporator Fluid Freeze - Auto Reset"  -->
 <EventDefn>
  <DataId>5310</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5311</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_evap_tmpFluOutFreezeManRst</ProgrammaticName>
 <EngineeringDescription>Evaporator outlet fluid temperature has dropped below the freeze threshold.  Evaporator has been shut down and requires a manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAFREEZEM_mm</EngineeringReference>
 <DescriptionTextId>6745</DescriptionTextId>   <!--  6745 => "Evaporator outlet fluid temperature has dropped below the freeze threshold.  Evaporator has been shut down and requires a manual reset."  -->
 <LabelTextId>6744</LabelTextId>   <!--  6744 => "Evaporator Fluid Freeze - Manual Reset Required"  -->
 <EventDefn>
  <DataId>5311</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5312</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supBrineSetPt</ProgrammaticName>
 <EngineeringDescription>Desired brine fluid temperature at the outlet of the unit.

iCOM Specific: This is the fluid being supplied FROM this unit for cooling operations.  Brine is only used on units that have the necessary mechanical components to operate at extremely low temperatures.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BRINE_SETP</EngineeringReference>
 <DescriptionTextId>6747</DescriptionTextId>   <!--  6747 => "Desired brine fluid temperature at the outlet of the unit."  -->
 <LabelTextId>6746</LabelTextId>   <!--  6746 => "Supply Brine Temp Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5313</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_supHotWtrSetPt</ProgrammaticName>
 <EngineeringDescription>Desired heated water temperature at the outlet of the unit.

iCOM Specific: This is the water being supplied FROM this unit for heating operations.  It is only used on units with a heat pump feature.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HEATSET</EngineeringReference>
 <DescriptionTextId>6749</DescriptionTextId>   <!--  6749 => "Desired heated water temperature at the outlet of the unit."  -->
 <LabelTextId>6748</LabelTextId>   <!--  6748 => "Supply Heated Water Temp Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5314</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_na_standbyUnits</ProgrammaticName>
 <EngineeringDescription>The number of standby units.

iCOM Specific: A standby unit will become active if the lead unit has been shut down due to a critical event.  A standby unit is also used in a rotational setup.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_STDBYUNITS</EngineeringReference>
 <DescriptionTextId>6751</DescriptionTextId>   <!--  6751 => "The number of standby units."  -->
 <LabelTextId>6750</LabelTextId>   <!--  6750 => "Standby Units"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5315</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_subgroupEvtWhileCommLoss</ProgrammaticName>
 <EngineeringDescription>While subgroup unit communication was lost, an event occurred on the subgroup unit.  Please check subgroup unit event log.

The evt_sys_subgroupEvtWhileCommLoss event is deactivated by manual reset.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WASG2ALARM</EngineeringReference>
 <DescriptionTextId>6753</DescriptionTextId>   <!--  6753 => "While subgroup unit communication was lost, an event occurred on the subgroup unit.  Please check subgroup unit event log."  -->
 <LabelTextId>6752</LabelTextId>   <!--  6752 => "Subgroup Event Occurred During Communication Loss"  -->
 <EventDefn>
  <DataId>5315</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5316</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsHigh.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6755</DescriptionTextId>   <!--  6755 => "Enable/disable the activation of the [Compressor High Head Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6754</LabelTextId>   <!--  6754 => "Compressor High Head Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5317</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsHighType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor High Head Pressure] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_prsHigh.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6757</DescriptionTextId>   <!--  6757 => "The event type for the [Compressor High Head Pressure] event."  -->
 <LabelTextId>6756</LabelTextId>   <!--  6756 => "Compressor High Head Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5318</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsLowEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_prsLow.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6759</DescriptionTextId>   <!--  6759 => "Enable/disable the activation of the [Compressor Low Suction Pressure] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6758</LabelTextId>   <!--  6758 => "Compressor Low Suction Pressure - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5319</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_prsLowType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor Low Suction Pressure] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_prsLow.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6761</DescriptionTextId>   <!--  6761 => "The event type for the [Compressor Low Suction Pressure] event."  -->
 <LabelTextId>6760</LabelTextId>   <!--  6760 => "Compressor Low Suction Pressure - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5320</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_thermOverloadEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor Thermal Overload] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_thermOverload.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6763</DescriptionTextId>   <!--  6763 => "Enable/disable the activation of the [Compressor Thermal Overload] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6762</LabelTextId>   <!--  6762 => "Compressor Thermal Overload - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5321</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_thermOverloadType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor Thermal Overload] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_thermOverload.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6765</DescriptionTextId>   <!--  6765 => "The event type for the [Compressor Thermal Overload] event."  -->
 <LabelTextId>6764</LabelTextId>   <!--  6764 => "Compressor Thermal Overload - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'MPX.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5322</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_rem_capabilitiesExtended</ProgrammaticName>
 <EngineeringDescription>Branch Receptacle Module capabilities indicates the measurement and/or control capability.  "Current Measurement Only" and "All Measurements" enumeration values are treated as mutually exclusive values.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6767</DescriptionTextId>   <!--  6767 => "Branch Receptacle Module capabilities indicates the measurement and/or control capability.  "Current Measurement Only" and "All Measurements" enumeration values are treated as mutually exclusive values."  -->
 <LabelTextId>6766</LabelTextId>   <!--  6766 => "Branch Capabilities"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4149</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5323</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_rcp_capabilitiesExtended</ProgrammaticName>
 <EngineeringDescription>Receptacle capabilities indicates the measurement and/or control capability, etc. Measurement capabilities are defined either as all measurements or only current measurements.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6773</DescriptionTextId>   <!--  6773 => "Receptacle capabilities indicates the measurement and/or control capability, etc. Measurement capabilities are defined either as all measurements or only current measurements."  -->
 <LabelTextId>6772</LabelTextId>   <!--  6772 => "Receptacle Capabilities"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4149</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5324</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirCtrlType</ProgrammaticName>
 <EngineeringDescription>Type of algorithm used to control the system's output air temperature.
Allowable values:
Proportional
Proportional + Integral
Intelligent</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_REGUL_TYPE</EngineeringReference>
 <DescriptionTextId>6775</DescriptionTextId>   <!--  6775 => "Type of algorithm used to control the system's output air temperature."  -->
 <LabelTextId>6774</LabelTextId>   <!--  6774 => "Air Temperature Control Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4150</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5325</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airPropBand</ProgrammaticName>
 <EngineeringDescription>Value that is divided evenly to form proportional temperature control bands above and below [Air Temperature Set Point].
If measured air temperature is in the band above the set point, cooling operations are proportionally controlled.
If measured air temperature is in the band below the set point, heating operations are proportionally controlled.
Non-zero values of [Air Temperature Dead Band] will shift the cooling and heating control bands away from the set point (see val_sys_tmp_airDeadBand).
Example 1:
[Air Temperature Set Point] is set to 70 degrees.
[Air Temperature Proportional Band] is set to 8 degrees.
[Air Temperature Dead Band] is set to 0 degrees.
When measured air temperature is between 70 and 74 degrees, the unit will perform proportional cooling operations.
When measured air temperature is between 66 and 70 degrees, the unit will perform proportional heating operations.
Example 2: See val_sys_tmp_airDeadBand</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPPROP</EngineeringReference>
 <DescriptionTextId>6780</DescriptionTextId>   <!--  6780 => "Value that is divided evenly to form proportional temperature control bands above and below [Air Temperature Set Point]."  -->
 <LabelTextId>6779</LabelTextId>   <!--  6779 => "Air Temperature Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5326</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tm_tmpAirCtrlIntegral</ProgrammaticName>
 <EngineeringDescription>Time value used when system is under integral air temperature control.
This value is used when st_sys_tmpAirCtrlType is set to Proportional + Integral.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPINTG</EngineeringReference>
 <DescriptionTextId>6782</DescriptionTextId>   <!--  6782 => "Time value used when system is under integral air temperature control."  -->
 <LabelTextId>6781</LabelTextId>   <!--  6781 => "Air Temperature Control Integration Time"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5327</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airDailyHigh</ProgrammaticName>
 <EngineeringDescription>The highest external air temperature measured since midnight.
          See val_ext_tm_tmpAirDailyHigh.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_HITEMP</EngineeringReference>
 <DescriptionTextId>6784</DescriptionTextId>   <!--  6784 => "The highest external air temperature measured since midnight."  -->
 <LabelTextId>6783</LabelTextId>   <!--  6783 => "Today's High Air Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5328</DataId>
 <DefnType>TimeDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tm_tmpAirDailyHigh</ProgrammaticName>
 <EngineeringDescription>[Today's High Air Temperature] was measured at this time.
See val_ext_tmp_airDailyHigh.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_HITEV4</EngineeringReference>
 <DescriptionTextId>6786</DescriptionTextId>   <!--  6786 => "[Today's High Air Temperature] was measured at this time."  -->
 <LabelTextId>6785</LabelTextId>   <!--  6785 => "Today's High Air Temperature Time"  -->
 <TimeDefn>
  <DataId>5328</DataId>
  <Epoch_Id>0</Epoch_Id>  <!-- FDM Spec. indicates that the default is 0 .. the FDM may override -->
 </TimeDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5329</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airDailyLow</ProgrammaticName>
 <EngineeringDescription>The lowest external air temperature measured since midnight.
          See val_ext_tm_tmpAirDailyLow.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_LOTEMP</EngineeringReference>
 <DescriptionTextId>6788</DescriptionTextId>   <!--  6788 => "The lowest external air temperature measured since midnight."  -->
 <LabelTextId>6787</LabelTextId>   <!--  6787 => "Today's Low Air Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5330</DataId>
 <DefnType>TimeDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tm_tmpAirDailyLow</ProgrammaticName>
 <EngineeringDescription>[Today's Low Air Temperature] was measured at this time.
See val_ext_tmp_airDailyLow.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_LOTEV4</EngineeringReference>
 <DescriptionTextId>6790</DescriptionTextId>   <!--  6790 => "[Today's Low Air Temperature] was measured at this time."  -->
 <LabelTextId>6789</LabelTextId>   <!--  6789 => "Today's Low Air Temperature Time"  -->
 <TimeDefn>
  <DataId>5330</DataId>
  <Epoch_Id>0</Epoch_Id>  <!-- FDM Spec. indicates that the default is 0 .. the FDM may override -->
 </TimeDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5331</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airSupplySetPt</ProgrammaticName>
 <EngineeringDescription>Desired supply air temperature.
iCOM Specific: This value will be used as a comparison against supply air sensor temperature measurements in order to determine the control of temperature and fan speed.
This value is only relevant when st_sys_tmpSnsrSupplyAirControl is not set to 'Disabled'.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SUPPLYSET</EngineeringReference>
 <DescriptionTextId>6792</DescriptionTextId>   <!--  6792 => "Desired supply air temperature."  -->
 <LabelTextId>6791</LabelTextId>   <!--  6791 => "Supply Air Temperature Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5332</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpSnsrSupplyAirControl</ProgrammaticName>
 <EngineeringDescription>Control mode to be used with the supply air temperature sensor.
Available values include:
Disabled - sensor not used for temperature or fan speed control
Limit - sensor used for cooling control to keep temperature at or above supply air temperature set point (see val_sys_tmp_airSupplySetPt)
Control - sensor used for temperature control (heating and cooling) and fan speed control
Temp Only - sensor used for temperature control (heating and cooling) only, not fan speed</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SUPPLY_SEN</EngineeringReference>
 <DescriptionTextId>6794</DescriptionTextId>   <!--  6794 => "Control mode to be used with the supply air temperature sensor."  -->
 <LabelTextId>6793</LabelTextId>   <!--  6793 => "Supply Air Temperature Sensor Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4151</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5333</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airRetSetPt</ProgrammaticName>
 <EngineeringDescription>Desired air temperature at the inlet of the unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_TEMPSET_AC</EngineeringReference>
 <DescriptionTextId>6800</DescriptionTextId>   <!--  6800 => "Desired air temperature at the inlet of the unit."  -->
 <LabelTextId>6799</LabelTextId>   <!--  6799 => "Return Air Temperature Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5334</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_airRetUnderThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Return Air Under Temperature] event.
          See event evt_sys_tmpAirRetUnder.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LOTEMP</EngineeringReference>
 <DescriptionTextId>6802</DescriptionTextId>   <!--  6802 => "Threshold value used in the [Return Air Under Temperature] event."  -->
 <LabelTextId>6801</LabelTextId>   <!--  6801 => "Return Air Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5335</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_tmpAirRetUnder</ProgrammaticName>
 <EngineeringDescription>[Return Air Temperature] has dropped below [Return Air Under Temp Threshold].  The event is deactivated when the temperature rises above the threshold.
Event threshold is specified in val_sys_tmp_airRetUnderThrshld.
Value used in comparison against threshold is specified in val_sys_tmp_airRet.
The annunciation of this event may optionally be modified by:
st_sys_tmpAirRetUnderEnable
st_sys_tmpAirRetUnderType
iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LRT</EngineeringReference>
 <DescriptionTextId>6804</DescriptionTextId>   <!--  6804 => "[Return Air Temperature] has dropped below [Return Air Under Temp Threshold]."  -->
 <LabelTextId>6803</LabelTextId>   <!--  6803 => "Return Air Under Temperature"  -->
 <EventDefn>
  <DataId>5335</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5336</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airC</ProgrammaticName>
 <EngineeringDescription>Air temperature as measured by external air sensor C.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HT21</EngineeringReference>
 <DescriptionTextId>6806</DescriptionTextId>   <!--  6806 => "Air temperature as measured by external air sensor C."  -->
 <LabelTextId>6805</LabelTextId>   <!--  6805 => "Ext Air Sensor C Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5337</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airOverThrshldA</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [External Air Sensor A Over Temperature] event.
          See event evt_ext_tmpAirOverA.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HITEMPE</EngineeringReference>
 <DescriptionTextId>6808</DescriptionTextId>   <!--  6808 => "Threshold value used in the [External Air Sensor A Over Temperature] event."  -->
 <LabelTextId>6807</LabelTextId>   <!--  6807 => "Ext Air Sensor A Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5338</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_airUnderThrshldA</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [External Air Sensor A Under Temperature] event.
          See event evt_ext_tmpAirUnderA.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LOTEMPE</EngineeringReference>
 <DescriptionTextId>6810</DescriptionTextId>   <!--  6810 => "Threshold value used in the [External Air Sensor A Under Temperature] event."  -->
 <LabelTextId>6809</LabelTextId>   <!--  6809 => "Ext Air Sensor A Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5339</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_retSetPt</ProgrammaticName>
 <EngineeringDescription>Desired relative humidity at the inlet of the unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUSETACTDI</EngineeringReference>
 <DescriptionTextId>6812</DescriptionTextId>   <!--  6812 => "Desired relative humidity at the inlet of the unit."  -->
 <LabelTextId>6811</LabelTextId>   <!--  6811 => "Return Humidity Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5340</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_hmdPropCtrlType</ProgrammaticName>
 <EngineeringDescription>Type of algorithm to use for proportional control of output humidity.
Allowable values:
Relative - Amount of humidification is based on the deviation between return air humidity and the humidity set point.
Predictive - Amount of humidification is based on the deviation between the return air temperature and the temperature set point.
Compensated - Functions the same as predictive, but it adjusts the humidity set point rather than the actual humidity reading.
iCOM Specific: In the manual, predictive is also known as absolute.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUM_COMPEN</EngineeringReference>
 <DescriptionTextId>6814</DescriptionTextId>   <!--  6814 => "Type of algorithm to use for proportional control of output humidity."  -->
 <LabelTextId>6813</LabelTextId>   <!--  6813 => "Humidity Proportional Control Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4152</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5341</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_rh_propBand</ProgrammaticName>
 <EngineeringDescription>Value that is divided evenly to form proportional humidity control bands above and below [Humidity Set Point].
If measured humidity is in the band above the set point, dehumidification operations are proportionally controlled.
If measured humidity is in the band below the set point, humidification operations are proportionally controlled.
Non-zero values of [Humidity Dead Band] will shift the humidification and dehumidification control bands away from the set point (see val_sys_rh_deadBand).
Example 1:
[Humidity Set Point] is set to 40%.
[Humidity Proportional Band] is set to 8%.
[Humidity Dead Band] is set to 0%.
When measured humidity is between 40% and 44%, the unit will perform proportional dehumidification operations.
When measured humidity is between 36% and 40%, the unit will perform proportional humidification operations.
Example 2: See val_sys_rh_deadBand</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUMIPROP</EngineeringReference>
 <DescriptionTextId>6819</DescriptionTextId>   <!--  6819 => "Value that is divided evenly to form proportional humidity control bands above and below [Humidity Set Point]."  -->
 <LabelTextId>6818</LabelTextId>   <!--  6818 => "Humidity Proportional Band"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5342</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tm_hmdPropCtrlIntegral</ProgrammaticName>
 <EngineeringDescription>Time value used to add an integral term to proportional humidity control.  If set to 0, time will not be a factor in the proportional control algorithm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HUMIINTG</EngineeringReference>
 <DescriptionTextId>6821</DescriptionTextId>   <!--  6821 => "Time value used to add an integral term to proportional humidity control.  If set to 0, time will not be a factor in the proportional control algorithm."  -->
 <LabelTextId>6820</LabelTextId>   <!--  6820 => "Humidity Proportional Control Integration Time"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5343</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_pct_hmdDailyHigh</ProgrammaticName>
 <EngineeringDescription>The highest external humidity measured since midnight.
          See val_ext_tm_hmdDailyHigh.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_HIHUMI</EngineeringReference>
 <DescriptionTextId>6823</DescriptionTextId>   <!--  6823 => "The highest external humidity measured since midnight."  -->
 <LabelTextId>6822</LabelTextId>   <!--  6822 => "Today's High Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5344</DataId>
 <DefnType>TimeDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tm_hmdDailyHigh</ProgrammaticName>
 <EngineeringDescription>[Today's High Humidity] was measured at this time
          See val_ext_pct_hmdDailyHigh.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_HIHUV4</EngineeringReference>
 <DescriptionTextId>6825</DescriptionTextId>   <!--  6825 => "[Today's High Humidity] was measured at this time"  -->
 <LabelTextId>6824</LabelTextId>   <!--  6824 => "Today's High Humidity Time"  -->
 <TimeDefn>
  <DataId>5344</DataId>
  <Epoch_Id>0</Epoch_Id>  <!-- FDM Spec. indicates that the default is 0 .. the FDM may override -->
 </TimeDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5345</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_pct_hmdDailyLow</ProgrammaticName>
 <EngineeringDescription>The lowest external humidity measured since midnight.
          See val_ext_tm_hmdDailyLow.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_LOHUMI</EngineeringReference>
 <DescriptionTextId>6827</DescriptionTextId>   <!--  6827 => "The lowest external humidity measured since midnight."  -->
 <LabelTextId>6826</LabelTextId>   <!--  6826 => "Today's Low Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5346</DataId>
 <DefnType>TimeDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tm_hmdDailyLow</ProgrammaticName>
 <EngineeringDescription>[Today's Low Humidity] was measured at this time
          See val_ext_pct_hmddailyLow.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DAY_LOHUV4</EngineeringReference>
 <DescriptionTextId>6829</DescriptionTextId>   <!--  6829 => "[Today's Low Humidity] was measured at this time"  -->
 <LabelTextId>6828</LabelTextId>   <!--  6828 => "Today's Low Humidity Time"  -->
 <TimeDefn>
  <DataId>5346</DataId>
  <Epoch_Id>0</Epoch_Id>  <!-- FDM Spec. indicates that the default is 0 .. the FDM may override -->
 </TimeDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5347</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_pct_hmdtyAirC</ProgrammaticName>
 <EngineeringDescription>Relative humidity as measured by external air sensor C.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HT22</EngineeringReference>
 <DescriptionTextId>6831</DescriptionTextId>   <!--  6831 => "Relative humidity as measured by external air sensor C."  -->
 <LabelTextId>6830</LabelTextId>   <!--  6830 => "Ext Air Sensor C Humidity"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5348</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_rh_airOverThrshldA</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [External Air Sensor A High Humidity] event.
          See event evt_ext_rhAirOverA.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HIHUMIE</EngineeringReference>
 <DescriptionTextId>6833</DescriptionTextId>   <!--  6833 => "Threshold value used in the [External Air Sensor A High Humidity] event."  -->
 <LabelTextId>6832</LabelTextId>   <!--  6832 => "Ext Air Sensor A High Humidity Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5349</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_rhAirOverA</ProgrammaticName>
 <EngineeringDescription>[Ext Air Sensor A Humidity] has exceeded [Ext Air Sensor A High Humidity Threshold].  The event is deactivated when the humidity drops below the threshold.
Event threshold is specified in val_ext_rh_airOverThrshldA.
Value used in comparison against threshold is specified in val_ext_pct_hmdtyAirA.
The behavior of this event may optionally be modified by:
st_ext_rhAirOverEnableA
st_ext_rhAirOverTypeA
iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HHE</EngineeringReference>
 <DescriptionTextId>6835</DescriptionTextId>   <!--  6835 => "[Ext Air Sensor A Humidity] has exceeded [Ext Air Sensor A High Humidity Threshold]."  -->
 <LabelTextId>6834</LabelTextId>   <!--  6834 => "Ext Air Sensor A High Humidity"  -->
 <EventDefn>
  <DataId>5349</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5350</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_rh_airUnderThrshldA</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [External Air Sensor A Low Humidity] event.
          See event evt_ext_rhAirUnderA.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LOHUMIE</EngineeringReference>
 <DescriptionTextId>6837</DescriptionTextId>   <!--  6837 => "Threshold value used in the [External Air Sensor A Low Humidity] event."  -->
 <LabelTextId>6836</LabelTextId>   <!--  6836 => "Ext Air Sensor A Low Humidity Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5351</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_rhAirUnderA</ProgrammaticName>
 <EngineeringDescription>[Ext Air Sensor A Humidity] has dropped below [Ext Air Sensor A Low Humidity Threshold].  The event is deactivated when the humidity rises above the threshold.
          Event threshold is specified in val_ext_rh_airUnderThrshldA.
          Value used in comparison against threshold is specified in val_ext_pct_hmdtyAirA.
          The behavior of this event may optionally be modified by:
          st_ext_rhAirUnderEnableA
          st_ext_rhAirUnderTypeA
          iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LHE</EngineeringReference>
 <DescriptionTextId>6839</DescriptionTextId>   <!--  6839 => "[Ext Air Sensor A Humidity] has dropped below [Ext Air Sensor A Low Humidity Threshold]."  -->
 <LabelTextId>6838</LabelTextId>   <!--  6838 => "Ext Air Sensor A Low Humidity"  -->
 <EventDefn>
  <DataId>5351</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5352</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_shortCycle</ProgrammaticName>
 <EngineeringDescription>Compressor short cycle.  A short cycle is defined as turning on and off a number of times over a set time period.  The event is deactivated by manual reset or when the condition has cleared.
            The behavior of this event may optionally be modified by:
            st_comp_shortCycleEnable
            st_comp_shortCycleType
            iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MESHOCYCC_mm</EngineeringReference>
 <DescriptionTextId>6841</DescriptionTextId>   <!--  6841 => "Compressor short cycle.  A short cycle is defined as turning on and off a number of times over a set time period."  -->
 <LabelTextId>6840</LabelTextId>   <!--  6840 => "Compressor Short Cycle"  -->
 <EventDefn>
  <DataId>5352</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5353</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_comp_tmp_dschgDigScr</ProgrammaticName>
 <EngineeringDescription>Digital scroll compressor discharge temperature.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DISCRTEMP_mm</EngineeringReference>
 <DescriptionTextId>6843</DescriptionTextId>   <!--  6843 => "Digital scroll compressor discharge temperature."  -->
 <LabelTextId>6842</LabelTextId>   <!--  6842 => "Dig Scroll Comp Discharge Temp"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5354</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_tmpSnsrDschgDigScr</ProgrammaticName>
 <EngineeringDescription>Digital scroll compressor discharge temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALDISCRSE_mm</EngineeringReference>
 <DescriptionTextId>6845</DescriptionTextId>   <!--  6845 => "Digital scroll compressor discharge temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>6844</LabelTextId>   <!--  6844 => "Dig Scroll Comp Discharge Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5354</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5355</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_comp_tmpDigScrollOver</ProgrammaticName>
 <EngineeringDescription>Digital scroll compressor is shut down due to head temperature exceeding an upper threshold.  The event is deactivated when temperature drops below the threshold.
            The behavior of this event may optionally be modified by:
            st_comp_tmpDigScrollOverEnable
            st_comp_tmpDigScrollOverType
            iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALSCROHIT_mm</EngineeringReference>
 <DescriptionTextId>6847</DescriptionTextId>   <!--  6847 => "Digital scroll compressor is shut down due to head temperature exceeding an upper threshold."  -->
 <LabelTextId>6846</LabelTextId>   <!--  6846 => "Dig Scroll Comp Over Temp"  -->
 <EventDefn>
  <DataId>5355</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5356</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tmp_FCFluidAirDeltaInt</ProgrammaticName>
 <EngineeringDescription>Minimum temperature delta required between supply fluid and internal ambient air temperatures in order to enable free cooling.
Example:
Internal ambient air temperature is 65 degrees.
[Free Cooling Internal Temperature Delta] is set to 5 degrees.
If [Free Cooling Fluid Temperature] is below 60 degrees, free cooling is available (it may or may not be enabled due to other control factors).
See val_clng_tmp_fluidFC
This is the fluid being supplied TO this unit for use in cooling.
iCOM Specific: This value is relevant only when st_sys_controlModeFCInt is set to 'Value'.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DT2_DIFF</EngineeringReference>
 <DescriptionTextId>6849</DescriptionTextId>   <!--  6849 => "Minimum temperature delta required between supply fluid and internal ambient air temperatures in order to enable free cooling."  -->
 <LabelTextId>6848</LabelTextId>   <!--  6848 => "Free Cooling Internal Temperature Delta"  -->
 <NumericDefn>
  <MeasureBaseId>8</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5357</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_controlModeFCInt</ProgrammaticName>
 <EngineeringDescription>Free cooling internal control mode.
Allowable modes:
Disabled - free cooling availability not determined by external contactor or by the temperature delta between free cooling fluid and internal ambient air
Contact - free cooling availability controlled by external contactor
Value - free cooling availability controlled by the temperature delta between free cooling fluid and internal ambient air
iCOM Specific: If set to 'Value', see val_sys_tmp_FCFluidAirDeltaInt.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DT2_TYP</EngineeringReference>
 <DescriptionTextId>6851</DescriptionTextId>   <!--  6851 => "Free cooling internal control mode"  -->
 <LabelTextId>6850</LabelTextId>   <!--  6850 => "Free Cooling Internal Control Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4153</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5358</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_fluidFC</ProgrammaticName>
 <EngineeringDescription>Free cooling fluid temperature.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_GLYC_TEMP</EngineeringReference>
 <DescriptionTextId>6856</DescriptionTextId>   <!--  6856 => "Free cooling fluid temperature."  -->
 <LabelTextId>6855</LabelTextId>   <!--  6855 => "Free Cooling Fluid Temperature"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5359</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_clng_tmpCWMinSetPtEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of [Minimum Chilled Water Temp Set Point].  See val_clng_tmp_cWMinSetPt.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MINCWTE_EN</EngineeringReference>
 <DescriptionTextId>6858</DescriptionTextId>   <!--  6858 => "Enable/disable the activation of [Minimum Chilled Water Temp Set Point]."  -->
 <LabelTextId>6857</LabelTextId>   <!--  6857 => "Minimum Chilled Water Temp Set Point Enable"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5360</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_clng_tmp_cWMinSetPt</ProgrammaticName>
 <EngineeringDescription>Minimum desired chilled water temperature.
iCOM Specific: If the chilled water temperature is lower than this set point, the compressors will be stopped; the unit may continue with free cooling.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_MINCWTEMP</EngineeringReference>
 <DescriptionTextId>6860</DescriptionTextId>   <!--  6860 => "Minimum desired chilled water temperature."  -->
 <LabelTextId>6859</LabelTextId>   <!--  6859 => "Minimum Chilled Water Temp Set Point"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5361</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_FCLockout</ProgrammaticName>
 <EngineeringDescription>Free cooling is disabled by an external input signal.  The event is deactivated when the signal is inactive.
The annunciation of this event may optionally be modified by:
st_ext_FCLockoutEnable
st_ext_FCLockoutType
iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP17</EngineeringReference>
 <DescriptionTextId>6862</DescriptionTextId>   <!--  6862 => "Free cooling is disabled by an external input signal."  -->
 <LabelTextId>6861</LabelTextId>   <!--  6861 => "Ext Free Cooling Lockout"  -->
 <EventDefn>
  <DataId>5361</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5362</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_clng_snsrFCIssue</ProgrammaticName>
 <EngineeringDescription>The free cooling fluid temperature sensor is disconnected or the signal is out of range.  The event is deactivated when sensor signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAGLYCOLSE</EngineeringReference>
 <DescriptionTextId>6864</DescriptionTextId>   <!--  6864 => "The free cooling fluid temperature sensor is disconnected or the signal is out of range."  -->
 <LabelTextId>6863</LabelTextId>   <!--  6863 => "Free Cooling Temp Sensor Issue"  -->
 <EventDefn>
  <DataId>5362</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5363</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_tm_opHWHG</ProgrammaticName>
 <EngineeringDescription>Operating hours for hot water / hot gas valve since last reset of this value.
          iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOHOTWAT</EngineeringReference>
 <DescriptionTextId>6866</DescriptionTextId>   <!--  6866 => "Operating hours for hot water / hot gas valve since last reset of this value."  -->
 <LabelTextId>6865</LabelTextId>   <!--  6865 => "Hot Water / Hot Gas Valve Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5364</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_tm_opThresholdHWHG</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Hot Water / Hot Gas Valve Hours Exceeded] event.
          evt_valv_hrsExceededHWHG.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOHOTWATWA</EngineeringReference>
 <DescriptionTextId>6868</DescriptionTextId>   <!--  6868 => "Threshold value used in the [Hot Water / Hot Gas Valve Hours Exceeded] event."  -->
 <LabelTextId>6867</LabelTextId>   <!--  6867 => "Hot Water / Hot Gas Valve Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5365</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_valv_hrsExceededHWHG</ProgrammaticName>
 <EngineeringDescription>[Hot Water / Hot Gas Valve Hours] has exceeded [Hot Water / Hot Gas Valve Hours Threshold].
          Event threshold is specified in val_valv_tm_opThresholdHWHG.
          Value used in comparison against threshold is specified in val_valv_tm_opHWHG.
          iCOM Specific: This event will deactivate when val_valv_tm_opHWHG is manually reset to zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAHOHOTWA</EngineeringReference>
 <DescriptionTextId>6870</DescriptionTextId>   <!--  6870 => "[Hot Water / Hot Gas Valve Hours] has exceeded [Hot Water / Hot Gas Valve Hours Threshold]."  -->
 <LabelTextId>6869</LabelTextId>   <!--  6869 => "Hot Water / Hot Gas Valve Hours Exceeded"  -->
 <EventDefn>
  <DataId>5365</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5366</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_heat_tm_op</ProgrammaticName>
 <EngineeringDescription>Operating hours for electric reheater since last reset of this value.
            iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOHEATE_mm</EngineeringReference>
 <DescriptionTextId>6872</DescriptionTextId>   <!--  6872 => "Operating hours for electric reheater since last reset of this value."  -->
 <LabelTextId>6871</LabelTextId>   <!--  6871 => "Electric Reheater Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5367</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_heat_tm_opThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Electric Reheater Hours Exceeded] event.
            See evt_heat_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOHEATEWA_mm</EngineeringReference>
 <DescriptionTextId>6874</DescriptionTextId>   <!--  6874 => "Threshold value used in the [Electric Reheater Hours Exceeded] event."  -->
 <LabelTextId>6873</LabelTextId>   <!--  6873 => "Electric Reheater Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5368</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_heat_hrsExceeded</ProgrammaticName>
 <EngineeringDescription>[Electric Reheater Hours] has exceeded [Electric Reheaters Hours Threshold].
            Event threshold is specified in val_heat_tm_opThrshld.
            Value used in comparison against threshold is specified in val_heat_tm_op.
            iCOM Specific: This event will deactivate when val_heat_tm_op is manually reset to zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WAHOHEATE_mm</EngineeringReference>
 <DescriptionTextId>6876</DescriptionTextId>   <!--  6876 => "[Electric Reheater Hours] has exceeded [Electric Reheaters Hours Threshold]."  -->
 <LabelTextId>6875</LabelTextId>   <!--  6875 => "Electric Reheater Hours Exceeded"  -->
 <EventDefn>
  <DataId>5368</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5369</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_hmd_tm_op</ProgrammaticName>
 <EngineeringDescription>Operating hours for humidifier since last reset of this value.
iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURHUMI</EngineeringReference>
 <DescriptionTextId>6878</DescriptionTextId>   <!--  6878 => "Operating hours for humidifier since last reset of this value."  -->
 <LabelTextId>6877</LabelTextId>   <!--  6877 => "Humidifier Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5370</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_hmd_tm_opThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Humidifier Hours Exceeded] event.
See evt_hmd_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURHUMIMA</EngineeringReference>
 <DescriptionTextId>6880</DescriptionTextId>   <!--  6880 => "Threshold value used in the [Humidifier Hours Exceeded] event."  -->
 <LabelTextId>6879</LabelTextId>   <!--  6879 => "Humidifier Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5371</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_dhmd_tm_op</ProgrammaticName>
 <EngineeringDescription>Operating hours for dehumidifier since last reset of this value.
iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURDEHUM</EngineeringReference>
 <DescriptionTextId>6882</DescriptionTextId>   <!--  6882 => "Operating hours for dehumidifier since last reset of this value."  -->
 <LabelTextId>6881</LabelTextId>   <!--  6881 => "Dehumidifier Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5372</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_dhmd_tm_opThrshld</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Dehumidifier Hours Exceeded] event.
See evt_dhmd_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURDEHUMM</EngineeringReference>
 <DescriptionTextId>6884</DescriptionTextId>   <!--  6884 => "Threshold value used in the [Dehumidifier Hours Exceeded] event."  -->
 <LabelTextId>6883</LabelTextId>   <!--  6883 => "Dehumidifier Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5373</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_controlModeExp</ProgrammaticName>
 <EngineeringDescription>Fan control mode.
Allowable modes:
Auto - Fan speed controlled by "Call For Cooling".
Manual - Fan will operate at a fixed speed.
Economy - Fan speed controlled via internal algorithms for free cooling units only.
Delta - Fan speed depends on temperature delta between external sensors A and B.

iCOM Specific: If set to manual, see val_fan_manSetPt.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FANVSD_TYP</EngineeringReference>
 <DescriptionTextId>6886</DescriptionTextId>   <!--  6886 => "Fan control mode."  -->
 <LabelTextId>6885</LabelTextId>   <!--  6885 => "Fan Control Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4154</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5374</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_tm_op</ProgrammaticName>
 <EngineeringDescription>Operating hours for fan since last reset of this value.
iCOM Specific:  The only valid writable value is zero.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURCOND</EngineeringReference>
 <DescriptionTextId>6892</DescriptionTextId>   <!--  6892 => "Operating hours for fan since last reset of this value."  -->
 <LabelTextId>6891</LabelTextId>   <!--  6891 => "Fan Hours"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5375</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_fan_tm_opThreshold</ProgrammaticName>
 <EngineeringDescription>Threshold value used in the [Fan Hours Exceeded] event.
See evt_fan_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HOURCONDMA</EngineeringReference>
 <DescriptionTextId>6894</DescriptionTextId>   <!--  6894 => "Threshold value used in the [Fan Hours Exceeded] event."  -->
 <LabelTextId>6893</LabelTextId>   <!--  6893 => "Fan Hours Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5376</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_fan_mainOverload</ProgrammaticName>
 <EngineeringDescription>Main fan is shut down due to thermal overload.  The event is deactivated automatically or by manual reset, depending on the overload detection circuit.
NOTE: This is not a fan that is cooling the system internal components.  It is the environmental unit's blower fan.
The behavior of this event may optionally be modified by:
st_fan_mainOverloadEnable
st_fan_mainOverloadType
iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALMAINFANO</EngineeringReference>
 <DescriptionTextId>6896</DescriptionTextId>   <!--  6896 => "Main fan is shut down due to thermal overload."  -->
 <LabelTextId>6895</LabelTextId>   <!--  6895 => "Main Fan Overload"  -->
 <EventDefn>
  <DataId>5376</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5377</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cndsr_issue</ProgrammaticName>
 <EngineeringDescription>Condenser is not operating within its operational parameters.   The event is deactivated when condenser returns to normal operation..
The annunciation of this event may optionally be modified by:
st_cndsr_issueEnable
st_cndsr_issueType
iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_CONDEN_mm</EngineeringReference>
 <DescriptionTextId>6898</DescriptionTextId>   <!--  6898 => "Condenser is not operating within its operational parameters."  -->
 <LabelTextId>6897</LabelTextId>   <!--  6897 => "Condenser"  -->
 <EventDefn>
  <DataId>5377</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5378</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_inp_na_analog</ProgrammaticName>
 <EngineeringDescription>Generic analog input reading (unitless).</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ANIN_VAL_mm</EngineeringReference>
 <DescriptionTextId>6900</DescriptionTextId>   <!--  6900 => "Generic analog input reading (unitless)."  -->
 <LabelTextId>6899</LabelTextId>   <!--  6899 => "Analog Input Reading"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5379</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_pct_FC</ProgrammaticName>
 <EngineeringDescription>Free cooling valve open position.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_FC</EngineeringReference>
 <DescriptionTextId>6902</DescriptionTextId>   <!--  6902 => "Free cooling valve open position."  -->
 <LabelTextId>6901</LabelTextId>   <!--  6901 => "Free Cooling Valve Open Position"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5380</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_valv_pct_HWHG</ProgrammaticName>
 <EngineeringDescription>Hot water / hot gas valve open position.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_BARA_HOTWA</EngineeringReference>
 <DescriptionTextId>6904</DescriptionTextId>   <!--  6904 => "Hot water / hot gas valve open position."  -->
 <LabelTextId>6903</LabelTextId>   <!--  6903 => "Hot Water / Hot Gas Valve Open Position"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5381</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_opState</ProgrammaticName>
 <EngineeringDescription>Fan operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_FAN</EngineeringReference>
 <DescriptionTextId>6906</DescriptionTextId>   <!--  6906 => "Fan operational state."  -->
 <LabelTextId>6905</LabelTextId>   <!--  6905 => "Fan State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5382</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_opStateCooling</ProgrammaticName>
 <EngineeringDescription>Cooling operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_COOL</EngineeringReference>
 <DescriptionTextId>6908</DescriptionTextId>   <!--  6908 => "Cooling operational state."  -->
 <LabelTextId>6907</LabelTextId>   <!--  6907 => "Cooling State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5383</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_opStateFC</ProgrammaticName>
 <EngineeringDescription>Free cooling operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_FC</EngineeringReference>
 <DescriptionTextId>6910</DescriptionTextId>   <!--  6910 => "Free cooling operational state."  -->
 <LabelTextId>6909</LabelTextId>   <!--  6909 => "Free Cooling State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5384</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_opStateMaintTrack</ProgrammaticName>
 <EngineeringDescription>Maintenance tracking operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_MAINT</EngineeringReference>
 <DescriptionTextId>6912</DescriptionTextId>   <!--  6912 => "Maintenance tracking operational state."  -->
 <LabelTextId>6911</LabelTextId>   <!--  6911 => "Maintenance Tracking State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5385</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_heat_opStateHWHG</ProgrammaticName>
 <EngineeringDescription>Hot water / hot gas operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_HOTW</EngineeringReference>
 <DescriptionTextId>6914</DescriptionTextId>   <!--  6914 => "Hot water / hot gas operational state."  -->
 <LabelTextId>6913</LabelTextId>   <!--  6913 => "Hot Water / Hot Gas State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5386</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_heat_opStateElectric</ProgrammaticName>
 <EngineeringDescription>Electric reheater operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_EHEAT</EngineeringReference>
 <DescriptionTextId>6916</DescriptionTextId>   <!--  6916 => "Electric reheater operational state."  -->
 <LabelTextId>6915</LabelTextId>   <!--  6915 => "Electric Reheat State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5387</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_dhmd_opState</ProgrammaticName>
 <EngineeringDescription>Dehumidifier operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_DEHUM</EngineeringReference>
 <DescriptionTextId>6918</DescriptionTextId>   <!--  6918 => "Dehumidifier operational state."  -->
 <LabelTextId>6917</LabelTextId>   <!--  6917 => "Dehumidifier State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5388</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_hmd_opState</ProgrammaticName>
 <EngineeringDescription>Humidifier operational state.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_SHOW_HUM</EngineeringReference>
 <DescriptionTextId>6920</DescriptionTextId>   <!--  6920 => "Humidifier operational state."  -->
 <LabelTextId>6919</LabelTextId>   <!--  6919 => "Humidifier State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5389</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_FCLockoutEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Free Cooling Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_FCLockout.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_013</EngineeringReference>
 <DescriptionTextId>6922</DescriptionTextId>   <!--  6922 => "Enable/disable the activation of the [Ext Free Cooling Lockout] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6921</LabelTextId>   <!--  6921 => "Ext Free Cooling Lockout - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5390</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_FCLockoutType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Free Cooling Lockout] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_FCLockout.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP17_et</EngineeringReference>
 <DescriptionTextId>6924</DescriptionTextId>   <!--  6924 => "The event type for the [Ext Free Cooling Lockout] event."  -->
 <LabelTextId>6923</LabelTextId>   <!--  6923 => "Ext Free Cooling Lockout - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5391</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_stdbyUnitOnEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Standby Unit On] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_stdbyUnitOn.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_109</EngineeringReference>
 <DescriptionTextId>6926</DescriptionTextId>   <!--  6926 => "Enable/disable the activation of the [Ext Standby Unit On] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6925</LabelTextId>   <!--  6925 => "Ext Standby Unit On - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5392</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_stdbyUnitOnType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Standby Unit On] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_stdbyUnitOn.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_5_et</EngineeringReference>
 <DescriptionTextId>6928</DescriptionTextId>   <!--  6928 => "The event type for the [Ext Standby Unit On] event."  -->
 <LabelTextId>6927</LabelTextId>   <!--  6927 => "Ext Standby Unit On - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5393</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_airBlowerLossEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Loss of Air Blower] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_airBlowerLoss.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_017</EngineeringReference>
 <DescriptionTextId>6930</DescriptionTextId>   <!--  6930 => "Enable/disable the activation of the [Ext Loss of Air Blower] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6929</LabelTextId>   <!--  6929 => "Ext Loss of Air Blower - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5394</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_airBlowerLossType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Loss of Air Blower] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_airBlowerLoss.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP16_et</EngineeringReference>
 <DescriptionTextId>6932</DescriptionTextId>   <!--  6932 => "The event type for the [Ext Loss of Air Blower] event."  -->
 <LabelTextId>6931</LabelTextId>   <!--  6931 => "Ext Loss of Air Blower - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5395</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_pumpDownIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor Pump Down Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_pumpDownIssue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CPDE_mm</EngineeringReference>
 <DescriptionTextId>6934</DescriptionTextId>   <!--  6934 => "Enable/disable the activation of the [Compressor Pump Down Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6933</LabelTextId>   <!--  6933 => "Compressor Pump Down Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5396</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_pumpDownIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor Pump Down Issue] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_pumpDownIssue.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CPDT_et_mm</EngineeringReference>
 <DescriptionTextId>6936</DescriptionTextId>   <!--  6936 => "The event type for the [Compressor Pump Down Issue] event."  -->
 <LabelTextId>6935</LabelTextId>   <!--  6935 => "Compressor Pump Down Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5397</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Compressor Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See evt_comp_shortCycle.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CSCE_mm</EngineeringReference>
 <DescriptionTextId>6938</DescriptionTextId>   <!--  6938 => "Enable/disable the activation of the [Compressor Short Cycle] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6937</LabelTextId>   <!--  6937 => "Compressor Short Cycle - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5398</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_shortCycleType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Compressor Short Cycle] event.
Event types are message, warning, alarm, and fault.
See event evt_comp_shortCycle.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CSCT_et_mm</EngineeringReference>
 <DescriptionTextId>6940</DescriptionTextId>   <!--  6940 => "The event type for the [Compressor Short Cycle] event."  -->
 <LabelTextId>6939</LabelTextId>   <!--  6939 => "Compressor Short Cycle - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5399</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_tmpDschgDigScrOverEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Dig Scroll Comp Discharge Over Temp] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_comp_tmpDschgDigScrOver.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DSOE_mm</EngineeringReference>
 <DescriptionTextId>6942</DescriptionTextId>   <!--  6942 => "Enable/disable the activation of the [Dig Scroll Comp Discharge Over Temp] event."  -->
 <LabelTextId>6941</LabelTextId>   <!--  6941 => "Dig Scroll Comp Discharge Over Temp - Event Ctrl"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5400</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_comp_tmpDschgDigScrOverType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Dig Scroll Comp Discharge Over Temp] event.
Event types are message, warning, alarm, and failure.
See event evt_comp_tmpDschgDigScrOver.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_DSOT_et_mm</EngineeringReference>
 <DescriptionTextId>6944</DescriptionTextId>   <!--  6944 => "The event type for the [Dig Scroll Comp Discharge Over Temp] event."  -->
 <LabelTextId>6943</LabelTextId>   <!--  6943 => "Dig Scroll Comp Discharge Over Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5401</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_snsrAirEventsEnableA</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of events related to measurements by the external air sensor A.   This may include high and low temperature and humidity events.  This overrides all external air sensor A individual event controls.
If set to 'disabled', the events will not be annunciated.  This implies that the events will not be placed in any active event list or in any event history list.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HILOTEE_EN</EngineeringReference>
 <DescriptionTextId>6946</DescriptionTextId>   <!--  6946 => "Enable/disable the activation of events related to measurements by the external air sensor A."  -->
 <LabelTextId>6945</LabelTextId>   <!--  6945 => "Ext Air Sensor A Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5402</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_snsrRetAirEventsEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of events related to measurements by the return air sensor.  This may include high and low temperature and humidity events.  This overrides all return air sensor individual event controls.
If set to 'disabled', the events will not be annunciated.  This implies that the events will not be placed in any active event list or in any event history list.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HILOTE_EN</EngineeringReference>
 <DescriptionTextId>6948</DescriptionTextId>   <!--  6948 => "Enable/disable the activation of events related to measurements by the return air sensor."  -->
 <LabelTextId>6947</LabelTextId>   <!--  6947 => "Return Air Sensor Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5403</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_rhAirOverEnableA</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Air Sensor A High Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_rhAirOverA.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_024</EngineeringReference>
 <DescriptionTextId>6950</DescriptionTextId>   <!--  6950 => "Enable/disable the activation of the [Ext Air Sensor A High Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6949</LabelTextId>   <!--  6949 => "Ext Air Sensor A High Humidity - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5404</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_rhAirOverTypeA</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Air Sensor A High Humidity] event.
Event types are message, warning, alarm, and fault.
See event evt_ext_rhAirOverA.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_HHE_et</EngineeringReference>
 <DescriptionTextId>6952</DescriptionTextId>   <!--  6952 => "The event type for the [Ext Air Sensor A High Humidity] event."  -->
 <LabelTextId>6951</LabelTextId>   <!--  6951 => "Ext Air Sensor A High Humidity - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5405</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_rhAirUnderEnableA</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Air Sensor A Low Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_rhAirUnderA.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_025</EngineeringReference>
 <DescriptionTextId>6954</DescriptionTextId>   <!--  6954 => "Enable/disable the activation of the [Ext Air Sensor A Low Humidity] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6953</LabelTextId>   <!--  6953 => "Ext Air Sensor A Low Humidity - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5406</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_rhAirUnderTypeA</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Air Sensor A Low Humidity] event.
Event types are message, warning, alarm, and fault.
See event evt_ext_rhAirUnderA.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LHE_et</EngineeringReference>
 <DescriptionTextId>6956</DescriptionTextId>   <!--  6956 => "The event type for the [Ext Air Sensor A Low Humidity] event."  -->
 <LabelTextId>6955</LabelTextId>   <!--  6955 => "Ext Air Sensor A Low Humidity - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5407</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirRetUnderEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Return Air Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_sys_tmpAirRetUnder.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_019</EngineeringReference>
 <DescriptionTextId>6958</DescriptionTextId>   <!--  6958 => "Enable/disable the activation of the [Return Air Under Temperature] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6957</LabelTextId>   <!--  6957 => "Return Air Under Temp - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5408</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_tmpAirRetUnderType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Return Air Under Temperature] event.
Event types are message, warning, alarm, and fault.
See event evt_sys_tmpAirRetUnder.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_LRT_et</EngineeringReference>
 <DescriptionTextId>6960</DescriptionTextId>   <!--  6960 => "The event type for the [Return Air Under Temperature] event."  -->
 <LabelTextId>6959</LabelTextId>   <!--  6959 => "Return Air Under Temp - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5409</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_hrsExceededEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Fan Hours Exceeded] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_fan_hrsExceeded.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_026</EngineeringReference>
 <DescriptionTextId>6962</DescriptionTextId>   <!--  6962 => "Enable/disable the activation of the [Fan Hours Exceeded] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6961</LabelTextId>   <!--  6961 => "Fan Hours Exceeded - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5410</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_hrsExceededType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Fan Hours Exceeded] event.
Event types are message, warning, alarm, and failure.
See event evt_fan_hrsExceeded.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACONDHO_et</EngineeringReference>
 <DescriptionTextId>6964</DescriptionTextId>   <!--  6964 => "The event type for the [Fan Hours Exceeded] event."  -->
 <LabelTextId>6963</LabelTextId>   <!--  6963 => "Fan Hours Exceeded - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5411</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_mainOverloadEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Main Fan Overload] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_fan_mainOverload.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AW_EN_006</EngineeringReference>
 <DescriptionTextId>6966</DescriptionTextId>   <!--  6966 => "Enable/disable the activation of the [Main Fan Overload] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6965</LabelTextId>   <!--  6965 => "Main Fan Overload - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5412</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_mainOverloadType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Main Fan Overload] event.
Event types are message, warning, alarm, and failure.
See event evt_fan_mainOverload.
iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALMAINFANO_et</EngineeringReference>
 <DescriptionTextId>6968</DescriptionTextId>   <!--  6968 => "The event type for the [Main Fan Overload] event."  -->
 <LabelTextId>6967</LabelTextId>   <!--  6967 => "Main Fan Overload - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5413</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_issueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Condenser Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
            See event evt_cndsr_issue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CNDISE_mm</EngineeringReference>
 <DescriptionTextId>6970</DescriptionTextId>   <!--  6970 => "Enable/disable the activation of the [Condenser Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>6969</LabelTextId>   <!--  6969 => "Condenser Issue  - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5414</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_cndsr_issueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Condenser Issue] event.
            Event types are message, warning, alarm, and failure.
            See event evt_cndsr_issue.
            iCOM specific:
            iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_CNDIST_et_mm</EngineeringReference>
 <DescriptionTextId>6972</DescriptionTextId>   <!--  6972 => "The event type for the [Condenser Issue] event."  -->
 <LabelTextId>6971</LabelTextId>   <!--  6971 => "Condenser Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5415</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_airBlowerLoss</ProgrammaticName>
 <EngineeringDescription>Loss of air blower is detected, as indicated by an external input signal.  The event is deactivated when the signal is inactive.
The behavior of this event may optionally be modified by:
st_ext_airBlowerLossEnable
st_ext_airBlowerLossType
iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP16</EngineeringReference>
 <DescriptionTextId>6974</DescriptionTextId>   <!--  6974 => "Loss of air blower is detected, as indicated by an external input signal."  -->
 <LabelTextId>6973</LabelTextId>   <!--  6973 => "Ext Loss of Air Blower"  -->
 <EventDefn>
  <DataId>5415</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5416</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_stdbyUnitOn</ProgrammaticName>
 <EngineeringDescription>Standby unit is on, as indicated by an external input signal.  The event is deactivated when the signal is inactive.
The behavior of this event may optionally be modified by:
st_ext_stdbyUnitOnEnable
st_ext_stdbyUnitOnType
iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.  Event delay is internally controlled and is not accessible.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_ALCUSINP_5</EngineeringReference>
 <DescriptionTextId>6976</DescriptionTextId>   <!--  6976 => "Standby unit is on, as indicated by an external input signal."  -->
 <LabelTextId>6975</LabelTextId>   <!--  6975 => "Ext Standby Unit On"  -->
 <EventDefn>
  <DataId>5416</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5417</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_digOutBdNotDetected</ProgrammaticName>
 <EngineeringDescription>Digital output board is required to be connected, but no signal is detected.  The event is deactivated when signal is detected.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WA_DO0_NC</EngineeringReference>
 <DescriptionTextId>6978</DescriptionTextId>   <!--  6978 => "Digital output board is required to be connected, but no signal is detected."  -->
 <LabelTextId>6977</LabelTextId>   <!--  6977 => "Digital Output Board Not Detected"  -->
 <EventDefn>
  <DataId>5417</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5418</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_missingUnitCode</ProgrammaticName>
 <EngineeringDescription>Unit code has not been entered and saved.
iCOM Specific:  The unit code defines the specific options contained within an iCOM unit.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_UC_MISS</EngineeringReference>
 <DescriptionTextId>6980</DescriptionTextId>   <!--  6980 => "Unit code has not been entered and saved."  -->
 <LabelTextId>6979</LabelTextId>   <!--  6979 => "Unit Code Missing"  -->
 <EventDefn>
  <DataId>5418</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5419</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_unitCommLost</ProgrammaticName>
 <EngineeringDescription>Master has lost communication with one or more networked units.  The event is deactivated when communication is re-established.
Also see evt_sys_masterCommLost.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WANET</EngineeringReference>
 <DescriptionTextId>6982</DescriptionTextId>   <!--  6982 => "Master has lost communication with one or more networked units."  -->
 <LabelTextId>6981</LabelTextId>   <!--  6981 => "Unit Communication Lost"  -->
 <EventDefn>
  <DataId>5419</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5420</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pnl_type</ProgrammaticName>
 <EngineeringDescription>Identifies the physical configuration of the positions or poles on the electrical distribution panel. The two column panels, known as side by side, are numbered odd numbers on left and even on right.

PM4 Specific Behavior: The known physical layouts of breaker positions are  the two with one column of either 30 large I-line breaker positions or 42 standard. The 2 column sizes are 42, 54, 72 and 84, all standard size (i.e. current carrying capacity).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6984</DescriptionTextId>   <!--  6984 => "The identifier of the physical layout of the electrical distribution panel."  -->
 <LabelTextId>6983</LabelTextId>   <!--  6983 => "Distribution Panel Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4155</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5421</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_brnch_breakerPosition</ProgrammaticName>
 <EngineeringDescription>The panel position number of the branch breaker. Always the lowest number for a multi-pole breaker. (1 to N, where N is the total number of positions).

PM4 Specific Behavior: The Square D I-line panel has 30 poles configured 2 x 15. Liebert only wires 3 phase branches into it. Therefore, it actually has only 10 positions. But, this number will represent the pole number, 1 through 28, by 3. (i.e. 1, 4, 7,...28).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6991</DescriptionTextId>   <!--  6991 => "The position in the panel of the breaker of a branch. Lowest number if multi-phase."  -->
 <LabelTextId>6990</LabelTextId>   <!--  6990 => "Breaker position"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'PM4_HMI_fdm_gdd_ver.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5422</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_hiTempEPO</ProgrammaticName>
 <EngineeringDescription>The output power was turned off to protect the equipment because the equipment temeprature was over the limit.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6993</DescriptionTextId>   <!--  6993 => "Power turned off because equipment over temperature limit"  -->
 <LabelTextId>6992</LabelTextId>   <!--  6992 => "Overtemperature Power Off"  -->
 <EventDefn>
  <DataId>5422</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5423</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_auxTooManySensors</ProgrammaticName>
 <EngineeringDescription>The number of sensors connected to the PDU exceeds the allowable limit.

NOTE:
- The allowable limit is product dependent (it may be fixed or programmable).

MPX SPECIFIC:
- The allowable limit is fixed.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6995</DescriptionTextId>   <!--  6995 => "The number of sensors connected to the PDU exceeds the allowable limit."  -->
 <LabelTextId>6994</LabelTextId>   <!--  6994 => "Too Many Sensors"  -->
 <EventDefn>
  <DataId>5423</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5424</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_pdu_moduleTypeExtended</ProgrammaticName>
 <EngineeringDescription>Module type.  PDU module types can include BRM, BDM, PEM, RPC, PRC, SNSR, etc.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>6997</DescriptionTextId>   <!--  6997 => "Module Type"  -->
 <LabelTextId>6996</LabelTextId>   <!--  6996 => "Module Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4156</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5425</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_sensorSerialNumber</ProgrammaticName>
 <EngineeringDescription>The sensor's globally unique serial number assigned at the time of manufacture.

This is the serial number that is meant for display purposes / human consumption.

Do not use this field (i.e. deconstruct the contents) for determining programmatic behavior or components fields. The format of this can vary.

MPX Product:
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7001</DescriptionTextId>   <!--  7001 => "The sensor's globally unique serial number assigned at the time of manufacture."  -->
 <LabelTextId>7000</LabelTextId>   <!--  7000 => "Sensor Serial Number"  -->
 <TextDefn>
  <DataId>5425</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5426</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_tmpSensorLabelUsrAssign</ProgrammaticName>
 <EngineeringDescription>The user assigned temperature sensor label.

User assigned label that is not required to be unique within a system.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a sensor within a cluster of PDUs.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7003</DescriptionTextId>   <!--  7003 => "The user assigned temperature sensor label."  -->
 <LabelTextId>7002</LabelTextId>   <!--  7002 => "Temperature Sensor User Assigned Label"  -->
 <TextDefn>
  <DataId>5426</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5427</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_tmpSensorAssetTag01</ProgrammaticName>
 <EngineeringDescription>User assigned temperature sensor asset tag 01.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7005</DescriptionTextId>   <!--  7005 => "User assigned temperature sensor asset tag 01."  -->
 <LabelTextId>7004</LabelTextId>   <!--  7004 => "Temperature Sensor Asset Tag 01"  -->
 <TextDefn>
  <DataId>5427</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5428</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_tmpSensorAssetTag02</ProgrammaticName>
 <EngineeringDescription>User assigned temperature sensor asset tag 02.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7007</DescriptionTextId>   <!--  7007 => "User assigned temperature sensor asset tag 02."  -->
 <LabelTextId>7006</LabelTextId>   <!--  7006 => "Temperature Sensor Asset Tag 02"  -->
 <TextDefn>
  <DataId>5428</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5429</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_hmdSensorLabelUsrAssign</ProgrammaticName>
 <EngineeringDescription>The user assigned relative humidity sensor label.
User assigned label that is not required to be unique within a system.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a sensor within a cluster of PDUs.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7009</DescriptionTextId>   <!--  7009 => "The user assigned relative humidity sensor label."  -->
 <LabelTextId>7008</LabelTextId>   <!--  7008 => "Relative Humidity Sensor User Assigned Label"  -->
 <TextDefn>
  <DataId>5429</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5430</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_hmdSensorAssetTag01</ProgrammaticName>
 <EngineeringDescription>User assigned relative humidity sensor asset tag 01.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7011</DescriptionTextId>   <!--  7011 => "User assigned relative humidity sensor asset tag 01."  -->
 <LabelTextId>7010</LabelTextId>   <!--  7010 => "Relative Humidity Sensor Asset Tag 01"  -->
 <TextDefn>
  <DataId>5430</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5431</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_hmdSensorAssetTag02</ProgrammaticName>
 <EngineeringDescription>User assigned relative humidity sensor asset tag 02.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7013</DescriptionTextId>   <!--  7013 => "User assigned relative humidity sensor asset tag 02."  -->
 <LabelTextId>7012</LabelTextId>   <!--  7012 => "Relative Humidity Sensor Asset Tag 02"  -->
 <TextDefn>
  <DataId>5431</DataId>
 </TextDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'pm4_hmi_fdm.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5432</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_xfmr_hiTempEpo</ProgrammaticName>
 <EngineeringDescription>System Powered off because of high transformer temperature.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7015</DescriptionTextId>   <!--  7015 => "Output power shutdown due to high transformer temperature."  -->
 <LabelTextId>7014</LabelTextId>   <!--  7014 => "Transformer Overtemperature Power Off"  -->
 <EventDefn>
  <DataId>5432</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5433</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_xfmr_tmpOverLimit</ProgrammaticName>
 <EngineeringDescription>Indicates a transformer overtemperature condition.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7016</DescriptionTextId>   <!--  7016 => "Transformer temperature has exceeded the limit."  -->
 <LabelTextId>6472</LabelTextId>
 <EventDefn>
  <DataId>5433</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5434</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_xfmr_tempSensorFailed</ProgrammaticName>
 <EngineeringDescription>Transformer temperature sensor/s are reporting values outside the sensor's limits or multiple sensors are giving inconsistent readings.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7018</DescriptionTextId>   <!--  7018 => "Transformer temperature sensor has failed"  -->
 <LabelTextId>7017</LabelTextId>   <!--  7017 => "Transformer Temperature Sensor Fail"  -->
 <EventDefn>
  <DataId>5434</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'bdsu.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5435</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_bstg_resetAckAlarmsOnString</ProgrammaticName>
 <EngineeringDescription>Allows reset or acknowledgement of all alarms on a Battery-String and its associated cells.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7020</DescriptionTextId>   <!--  7020 => "Initiates a reset/clear or acknowledgement of all alarms on a battery-string and its associated cells."  -->
 <LabelTextId>7019</LabelTextId>   <!--  7019 => "Battery String Alarm Reset or Acknowledge"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4131</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5436</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_lowAmbientTemperature2</ProgrammaticName>
 <EngineeringDescription>The system has detected a low ambient temperature condition on temperature probe 2. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the ambient temperature is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_ambientTemperatureLowThreshold. The enable/disable for this event is a local point st_bstg_lowAmbientTemperatureEnable. The latch/unlatch for this event is st_bstg_lowAmbientTemperatureLatch. Reporting for this event is configurable via st_bstg_lowAmbientTemperatureAlarmReporting. The contact closure (critical/maintenance) for this  event is configurable via st_bstg_lowAmbientTemperature.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7022</DescriptionTextId>   <!--  7022 => "The system has detected a low ambient temperature condition on temperature probe 2."  -->
 <LabelTextId>7021</LabelTextId>   <!--  7021 => "Low Ambient Temperature Probe Two"  -->
 <EventDefn>
  <DataId>5436</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5437</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_highAmbientTemperature2</ProgrammaticName>
 <EngineeringDescription>The system has detected a high ambient temperature condition on temperature probe 2. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the ambient temperature is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_ambientTemperatureHighThreshold. The enable/disable for this event is a local point st_bstg_highAmbientTemperatureEnable. The latch/unlatch for this event is st_bstg_highAmbientTemperatureLatch. Alarm reporting for this event is configurable via st_bstg_highAmbientTemperatureAlarmReporting. The contact closure (critical/maintenance) for this  event is configurable via st_bstg_highAmbientTemperature.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7024</DescriptionTextId>   <!--  7024 => "The system has detected a high ambient temperature condition on temperature probe 2."  -->
 <LabelTextId>7023</LabelTextId>   <!--  7023 => "High Ambient Temperature Probe Two"  -->
 <EventDefn>
  <DataId>5437</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5438</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_thermalRunawayDetected</ProgrammaticName>
 <EngineeringDescription>The system has detected a thermal runaway condition. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell to ambient temperature difference is less than the threshold minus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_tmp_maxCellToAmbientTemperatureDeviationThreshold. The enable/disable for this event is a local point st_bstg_ThermalRunawayAlarmEnable. The latch/unlatch for this event is st_bstg_ThermalRunawayAlarmLatch. Alarm reporting for this event is configurable via st_bstg_ThermalRunawayAlarmReporting. The contact closure (critical/maintenance) for this  event is configurable via st_bstg_ThermalRunawayAlarmContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7026</DescriptionTextId>   <!--  7026 => "The system has detected a thermal runaway condition."  -->
 <LabelTextId>7025</LabelTextId>   <!--  7025 => "Thermal Runaway Detected"  -->
 <EventDefn>
  <DataId>5438</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5439</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_equalizeMode</ProgrammaticName>
 <EngineeringDescription>The system has detected a battery string equalize condition. The severity of this event is defined by the product. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The enable/disable for this event is a local point st_bstg_equalizeAlarmEnable. The latch/unlatch for this event is st_bstg_equalizeAlarmLatch. Reporting for this event is configurable via st_bstg_equalizeReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_equalizeAlarmContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7028</DescriptionTextId>   <!--  7028 => "The system has detected a battery string equalize condition."  -->
 <LabelTextId>7027</LabelTextId>   <!--  7027 => "Battery String Equalize"  -->
 <EventDefn>
  <DataId>5439</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5440</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_bstg_offlineMode</ProgrammaticName>
 <EngineeringDescription>The system has detected the battery string is offline. The severity of this event is defined by the product. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The enable/disable for this event is a local point st_bstg_offlineModeAlarmEnable. The latch/unlatch for this event is st_bstg_offlineModeAlarmLatch. Reporting for this event is configurable via st_bstg_offlineModeAlarmReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_offlineModeAlarmContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7030</DescriptionTextId>   <!--  7030 => "The system has detected the battery string is offline."  -->
 <LabelTextId>7029</LabelTextId>   <!--  7029 => "Battery String Offline"  -->
 <EventDefn>
  <DataId>5440</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5441</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_bstg_commissionedStatus</ProgrammaticName>
 <EngineeringDescription>Current commissioned status of battery string. The system is commissioned once all checks and validation are complete.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7032</DescriptionTextId>   <!--  7032 => "Current commissioned status of battery string."  -->
 <LabelTextId>7031</LabelTextId>   <!--  7031 => "Battery String Commissioned Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4157</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5442</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_cell_dischargeLowCellVoltage</ProgrammaticName>
 <EngineeringDescription>The system has detected a low cell voltage condition during a discharge. The severity of this event is defined by the product. The threshold value and time duration settings are product dependent (i.e. it may be a fixed value or an end-user configured value). The event clears once the cell voltage is more than the threshold plus hysteresis. Some products may provide a way to manually reset this event. Some products may provide a way to enable/disable this event. Some products may provide a way to configure this event as latched/unlatched. Some products may provide a way to configure this event to report/not report an alarm. Some products may provide a way to configure the severity of this event as critical/maintenance.

ALBER BDSU SPECIFIC: The threshold for this event is the local point val_bstg_ep_lowCellVoltageThresholdDuringDischarge. The enable/disable for this event is a local point st_bstg_dischargeLowCellVoltageEnable. The latch/unlatch for this event is st_bstg_dischargeLowCellVoltageLatch. Reporting for this event is configurable via st_bstg_dischargeLowCellVoltageReporting. The contact closure (critical/maintenance) for this event is configurable via st_bstg_dischargeLowCellVoltageContact.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>5922</DescriptionTextId>   <!--  5922 => ""  -->
 <LabelTextId>7035</LabelTextId>   <!--  7035 => "Discharge Low Cell Voltage"  -->
 <EventDefn>
  <DataId>5442</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5443</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_internalResistance</ProgrammaticName>
 <EngineeringDescription>The measured internal resistance of a cell.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7037</DescriptionTextId>   <!--  7037 => "The measured internal resistance of a cell."  -->
 <LabelTextId>7036</LabelTextId>   <!--  7036 => "Internal Resistance Value"  -->
 <NumericDefn>
  <MeasureBaseId>18</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5444</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_cell_interCellResistance</ProgrammaticName>
 <EngineeringDescription>The total resistance of the connection between the terminals of two cells that are electrically connected to each other.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7039</DescriptionTextId>   <!--  7039 => "The total resistance of the connection between the terminals of two cells that are electrically connected to each other."  -->
 <LabelTextId>7038</LabelTextId>   <!--  7038 => "Intercell Resistance Value"  -->
 <NumericDefn>
  <MeasureBaseId>18</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5445</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_hmd_pct_infraredFlush</ProgrammaticName>
 <EngineeringDescription>A multiple of an internal time constant that determines the
flush duration of the infrared humidifier water pan.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_FLUSHRATE</EngineeringReference>
 <DescriptionTextId>7041</DescriptionTextId>   <!--  7041 => "A multiple of an internal time constant that determines the flush duration of the infrared humidifier water pan."  -->
 <LabelTextId>7040</LabelTextId>   <!--  7040 => "Infrared Humidifier Flush Rate"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'RaptrHMI.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5446</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_kwHrs_saved</ProgrammaticName>
 <EngineeringDescription>The estimated kW hours saved due to ECO Mode or Intelligent Paralleling.

Raptor specific - display kW Hours Saved in (hhhhhhhh).</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7043</DescriptionTextId>   <!--  7043 => "Total kW hours saved by ECO Mode or Intelligent Paralleling."  -->
 <LabelTextId>7042</LabelTextId>   <!--  7042 => "Total kW Hours Saved"  -->
 <NumericDefn>
  <MeasureBaseId>10</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5447</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_pwrShare</ProgrammaticName>
 <EngineeringDescription>Becomes active when a module in a multi module system determines that at least one phase is not sharing the power within some threshold as compared to the per phase average power of all the other modules.
Recovers when sharing is within some threshold or this module is not part of the collective.</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event231</EngineeringReference>
 <DescriptionTextId>7045</DescriptionTextId>   <!--  7045 => "A module is not sharing power with the other modules in a multi-module system."  -->
 <LabelTextId>7044</LabelTextId>   <!--  7044 => "MMS Power Sharing"  -->
 <EventDefn>
  <DataId>5447</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5448</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_ipOperation</ProgrammaticName>
 <EngineeringDescription>Intelligent Parallel Operation State, The goal of Intelligent Paralleling is to increase the system efficiency and reduce the operating hours on the modules in a Multi-Module System.  Intelligent Paralleling will put one or more paralleled modules into standby operation when the number of redundant modules is above the user specified threshold, plus some hysteresis.

Valid states are: disabled, enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7047</DescriptionTextId>   <!--  7047 => "This setting is used to enable or disable Intelligent Paralleling."  -->
 <LabelTextId>7046</LabelTextId>   <!--  7046 => "Intelligent Parallel Operation State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5449</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_mms_ipMode</ProgrammaticName>
 <EngineeringDescription>Intelligent Parallel operation Mode. This setting gives the user the ability to choose between different energy consumption modes while Intelligent Paralleling is active and module is in standby. Best Efficiency - Module Off consumes the least energy of the options but takes the longest time to get the module back on line. Better Efficiency - Module Disconnect consumes slightly more energy than Best Efficiency - Module Off but takes less time to get the module back on line. Fastest Response - Module Idle consumes the most energy of the options but takes the shortest time to get the module back on line.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7049</DescriptionTextId>   <!--  7049 => "This setting gives the user the ability to choose between different energy consumption modes while Intelligent Paralleling is active and module is in standby."  -->
 <LabelTextId>7048</LabelTextId>   <!--  7048 => "Intelligent Parallel Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4158</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5450</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_tm_ipShutdownDelay</ProgrammaticName>
 <EngineeringDescription>Intelligent Parallel Shutdown Delay - This setting indicates how long a module should wait before Intelligent Paralleling is active and module is in standby. Once the conditions for module standby have been satisfied, the conditions must remain satisfied for the full Intelligent Paralleling - Shutdown Delay before Intelligent Paralleling is active and the module is in standby.

Raptor specific - Time is measured in minutes.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7054</DescriptionTextId>   <!--  7054 => "This is the length of time the conditions for module standby must remain satisfied before the module goes into standby."  -->
 <LabelTextId>7053</LabelTextId>   <!--  7053 => "Intelligent Paralleling Shutdown Delay"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5451</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_na_ipMinRedund</ProgrammaticName>
 <EngineeringDescription>Intelligent Parallel Minimum Redundancy - This is the minimum Number of Redundant Modules that the system will allow before bringing one or more modules back to normal operation and terminating Intelligent Paralleling.

Raptor specific - The Maximum System Redundancy is internal and equal to this setting plus 1.25 modules. This is the maximum Number of Redundant Modules that the system will allow before putting one or more modules into standby and activating Intelligent Paralleling.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7056</DescriptionTextId>   <!--  7056 => "This is the minimum Number of Redundant Modules that the system will allow before bringing one or more modules back to normal operation and terminating Intelligent Paralleling."  -->
 <LabelTextId>7055</LabelTextId>   <!--  7055 => "Intelligent Parallel Minimum Redundancy"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5452</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_mms_tm_ipInStandby</ProgrammaticName>
 <EngineeringDescription>The maximum time a module can be in standby mode due to Intelligent Paralleling.

Raptor Specific -
This setting allows the user to cycle a module that has had Intelligent Paralleling active the longest with another module currently in normal operation after the selected amount of time (# of days). The user has the ability to disable this feature by selecting 0 days</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7058</DescriptionTextId>   <!--  7058 => "The maximum time a module can be in standby mode due to Intelligent Paralleling."  -->
 <LabelTextId>7057</LabelTextId>   <!--  7057 => "Intelligent Parallel Maximum Time in Standby"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5453</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_mms_ipModInStandby</ProgrammaticName>
 <EngineeringDescription>Module is placed into standby operation per Intelligent Paralleling.</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event203</EngineeringReference>
 <DescriptionTextId>7060</DescriptionTextId>   <!--  7060 => "Module is placed into standby operation per Intelligent Paralleling."  -->
 <LabelTextId>7059</LabelTextId>   <!--  7059 => "Module In Standby - Intelligent Paralleling"  -->
 <EventDefn>
  <DataId>5453</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5454</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_ecoOperation</ProgrammaticName>
 <EngineeringDescription>ECO Mode Operation State. The goal of ECO Mode is to improve the overall efficiency by powering the critical bus from the bypass static switch instead of the inverter. When the critical bus goes out of tolerance (voltage, frequency or slew rate), the bypass static switch is turned off and the inverter powers the critical bus. The inverter is always ready to take the load in the event that the bypass source fails.

Valid states are: disabled, enabled.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7062</DescriptionTextId>   <!--  7062 => "This setting is used to enable or disable ECO Mode."  -->
 <LabelTextId>7061</LabelTextId>   <!--  7061 => "ECO Mode Operation State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5455</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_ecoContinuousOperation</ProgrammaticName>
 <EngineeringDescription>This setting gives the user the ability to run ECO Mode continuous through the use of the ECO Mode - Start / Stop commands. When this setting is enabled, the system shall no longer automatically start/stop ECO Mode by way of Scheduling. When this setting is enabled, the operation schedule shall be frozen and no new entries shall be allowed.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7064</DescriptionTextId>   <!--  7064 => "This setting gives the user the ability to Enable/Disable ECO Mode continuous operation."  -->
 <LabelTextId>7063</LabelTextId>   <!--  7063 => "Continuous Operation - ECO Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5456</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ecoModeActive</ProgrammaticName>
 <EngineeringDescription>ECO Mode is acitve</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event205</EngineeringReference>
 <DescriptionTextId>7066</DescriptionTextId>   <!--  7066 => "Conditions for Activation or Automatic Reactivation have been satisfied."  -->
 <LabelTextId>7065</LabelTextId>   <!--  7065 => "ECO Mode Active"  -->
 <EventDefn>
  <DataId>5456</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5457</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ecoModeSuspended</ProgrammaticName>
 <EngineeringDescription>ECO Mode session is suspended</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event212</EngineeringReference>
 <DescriptionTextId>7068</DescriptionTextId>   <!--  7068 => "ECO Mode session is suspended."  -->
 <LabelTextId>7067</LabelTextId>   <!--  7067 => "ECO Mode Suspended"  -->
 <EventDefn>
  <DataId>5457</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5458</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_ecoExcessSuspends</ProgrammaticName>
 <EngineeringDescription>With ECO Mode Session active, the number of automatic suspensions has exceeded the ECO Mode - Maximum Auto Suspensions setting.</EngineeringDescription>
 <EngineeringReference>tag=raptorERS:event230</EngineeringReference>
 <DescriptionTextId>7070</DescriptionTextId>   <!--  7070 => "Number of automatic suspensions has exceeded the ECO Mode - Maximum Auto Suspensions setting."  -->
 <LabelTextId>7069</LabelTextId>   <!--  7069 => "Excess ECO Suspends"  -->
 <EventDefn>
  <DataId>5458</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5459</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ecoMaxAutoSuspensions</ProgrammaticName>
 <EngineeringDescription>Maximum number of automatic ECO Mode suspensions permitted in a session. This setting gives the user the ability to choose how many times the system is allowed to automatically reactivate ECO Mode before the current ECO Mode session is terminated and Excessive ECO Mode Suspension event is set. The ECO Mode suspension counter will reset and Excessive ECO Mode Suspension event is cleared once an ECO Mode Session is active again.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7072</DescriptionTextId>   <!--  7072 => "This setting sets the maximum number of automatic ECO Mode suspensions in a session."  -->
 <LabelTextId>7071</LabelTextId>   <!--  7071 => "Maximum Auto Suspensions - ECO Mode"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5460</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ecoRestartDelay</ProgrammaticName>
 <EngineeringDescription>The time delay that the conditions to activate ECO Mode must be satisfied before ECO Mode can be reactivated during an active session.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7074</DescriptionTextId>   <!--  7074 => "The time delay that the conditions to activate ECO Mode must be satisfied before ECO Mode can be reactivated during an active session."  -->
 <LabelTextId>7073</LabelTextId>   <!--  7073 => "Restart Delay - ECO Mode"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5461</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_ecoScheduleOperation</ProgrammaticName>
 <EngineeringDescription>This setting gives the user the ability to either enable or disable a schedule entry. This only applies to Start entries.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7076</DescriptionTextId>   <!--  7076 => "This setting gives the user the ability to either enable or disable a schedule entry if the action is Start."  -->
 <LabelTextId>7075</LabelTextId>   <!--  7075 => "Schedule Operation State - ECO Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5462</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_ecoScheduleAction</ProgrammaticName>
 <EngineeringDescription>This setting gives the user the ability to choose the action of a schedule entry to be either stop or start.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7078</DescriptionTextId>   <!--  7078 => "This setting gives the user the ability to choose the action of a schedule entry to be either stop or start."  -->
 <LabelTextId>7077</LabelTextId>   <!--  7077 => "Schedule Action - ECO Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4159</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5463</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_ecoScheduleDayOfWeek</ProgrammaticName>
 <EngineeringDescription>This setting gives the user the ability to choose the day of the week when an associated ECO Mode schedule entry action will take effect.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7082</DescriptionTextId>   <!--  7082 => "This setting represents the day of the week when an associated ECO Mode schedule entry action will take effect."  -->
 <LabelTextId>7081</LabelTextId>   <!--  7081 => "Schedule Day of Week - ECO Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4160</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5464</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ecoScheduleHour</ProgrammaticName>
 <EngineeringDescription>This setting gives the user the ability to choose the hour portion of the time of day (hh:mm) when an associated schedule entry action will take effect. Used in conjunction with "val_sys_ecoScheduleMin"</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7091</DescriptionTextId>   <!--  7091 => "This setting represents the hour of the day when an associated schedule entry action will take effect."  -->
 <LabelTextId>7090</LabelTextId>   <!--  7090 => "Schedule Hour - ECO Mode"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5465</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_ecoScheduleMin</ProgrammaticName>
 <EngineeringDescription>This setting gives the user the ability to choose the minute portion of the time of day (hh:mm) when an associated schedule entry action will take effect. Used in conjunction with "val_sys_ecoScheduleHour"</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7093</DescriptionTextId>   <!--  7093 => "This setting represents the minute of the hour when an associated schedule entry action will take effect."  -->
 <LabelTextId>7092</LabelTextId>   <!--  7092 => "Schedule Minute - ECO Mode"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5466</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_tm_ecoModeRemaining</ProgrammaticName>
 <EngineeringDescription>This value represents the time remaining before current active ECO Mode session stops.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7095</DescriptionTextId>   <!--  7095 => "Time remaining before current active ECO Mode session stops."  -->
 <LabelTextId>7094</LabelTextId>   <!--  7094 => "Time Remaining - ECO Mode"  -->
 <NumericDefn>
  <MeasureBaseId>1</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'mpx.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5467</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_sensorType</ProgrammaticName>
 <EngineeringDescription>Auxiliary Sensor Measurement Type.

The following measurement types are supported:
-Temperature
-Relative Humidity
-Door Closure
-Contact Closure</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7097</DescriptionTextId>   <!--  7097 => "Auxiliary Sensor Measurement Type"  -->
 <LabelTextId>7096</LabelTextId>   <!--  7096 => "Auxiliary Sensor Measurement Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4161</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5468</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_snsr_clsrPopulate</ProgrammaticName>
 <EngineeringDescription>User setting to populate or depopulate reports for detected door or contact closure sensor data objects.

MPX Product:
- The settings for this data object apply only to door and contact closure sensor data objects.  The default setting is to populate detected reports.  Each bit can be used to define populated reports.  For example, asserting bit zero shall populate the measurement report at the first position.  Not all bits will correspond to a measurement.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7104</DescriptionTextId>   <!--  7104 => "User setting to populate or depopulate reports for detected door or contact closure sensor data objects"  -->
 <LabelTextId>7103</LabelTextId>   <!--  7103 => "Sensor Measurement Visible"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4162</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5469</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_dr_pos</ProgrammaticName>
 <EngineeringDescription>A one-based number indicating the position of this measurement input within a sensor module.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7115</DescriptionTextId>   <!--  7115 => "A one-based number indicating the position of this measurement input within a sensor module"  -->
 <LabelTextId>7114</LabelTextId>   <!--  7114 => "Measurement Position"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5470</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_dr_closureState</ProgrammaticName>
 <EngineeringDescription>Indicates if the door is closed.
The door closure states have the following meanings:
open - The door is open.
closed - The door is closed.
disconnected - The door closure switch is not connected to the door switch sensor.
unknown - Unable to determine the present state of the door switch sensor. This might occur shortly after a boot or hot install event, where the system has not yet had a chance to fully discover the system's configuration. Once the system is up and running in a steady state condition, this value would only occur 
if there is a system communication issue.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7117</DescriptionTextId>   <!--  7117 => "Indicates if the door is closed"  -->
 <LabelTextId>7116</LabelTextId>   <!--  7116 => "Door Closure State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4163</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5471</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_drClosureOpen</ProgrammaticName>
 <EngineeringDescription>An open door was detected.  This event is asserted when the door is opened and the alarm is enabled.  The alarm can be enabled through the configuration of data object st_aux_dr_clsrStateAlrm.

Changing the door closure state or writing an acknowledgement to this data object will suppress an alarm if it is currently active.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7123</DescriptionTextId>   <!--  7123 => "An open door was detected"  -->
 <LabelTextId>7122</LabelTextId>   <!--  7122 => "Door Open"  -->
 <EventDefn>
  <DataId>5471</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5472</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_drClosureDisconnected</ProgrammaticName>
 <EngineeringDescription>Door sensor disconnect detected.  This event is asserted when the door switch is disconnected from the door closure sensor.  The alarm can be enabled through the configuration of data object st_aux_dr_clsrStateAlrm.  

Reconnecting the door switch or writing an acknowledgement to this data object will suppress an alarm if it is currently active.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7125</DescriptionTextId>   <!--  7125 => "Door sensor disconnect detected"  -->
 <LabelTextId>7124</LabelTextId>   <!--  7124 => "Door Sensor Disconnected"  -->
 <EventDefn>
  <DataId>5472</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5473</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_drClosureLabelUsrAssign</ProgrammaticName>
 <EngineeringDescription>The user assigned door closure sensor label.

User assigned label that is not required to be unique within a system.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a sensor within a cluster of PDUs.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.
</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7127</DescriptionTextId>   <!--  7127 => "The user assigned door closure sensor label"  -->
 <LabelTextId>7126</LabelTextId>   <!--  7126 => "Door Closure Sensor User Assigned Label"  -->
 <TextDefn>
  <DataId>5473</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5474</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_drClosureAssetTag01</ProgrammaticName>
 <EngineeringDescription>User assigned door closure sensor asset tag 01.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7129</DescriptionTextId>   <!--  7129 => "User assigned door closure sensor asset tag 01"  -->
 <LabelTextId>7128</LabelTextId>   <!--  7128 => "Door Closure Sensor Asset Tag 01"  -->
 <TextDefn>
  <DataId>5474</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5475</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_drClosureAssetTag02</ProgrammaticName>
 <EngineeringDescription>User assigned door closure sensor asset tag 02.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Asset tag values are not required to be unique.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7131</DescriptionTextId>   <!--  7131 => "User assigned door closure sensor asset tag 02"  -->
 <LabelTextId>7130</LabelTextId>   <!--  7130 => "Door Closure Sensor Asset Tag 02"  -->
 <TextDefn>
  <DataId>5475</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5476</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_dr_clsrStateAlrmCfg</ProgrammaticName>
 <EngineeringDescription>Door Closure State Alarm Config.  Use this data object to enable or disable evt_aux_drClosureOpen and 
evt_aux_drClosureDisconnected.

The following alarms are supported:
-Door closure open
-Door closure disconnected
StateDefinitionId: DoorAlarmConfig</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7133</DescriptionTextId>   <!--  7133 => "Door Closure State Alarm Config"  -->
 <LabelTextId>7132</LabelTextId>   <!--  7132 => "Door Closure State Alarm Config"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4164</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5477</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_aux_cntct_pos</ProgrammaticName>
 <EngineeringDescription>A one-based number indicating the position of this measurement input within a sensor module.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7138</DescriptionTextId>   <!--  7138 => "A one-based number indicating the position of this measurement input within a sensor module"  -->
 <LabelTextId>7137</LabelTextId>   <!--  7137 => "Measurement Position"  -->
 <NumericDefn>
  <MeasureBaseId>0</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5478</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_cntct_closureState</ProgrammaticName>
 <EngineeringDescription>Indicates the closure of a circuit.
The contact closure states have the following meanings:
open - The circuit is open.
closed - The circuit is closed.
unknown - Unable to determine the present state of the circuit. This might occur shortly after a boot or hot install event, where the system has not yet had a chance to fully discover the system's configuration. Once the system is up and running in a steady state condition, this value would only occur if there is a system communication issue.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7140</DescriptionTextId>   <!--  7140 => "Indicates the closure of a circuit"  -->
 <LabelTextId>7139</LabelTextId>   <!--  7139 => "Contact Closure State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4165</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5479</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_cntctClosureOpen</ProgrammaticName>
 <EngineeringDescription>An open circuit was detected.  This event is asserted when the circuit is open and the alarm is enabled.  The alarm can be enabled through the configuration of data object st_aux_cntct_clsrStateAlrm.  Changing the door closure state or writing an acknowledgement to this data object will suppress an alarm if it is currently active.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7145</DescriptionTextId>   <!--  7145 => "An open circuit was detected"  -->
 <LabelTextId>7144</LabelTextId>   <!--  7144 => "Contact Closure Open"  -->
 <EventDefn>
  <DataId>5479</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5480</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_aux_cntctClosureClosed</ProgrammaticName>
 <EngineeringDescription>A closed circuit was detected.  This event is asserted when the circuit is closed and the alarm is enabled.  The alarm can be enabled through the configuration of data object st_aux_cntct_clsrStateAlrm.  Changing the door closure state or writing an acknowledgement to this data object will suppress an alarm if it is currently active.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7147</DescriptionTextId>   <!--  7147 => "A closed circuit was detected"  -->
 <LabelTextId>7146</LabelTextId>   <!--  7146 => "Contact Closure Closed"  -->
 <EventDefn>
  <DataId>5480</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5481</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_cntctClosureLabelUsrAssign</ProgrammaticName>
 <EngineeringDescription>The user assigned contact closure sensor label.

User assigned label that is not required to be unique within a system.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a sensor within a cluster of PDUs.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7149</DescriptionTextId>   <!--  7149 => "The user assigned contact closure sensor label"  -->
 <LabelTextId>7148</LabelTextId>   <!--  7148 => "Contact Closure Sensor User Assigned Label"  -->
 <TextDefn>
  <DataId>5481</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5482</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_cntctClosureAssetTag01</ProgrammaticName>
 <EngineeringDescription>User assigned contact closure sensor asset tag 01.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a sensor within a cluster of PDUs.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7151</DescriptionTextId>   <!--  7151 => "User assigned contact closure sensor asset tag 01"  -->
 <LabelTextId>7150</LabelTextId>   <!--  7150 => "Contact Closure Sensor Asset Tag 01"  -->
 <TextDefn>
  <DataId>5482</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5483</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_aux_cntctClosureAssetTag02</ProgrammaticName>
 <EngineeringDescription>User assigned contact closure sensor asset tag 02.

MPX Product:
- Only 7-bit ASCII characters are supported.
- Identifies a sensor within a cluster of PDUs.
- A sensor is defined as a one-wire device.  Modules or integrated sensors may have multiple one-wire devices.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7153</DescriptionTextId>   <!--  7153 => "User assigned contact closure sensor asset tag 02"  -->
 <LabelTextId>7152</LabelTextId>   <!--  7152 => "Contact Closure Sensor Asset Tag 02"  -->
 <TextDefn>
  <DataId>5483</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5484</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_aux_cntct_clsrStateAlrmCfg</ProgrammaticName>
 <EngineeringDescription>Contact Closure State Alarm Config.  Use this data object to enable or disable evt_aux_cntctClosureOpen and evt_aux_cntctClosureClosed.

The following alarms are supported:
-Contact closure open
-Contact closure closed</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7155</DescriptionTextId>   <!--  7155 => "Contact Closure State Alarm Config"  -->
 <LabelTextId>7154</LabelTextId>   <!--  7154 => "Contact Closure State Alarm Config"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4166</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_XP.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5485</DataId>
 <DefnType>TextDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>str_ext_positionLabel</ProgrammaticName>
 <EngineeringDescription>This is the user assigned label indicating the position of the device.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7160</DescriptionTextId>   <!--  7160 => "This is the user assigned label indicating the position of the device."  -->
 <LabelTextId>7159</LabelTextId>   <!--  7159 => "Position Label"  -->
 <TextDefn>
  <DataId>5485</DataId>
 </TextDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5486</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_remCommStatus</ProgrammaticName>
 <EngineeringDescription>Communication status of remote device.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xERRORS_mm</EngineeringReference>
 <DescriptionTextId>7162</DescriptionTextId>   <!--  7162 => "Communication status of remote device."  -->
 <LabelTextId>7161</LabelTextId>   <!--  7161 => "Communication Status"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4167</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5487</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_onOffCtrl</ProgrammaticName>
 <EngineeringDescription>Turn system fans on or off.
These are the environmental unit's blower fans.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7166</DescriptionTextId>   <!--  7166 => "Turn system fans on or off."  -->
 <LabelTextId>7165</LabelTextId>   <!--  7165 => "Fan On/Off Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4100</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5488</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_btnCtrlFan</ProgrammaticName>
 <EngineeringDescription>Enable or disable the buttons from controlling the state of the fans.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xLOCBUTN_mm</EngineeringReference>
 <DescriptionTextId>7168</DescriptionTextId>   <!--  7168 => "Enable or disable the buttons from controlling the state of the fans."  -->
 <LabelTextId>7167</LabelTextId>   <!--  7167 => "Fan Button Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4168</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5489</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_visualIdCtrl</ProgrammaticName>
 <EngineeringDescription>Visual identification control to display an LED flashing sequence, allowing it to be visually located.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xVISUAID_mm</EngineeringReference>
 <DescriptionTextId>7172</DescriptionTextId>   <!--  7172 => "Visual identification control to display an LED flashing sequence, allowing it to be visually located."  -->
 <LabelTextId>7171</LabelTextId>   <!--  7171 => "Visual ID Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5490</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pct_coolCapacity</ProgrammaticName>
 <EngineeringDescription>Cooling capacity in use, expressed as a percentage of the maximum rated capacity.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xCALPER_mm</EngineeringReference>
 <DescriptionTextId>7174</DescriptionTextId>   <!--  7174 => "Cooling capacity in use, expressed as a percentage of the maximum rated capacity."  -->
 <LabelTextId>7173</LabelTextId>   <!--  7173 => "Cooling Capacity"  -->
 <NumericDefn>
  <MeasureBaseId>11</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5491</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_sys_pwr_coolCapacity</ProgrammaticName>
 <EngineeringDescription>Cooling capacity in use, expressed in kilowatts.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xCALKW_mm</EngineeringReference>
 <DescriptionTextId>7176</DescriptionTextId>   <!--  7176 => "Cooling capacity in use, expressed in kilowatts."  -->
 <LabelTextId>7175</LabelTextId>   <!--  7175 => "Cooling Capacity"  -->
 <NumericDefn>
  <MeasureBaseId>6</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5492</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_condensDetect</ProgrammaticName>
 <EngineeringDescription>External system condensation detected.  The event is deactivated when condensation is no longer detected.

The behavior of this event may optionally be modified by:
st_ext_condensDetectEnable
st_ext_condensDetectType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xCONDN_mm</EngineeringReference>
 <DescriptionTextId>7178</DescriptionTextId>   <!--  7178 => "External system condensation detected."  -->
 <LabelTextId>7177</LabelTextId>   <!--  7177 => "Ext System Condensation Detected"  -->
 <EventDefn>
  <DataId>5492</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5493</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_condensDetectEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext System Condensation Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_condensDetect.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_CONDN_EN_mm</EngineeringReference>
 <DescriptionTextId>7180</DescriptionTextId>   <!--  7180 => "Enable/disable the activation of the [Ext System Condensation Detected] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>7179</LabelTextId>   <!--  7179 => "Ext System Condensation Detected - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5494</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_condensDetectType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext System Condensation Detected] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_condensDetect.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xCONDN_et_mm</EngineeringReference>
 <DescriptionTextId>7182</DescriptionTextId>   <!--  7182 => "The event type for the [Ext System Condensation Detected] event."  -->
 <LabelTextId>7181</LabelTextId>   <!--  7181 => "Ext System Condensation Detected - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5495</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_fanIssue</ProgrammaticName>
 <EngineeringDescription>One or more fans are not operating within their operational parameters.   The event is deactivated when the fans return to normal operation.
NOTE: This is not a failure of one or more fans that are cooling the system internal components.  It is a failure of one or more of the environmental unit's blower fans.

The annunciation of this event may optionally be modified by:
st_ext_fanIssueEnable
st_ext_fanIssueType

iCOM Specific: The event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xFNFAL_mm</EngineeringReference>
 <DescriptionTextId>7184</DescriptionTextId>   <!--  7184 => "One or more fans are not operating within their operational parameters."  -->
 <LabelTextId>7183</LabelTextId>   <!--  7183 => "Ext Fan Issue"  -->
 <EventDefn>
  <DataId>5495</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5496</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_fanIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Ext Fan Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_fanIssue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_FNFAL_EN_mm</EngineeringReference>
 <DescriptionTextId>7186</DescriptionTextId>   <!--  7186 => "Enable/disable the activation of the [Ext Fan Issue] event.  If set to 'disabled', the event will not be annunciated.  This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>7185</LabelTextId>   <!--  7185 => "Ext Fan Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5497</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_fanIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Ext Fan Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_fanIssue.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xFNFAL_et_mm</EngineeringReference>
 <DescriptionTextId>7188</DescriptionTextId>   <!--  7188 => "The event type for the [Ext Fan Issue] event."  -->
 <LabelTextId>7187</LabelTextId>   <!--  7187 => "Ext Fan Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5498</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_remSnsrIssueEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Remote Sensor Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_remSnsrIssue.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_SNFAL_EN_mm</EngineeringReference>
 <DescriptionTextId>7190</DescriptionTextId>   <!--  7190 => "Enable/disable the activation of the [Remote Sensor Issue] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>7189</LabelTextId>   <!--  7189 => "Remote Sensor Issue - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5499</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_ext_remSnsrIssueType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Remote Sensor Issue] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_remSnsrIssue.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xSNFAL_et_mm</EngineeringReference>
 <DescriptionTextId>7192</DescriptionTextId>   <!--  7192 => "The event type for the [Remote Sensor Issue] event."  -->
 <LabelTextId>7191</LabelTextId>   <!--  7191 => "Remote Sensor Issue - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5500</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_remShutdown</ProgrammaticName>
 <EngineeringDescription>Unit is shut down by a remote signal.  The event is deactivated when the signal is inactive.
The behavior of this event may optionally be modified by:
st_ext_remShutdownEnable
st_ext_remShutdownType

iCOM specific: Event will not be activated unless it is enabled and the event condition is true for the full event delay period.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xSHDWN_mm</EngineeringReference>
 <DescriptionTextId>7194</DescriptionTextId>   <!--  7194 => "Unit is shut down by a remote signal."  -->
 <LabelTextId>7193</LabelTextId>   <!--  7193 => "Ext Remote Shutdown"  -->
 <EventDefn>
  <DataId>5500</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5501</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_remShutdownEnable</ProgrammaticName>
 <EngineeringDescription>Enable/disable the activation of the [Remote Shutdown] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list.
See event evt_ext_remShutdown.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_SHDWN_EN_mm</EngineeringReference>
 <DescriptionTextId>7196</DescriptionTextId>   <!--  7196 => "Enable/disable the activation of the [Remote Shutdown] event. If set to 'disabled', the event will not be annunciated. This implies that the event will not be placed in any active event list or in any event history list."  -->
 <LabelTextId>7195</LabelTextId>   <!--  7195 => "Ext Remote Shutdown - Event Control"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4102</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5502</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_sys_remShutdownType</ProgrammaticName>
 <EngineeringDescription>The event type for the [Remote Shutdown] event.
Event types are message, warning, alarm, and failure.
See event evt_ext_remShutdown.

iCOM specific:
iCOM only supports message, warning, and alarm.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xSHDWN_et_mm</EngineeringReference>
 <DescriptionTextId>7198</DescriptionTextId>   <!--  7198 => "The event type for the [Remote Shutdown] event."  -->
 <LabelTextId>7197</LabelTextId>   <!--  7197 => "Ext Remote Shutdown - Event Type"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4127</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5503</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_overThrshldAisleHot</ProgrammaticName>
 <EngineeringDescription>Upper threshold value used in the [Hot Aisle Temp Out of Range] event.
See event evt_ext_tmpRangeAisleHot.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xHOTHGH_mm</EngineeringReference>
 <DescriptionTextId>7200</DescriptionTextId>   <!--  7200 => "Upper threshold value used in the [Hot Aisle Temp Out of Range] event."  -->
 <LabelTextId>7199</LabelTextId>   <!--  7199 => "Hot Aisle Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5504</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_underThrshldAisleHot</ProgrammaticName>
 <EngineeringDescription>Lower threshold value used in the [Hot Aisle Temp Out of Range] event.
See event evt_ext_tmpRangeAisleHot.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xHOTLOW_mm</EngineeringReference>
 <DescriptionTextId>7202</DescriptionTextId>   <!--  7202 => "Lower threshold value used in the [Hot Aisle Temp Out of Range] event."  -->
 <LabelTextId>7201</LabelTextId>   <!--  7201 => "Hot Aisle Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5505</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpRangeAisleHot</ProgrammaticName>
 <EngineeringDescription>The air temperature in the Hot aisle is either above [Hot Aisle Over Temp Threshold] or below [Hot Aisle Under Temp Threshold].  The event is deactivated when temperature is within the thresholds.

Event thresholds are specified in val_ext_tmp_overThrshldAisleHot and val_ext_tmp_underThrshldAisleHot.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xHOTA_mm</EngineeringReference>
 <DescriptionTextId>7204</DescriptionTextId>   <!--  7204 => "The air temperature in the Hot aisle is either above [Hot Aisle Over Temp Threshold] or below [Hot Aisle Under Temp Threshold]."  -->
 <LabelTextId>7203</LabelTextId>   <!--  7203 => "Hot Aisle Temp Out of Range"  -->
 <EventDefn>
  <DataId>5505</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5506</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_overThrshldAisleCold</ProgrammaticName>
 <EngineeringDescription>Upper threshold value used in the [Cold Aisle Temp Out of Range] event.
See event evt_ext_tmpRangeAisleCold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xCOLDHGH_mm</EngineeringReference>
 <DescriptionTextId>7206</DescriptionTextId>   <!--  7206 => "Upper threshold value used in the [Cold Aisle Temp Out of Range] event."  -->
 <LabelTextId>7205</LabelTextId>   <!--  7205 => "Cold Aisle Over Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5507</DataId>
 <DefnType>NumericDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>val_ext_tmp_underThrshldAisleCold</ProgrammaticName>
 <EngineeringDescription>Lower threshold value used in the [Cold Aisle Temp Out of Range] event.
See event evt_ext_tmpRangeAisleCold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xCOLDLOW_mm</EngineeringReference>
 <DescriptionTextId>7208</DescriptionTextId>   <!--  7208 => "Lower threshold value used in the [Cold Aisle Temp Out of Range] event."  -->
 <LabelTextId>7207</LabelTextId>   <!--  7207 => "Cold Aisle Under Temp Threshold"  -->
 <NumericDefn>
  <MeasureBaseId>7</MeasureBaseId>
 </NumericDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5508</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_ext_tmpRangeAisleCold</ProgrammaticName>
 <EngineeringDescription>The air temperature in the cold aisle is either above [Cold Aisle Over Temp Threshold] or below [Cold Aisle Under Temp Threshold].  The event is deactivated when temperature is within the thresholds.

Event thresholds are specified in val_ext_tmp_overThrshldAisleCold and val_ext_tmp_underThrshldAisleCold.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_xCOLDA_mm</EngineeringReference>
 <DescriptionTextId>7210</DescriptionTextId>   <!--  7210 => "The air temperature in the cold aisle is either above [Cold Aisle Over Temp Threshold] or below [Cold Aisle Under Temp Threshold]."  -->
 <LabelTextId>7209</LabelTextId>   <!--  7209 => "Cold Aisle Temp Out of Range"  -->
 <EventDefn>
  <DataId>5508</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5509</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_opStateGroupA</ProgrammaticName>
 <EngineeringDescription>Current operational state of a group of fans.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xFG1STAT_mm</EngineeringReference>
 <DescriptionTextId>7212</DescriptionTextId>   <!--  7212 => "Current operational state of a group of fans."  -->
 <LabelTextId>7211</LabelTextId>   <!--  7211 => "Fan Group A State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4169</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5510</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_opStateGroupB</ProgrammaticName>
 <EngineeringDescription>Current operational state of a group of fans.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC__xFG2STAT_mm</EngineeringReference>
 <DescriptionTextId>7215</DescriptionTextId>   <!--  7215 => "Current operational state of a group of fans."  -->
 <LabelTextId>7214</LabelTextId>   <!--  7214 => "Fan Group B State"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4169</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5511</DataId>
 <DefnType>MultiStateDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>st_fan_modeEconomy</ProgrammaticName>
 <EngineeringDescription>Mode in which system secondary fans are to be controlled.
These are the environmental unit's blower fans.

Allowable modes:
Disabled - No economy control of secondary system fans.
Automatic - Secondary fan economy mode, controlled by internal algorithm.
Manual - Secondary fans turned off.</EngineeringDescription>
 <EngineeringReference></EngineeringReference>
 <DescriptionTextId>7217</DescriptionTextId>   <!--  7217 => "Mode in which system secondary fans are to be controlled."  -->
 <LabelTextId>7216</LabelTextId>   <!--  7216 => "Fan Economy Mode"  -->
 <MultiStateDefn>
  <EnumStateDefn_Id>4170</EnumStateDefn_Id>
 </MultiStateDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5512</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Released</EntryStatus>
 <ProgrammaticName>evt_sys_remShutdown</ProgrammaticName>
 <EngineeringDescription>Unit is shut down by a remote signal.  The event is deactivated when the signal is inactive.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_REMSHDO</EngineeringReference>
 <DescriptionTextId>7221</DescriptionTextId>   <!--  7221 => "Unit is shut down by a remote signal."  -->
 <LabelTextId>7220</LabelTextId>   <!--  7220 => "Remote Shutdown"  -->
 <EventDefn>
  <DataId>5512</DataId>
 </EventDefn>
</DataDictEntry>

<!-- Machine transferred from FDM 'iCOM_PA.xml' via Fdm2Xml.exe -->
<DataDictEntry>
 <DataId>5513</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Proposed</EntryStatus>
 <ProgrammaticName>evt_comp_capReduction</ProgrammaticName>
 <EngineeringDescription>Compressor capacity has been reduced. This may be caused by, but is not limited to: an external input signal, safety considerations, or system algorithmic control. The event is deactivated when full capacity is restored.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_WACOPOWRED</EngineeringReference>
 <DescriptionTextId>7223</DescriptionTextId>   <!--  7223 => "Compressor capacity has been reduced."  -->
 <LabelTextId>7222</LabelTextId>   <!--  7222 => "Compressor Capacity Reduced"  -->
 <EventDefn>
  <DataId>5513</DataId>
 </EventDefn>
</DataDictEntry>

<DataDictEntry>
 <DataId>5514</DataId>
 <DefnType>EventDefn</DefnType>
 <EntryStatus>Proposed</EntryStatus>
 <ProgrammaticName>evt_comp_lowPrsXdcrIssue</ProgrammaticName>
 <EngineeringDescription>Compressor low pressure transducer is disconnected or the signal is out of range. The event is deactivated when transducer signal is re-established.</EngineeringDescription>
 <EngineeringReference>tag=e2_dm_map:SC_AL_SUCTRx_mm</EngineeringReference>
 <DescriptionTextId>7225</DescriptionTextId>   <!--  7225 => "Compressor low pressure transducer is disconnected or the signal is out of range."  -->
 <LabelTextId>7224</LabelTextId>   <!--  7224 => "Compressor Low Pressure Transducer Issue"  -->
 <EventDefn>
  <DataId>5514</DataId>
 </EventDefn>
</DataDictEntry>

</Enp2DataDict>
